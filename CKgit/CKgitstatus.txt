This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of a subset of the repository's contents that is considered the most important context.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: .env*
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/
  workflows/
    ci.yml
    dieter-check.yml
    docs-check.yml
    studio-shell-smoke.yml
  pull_request_template.md
.husky/
  pre-commit
apps/
  app/
    app/
      api/
        auth/
          signout/
            route.ts
      auth/
        confirm/
          page.tsx
        login/
          page.tsx
        magic/
          route.ts
      invites/
        accept/
          page.tsx
      widgets/
        [publicId]/
          submissions/
            page.tsx
      workspaces/
        [id]/
          members/
            page.tsx
        page.tsx
      globals.css
      layout.tsx
      page.tsx
    lib/
      audit.ts
      rateLimiter.ts
      roles.ts
      supabase.ts
      supabaseServer.ts
      supabaseServer.ts.bak.2025-09-17T22:10:18Z
    public/
      dieter/
        README.md
      studio/
        index.html
        studio.css
        studio.js
    .gitignore
    .redeploy.txt
    middleware.ts
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
    vercel.json
  site/
    app/
      api/
        widgets/
          anonymous/
            route.ts
      it/
        widgets/
          contact-form/
            page.tsx
        page.tsx
      widgets/
        contact-form/
          Configurator.tsx
          ConfiguratorIT.tsx
          page.tsx
          SnippetBox.tsx
      layout.tsx
      page.tsx
      robots.ts
      sitemap.ts
      version.txt
    lib/
      supabase.ts
      supabaseAdmin.ts
    .redeploy.txt
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
dieter/
  components/
    accordion.css
    alert.css
    avatar.css
    badge.css
    banner.css
    breadcrumb.css
    button-group.css
    button.css
    card.css
    chip.css
    choice.css
    container.css
    divider.css
    drawer.css
    empty-state.css
    form-validation.css
    form.css
    icon-helpers.css
    icon.css
    index.ts
    input.css
    modal.css
    navbar.css
    pagination.css
    popover.css
    progress.css
    segmented.css
    select.css
    sidebar.css
    skeleton.css
    status.css
    stepper.css
    switch.css
    table.css
    tabs.css
    textarea.css
    toast.css
    toggle.css
    tooltip.css
    utilities.css
  icons/
    svg/
      archivebox.svg
      arrow-down.svg
      arrow-left-arrow-right.svg
      arrow-left.svg
      arrow-right.svg
      arrow-trianglehead-2-clockwise-rotate-90.svg
      arrow-trianglehead-clockwise.svg
      arrow-up-backward-square.svg
      arrow-up-bin.svg
      arrow-up-right-square.svg
      arrow-up.svg
      arrow-uturn-left.svg
      arrowshape-forward.svg
      arrowshape-left.svg
      bag.svg
      bell.svg
      checkmark-circle.svg
      chevron-down.svg
      chevron-left.svg
      chevron-right.svg
      chevron-up.svg
      circle-grid-2x1.svg
      circlebadge-2.svg
      clear.svg
      cloud-hail.svg
      delete-left.svg
      document.svg
      ellipsis-circle.svg
      eraser-line-dashed.svg
      eraser.svg
      externaldrive.svg
      folder-badge-plus.svg
      folder.svg
      gearshape.svg
      heart.svg
      humidity.svg
      link.svg
      minus.svg
      paperclip.svg
      paperplane.svg
      party-popper.svg
      pause.svg
      person-2.svg
      person.svg
      personalhotspot.svg
      play.svg
      plus.svg
      power.svg
      progress-indicator.svg
      rectangle-and-pencil-and-ellipsis.svg
      repeat.svg
      sparkles.svg
      square-and-arrow-up-on-square.svg
      square-and-arrow-up.svg
      stop.svg
      sun-max.svg
      trash.svg
    icons.json
  scripts/
    build-icons.mjs
  tokens/
    tokens.css
  design-system.md
  index.html
  package.json
  tokens.css
  tsconfig.json
documentation/
  systems/
    _template.md
    atlas.md
    berlin.md
    bob.md
    cairo.md
    copenhagen.md
    denver.md
    Dieter.md
    geneva.md
    helsinki.md
    lisbon.md
    michael.md
    milan.md
    oslo.md
    paris.md
    phoenix.md
    prague.md
    robert.md
    stockholm.md
    Studio.md
    tokyo.md
    venice.md
    zurich.md
  ADRdecisions.md
  clickeen-platform-architecture.md
  CONTEXT.md
  FailuresRCAs-IMPORTANT.md
  migrations.md
  Playbooks.md
  supabase-schema-sync.yml
  Techphases.md
  verceldeployments.md
  WhyClickeen.md
packages/
  embed-core/
    index.ts
    package.json
  studio-shell/
    src/
      ui/
        Icon.tsx
      index.js
      index.ts
      studio.css
    index.html
    package.json
    tsconfig.json
  widgets/
    contact-form.ts
    package.json
public/
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
scripts/
  build-dieter.js
  copy-dieter-assets.js
  e2e-prod-smoke.sh
  gen-icon-types.mjs
  link-dieter.js
  process-svgs.js
  scope-tokens.js
  stability-integrity-scan.zsh
  verify-svgs.js
services/
  api/
    app/
      api/
        healthz/
          route.ts
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
  embed/
    app/
      api/
        cfg/
          [publicId]/
            route.ts
        e/
          [publicId]/
            route.ts
        form/
          [publicId]/
            route.ts
        ingest/
          route.ts
    public/
      embed-bundle.js
    scripts/
      atlas-smoke.mjs
      e2e-real-widget.mjs
      smoke-form.mjs
    .gitignore
    .redeploy.txt
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
tools/
  ci/
    check-lockfile.cjs
    verify-pnpm-config.cjs
    verify-public-dieter-clean.cjs
    verify-vercel-config.cjs
  studioV0_stability.sh
  verify-studio-shell.cjs
.gitignore
.npmrc
.prettierrc.json
.stylelintignore
cleanup-verify-4-5-6.txt
components.json
eslint.config.mjs
package.json
playground.html
pnpm-workspace.yaml
postcss.config.mjs
repomix-output.txt
stylelint.config.cjs
tsconfig.base.json
tsconfig.json
turbo.json
vercel.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".github/workflows/ci.yml">
name: CI
on:
  push:
    branches: ["**"]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"
  pull_request:
    branches: ["**"]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Use packageManager version
        run: corepack install

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles(pnpm-lock.yaml) }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        run: pnpm -r -w run typecheck || true

      - name: Lint
        run: pnpm -r -w run lint || true

      - name: Build
        run: pnpm -r -w run build
</file>

<file path=".github/workflows/dieter-check.yml">
name: Dieter Guardrails
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"
  push:
    branches: [ "**" ]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"

jobs:
  guardrails:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Verify Corepack availability
        run: corepack --version || npm install -g corepack

      - name: Use packageManager version
        run: corepack install

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify toolchain
        run: |
          echo "Node: $(node -v)"
          echo "pnpm: $(pnpm -v)"
          test -f pnpm-lock.yaml

      - name: Install (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build Dieter and copy assets
        run: |
          pnpm --filter @ck/dieter build
          pnpm run build:assets

      - name: Fail on legacy Dieter imports
        run: |
          set -e
          # Detect ESM-style imports from legacy path
          if grep -R "from \(['\"]apps/app/dieter" --include="*.ts" --include="*.tsx" .; then
            echo "Legacy Dieter import detected (ESM-style)."; exit 1;
          fi
          # Detect CommonJS requires from legacy path
          if grep -R "require(.*['\"]apps/app/dieter" --include="*.ts" --include="*.tsx" .; then
            echo "Legacy Dieter import detected (CJS-style)."; exit 1;
          fi
          echo "✓ No legacy Dieter imports found."

      - name: Verify Dieter assets directory exists
        run: |
          set -e
          if [ -d apps/app/public/dieter ]; then
            echo "✓ Dieter assets directory exists"
          else
            echo "✗ Missing Dieter assets directory"
            ls -la apps/app/public || true
            exit 1
          fi

      - name: Verify Dieter asset reachable
        run: |
          set -e
          if [ -f apps/app/public/dieter/tokens.css ]; then
            echo "✓ Dieter assets accessible"
          else
            echo "✗ Dieter assets not found at apps/app/public/dieter/tokens.css"
            ls -la apps/app/public/dieter || true
            exit 1
          fi
</file>

<file path=".github/workflows/docs-check.yml">
name: docs-check

on:
  pull_request:
    paths:
      - "documentation/**"
      - "tools/docs/**"
      - ".github/workflows/docs-check.yml"
  push:
    branches: ["**"]
    paths:
      - "documentation/**"
      - "tools/docs/**"
      - ".github/workflows/docs-check.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Use the repo-declared packageManager version (pnpm) via Corepack
      - name: Enable Corepack
        run: corepack enable
      - name: Use packageManager version
        run: corepack install

      # Probe for documentation tree — skip the job if it’s not there
      - name: Probe docs tree
        id: probe
        shell: bash
        run: |
          if [ -d documentation ] && [ -d documentation/systems/core ]; then
            echo "skip=false" >> "$GITHUB_OUTPUT"
          else
            echo "No documentation/systems/core present — skipping docs validation."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate services index
        if: steps.probe.outputs.skip != 'true'
        run: pnpm -s node tools/docs/generate-services.mjs

      - name: Ensure SERVICES_INDEX.md is up to date
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          if ! git diff --quiet -- documentation/SERVICES_INDEX.md; then
            echo "Generator output is stale. Run: pnpm -s node tools/docs/generate-services.mjs and commit."
            exit 1
          fi

      - name: Validate CONTEXT references (skip staged)
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          missing=0
          for f in documentation/systems/core/*.md documentation/systems/supporting/*.md; do
            [ -e "$f" ] || continue
            name=$(basename "$f" .md)
            # skip if frontmatter contains staged: true (case-insensitive)
            if awk 'NR==1 && $0 ~ /^---/ {front=1; next} front && $0 ~ /^---/ {exit} front && tolower($0) ~ /staged:[[:space:]]*true/ {print "staged"; exit 0}' "$f" | grep -q staged; then
              echo "INFO: $name is staged; skipping"
              continue
            fi
            if ! grep -qi "$name" documentation/CONTEXT.md; then
              echo "Missing in CONTEXT.md: $name"; missing=1
            fi
          done
          exit $missing

      - name: Ensure deployments == 3
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          n=$(ls documentation/deployments/*.md 2>/dev/null | wc -l | tr -d ' ')
          test "$n" -eq 3 || (echo "Expected 3 deployments, got $n" && exit 1)
</file>

<file path=".github/workflows/studio-shell-smoke.yml">
name: StudioShell Smoke (CJS stability)

on:
  push:
    paths:
      - "packages/studio-shell/**"
      - "apps/app/**"
      - "tools/verify-studio-shell.cjs"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - ".github/workflows/studio-shell-smoke.yml"
  pull_request:
    paths:
      - "packages/studio-shell/**"
      - "apps/app/**"
      - "tools/verify-studio-shell.cjs"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - ".github/workflows/studio-shell-smoke.yml"

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Use packageManager version
        run: corepack prepare --activate

      - name: Show tool versions
        run: node -v && pnpm -v

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build Dieter
        run: pnpm --filter @ck/dieter build || echo "No build script, continuing"

      - name: Verify Dieter assets present in app
        run: test -d apps/app/public/dieter || echo "Dieter assets not required"

      - name: Build StudioShell (CJS)
        run: pnpm --filter @ck/studio-shell build

      - name: Verify build output exists
        run: test -f packages/studio-shell/dist/index.js || echo "[FAIL] Build did not produce dist/index.js"

      - name: Smoke verify from consumer context
        run: |
          cd apps/app
          node -e "const p=require.resolve('@ck/studio-shell'); console.log('RESOLVED:', p); if(!p.includes('dist/index.js')) console.error('[FAIL] Resolution missing dist/index.js')"
          node -e "const m=require('@ck/studio-shell'); console.log('Exports:', Object.keys(m)); if(!m.default || !m.StudioShell) console.error('[FAIL] Missing expected exports')"

      - name: Build App (Next.js)
        run: pnpm --filter @ck/app run build
</file>

<file path=".github/pull_request_template.md">
# PR Checklist — CTO Execution Gates

Before requesting review, confirm all are satisfied (see [docs/cto-execution-checklist-frontend.md](../docs/cto-execution-checklist-frontend.md)):

- [ ] Tokens-only: No raw hex/px; all vars via Dieter tokens.  
- [ ] Inter from Google Fonts only; no rsms.me, Roboto, Ubuntu.  
- [ ] Accessibility: focus rings, 44px touch, for/id + aria-describedby.  
- [ ] Theme safety: light/dark/data-theme="hc" render correctly; no flash.  
- [ ] Rem-based sizing; container queries preferred.  
- [ ] No CSS sprawl; classes start with diet- or text-.  
- [ ] Performance: minimal CSS/JS, no layout thrash.  
- [ ] File hygiene: only files in scope; no drive-by refactors.  
- [ ] CI green: Stylelint + font-source checks pass.  
- [ ] Self-test done: Inter loads from Google Fonts, tokens applied, no console errors.
</file>

<file path=".husky/pre-commit">
#!/usr/bin/env bash
set -euo pipefail

# Fail-soft docs generation guard

if [[ "${SKIP_DOCS_GENERATION:-}" == "1" ]]; then exit 0; fi
DOC_DIR="documentation"
GEN_SCRIPT="${DOCS_GEN_SCRIPT:-scripts/generate-docs.mjs}"
if [ -d "$DOC_DIR" ]; then
  if git diff --cached --name-only | grep -Eq "^(documentation/|scripts/generate-docs|tools/docs)"; then
    if [ -f "$GEN_SCRIPT" ]; then
      echo "[pre-commit] generating docs…"
      pnpm -s docs:generate || { echo "[pre-commit] WARN: docs generation failed — commit allowed"; exit 0; }
    else
      echo "[pre-commit] INFO: no generator script found, skipping"
    fi
  fi
fi
exit 0
</file>

<file path="apps/app/app/api/auth/signout/route.ts">
import { NextResponse } from 'next/server';
import { createSupabaseServer } from '@/lib/supabase';
export async function POST() {
  const supabase = createSupabaseServer();
  await supabase.auth.signOut();
  return NextResponse.json({ ok: true });
}
</file>

<file path="apps/app/app/auth/confirm/page.tsx">
import { createSupabaseServer } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

export default async function ConfirmPage() {
  // Supabase SSR client will read the code from the URL and set the session via cookies
  const supabase = createSupabaseServer();
  // Touch auth to ensure cookie set
  await supabase.auth.getUser();

  return (
    <main style={{padding:24}}>
      <h1>Signed in</h1>
      <p>Return to the dashboard: <a href="/">Home</a></p>
    </main>
  );
}
</file>

<file path="apps/app/app/auth/login/page.tsx">
'use client';
import { useState } from 'react';

export default function LoginPage() {
  const [email, setEmail] = useState('');
  const [sent, setSent] = useState(false);
  const [err, setErr] = useState<string|null>(null);

  async function sendMagicLink(e: React.FormEvent) {
    e.preventDefault();
    setErr(null);
    const res = await fetch('/auth/magic', {
      method: 'POST',
      body: JSON.stringify({ email }),
      headers: { 'content-type': 'application/json' }
    });
    if (res.ok) setSent(true);
    else setErr('Failed to send link');
  }

  return (
    <main style={{padding:24, maxWidth:420, margin:'0 auto'}}>
      <h1>Sign in</h1>
      {sent ? (
        <p>Check your email for a magic link.</p>
      ) : (
        <form onSubmit={sendMagicLink} style={{display:'grid', gap:12}}>
          <input
            type="email"
            placeholder="you@example.com"
            value={email}
            onChange={e=>setEmail(e.target.value)}
            required
            style={{padding:8, border:'1px solid #ddd', borderRadius:8}}
          />
          <button type="submit" style={{padding:'8px 12px', border:'1px solid #ddd', borderRadius:8}}>
            Send magic link
          </button>
          {err && <p style={{color:'crimson'}}>{err}</p>}
        </form>
      )}
    </main>
  );
}
</file>

<file path="apps/app/app/auth/magic/route.ts">
import { NextResponse } from 'next/server';
import { createSupabaseServer } from '@/lib/supabase';

export async function POST(req: Request) {
  const { email } = await req.json();
  const supabase = createSupabaseServer();
  const { error } = await supabase.auth.signInWithOtp({
    email,
    options: { emailRedirectTo: `${process.env.NEXT_PUBLIC_DASHBOARD_URL}/auth/confirm` }
  });
  if (error) return NextResponse.json({ error: error.message }, { status: 400 });
  return NextResponse.json({ ok: true });
}
</file>

<file path="apps/app/app/invites/accept/page.tsx">
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

async function acceptInvite(token: string, userId: string) {
  const db = createSupabaseServer();

  const { data: invite } = await db.from('invites')
    .select('workspace_id,email,role,token,expires_at,used_at,used_by')
    .eq('token', token).maybeSingle();
  if (!invite) return { ok: false, error: 'invalid_token' };
  if (invite.used_at || invite.used_by) return { ok: false, error: 'already_used' };
  if (invite.expires_at && new Date(invite.expires_at).getTime() < Date.now()) return { ok: false, error: 'expired' };

  await db.from('workspace_members').upsert({
    workspace_id: invite.workspace_id, user_id: userId, role: invite.role,
  });

  await db.from('invites').update({ used_at: new Date().toISOString(), used_by: userId }).eq('token', token);

  try {
    const { logAudit } = await import('@/lib/audit');
    await logAudit({
      action: 'invite_accepted',
      workspaceId: invite.workspace_id,
      entityType: 'invite',
      entityId: token,
      metadata: { email: invite.email, role: invite.role },
      userId
    });
  } catch {}

  return { ok: true, workspaceId: invite.workspace_id };
}

export default async function AcceptPage({ searchParams }: { searchParams: { token?: string }}) {
  const token = searchParams?.token || '';
  const user = await getCurrentUser();
  if (!token) return <main style={{ padding: 24 }}><h1>Invite</h1><p>Missing token.</p></main>;
  if (!user) return <main style={{ padding: 24 }}><h1>Invite</h1><p>You must be signed in to accept the invite. <a href="/auth/login">Sign in</a></p></main>;
  const res = await acceptInvite(token, user.id);
  if (!res.ok) return <main style={{ padding: 24 }}><h1>Invite</h1><p>{res.error}</p></main>;
  return null; // redirect handled by parent or we could redirect here
}
</file>

<file path="apps/app/app/widgets/[publicId]/submissions/page.tsx">
export const dynamic = 'force-dynamic';
async function getData(publicId: string) {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const key = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  const headers = { apikey: key, Authorization: `Bearer ${key}` };
  // Find widget UUID by publicId
  const wi = await fetch(`${url}/rest/v1/widget_instances?public_id=eq.${publicId}&select=id&limit=1`, { headers }).then(r=>r.json());
  const id = wi?.[0]?.id;
  if (!id) return [];
  // Pull last 50 submissions
  return fetch(`${url}/rest/v1/form_submissions?widget_instance_id=eq.${id}&order=created_at.desc&limit=50`, { headers })
    .then(r=>r.json()).catch(()=>[]);
}
export default async function Page({ params }: { params: { publicId: string }}) {
  const rows = await getData(params.publicId);
  return (
    <main style={{padding:24}}>
      <h1>Submissions for {params.publicId}</h1>
      <ul>
        {rows.map((r:any)=>(
          <li key={r.id}><code>{new Date(r.created_at).toLocaleString()}</code> — <pre style={{display:'inline'}}>{JSON.stringify(r.payload)}</pre></li>
        ))}
      </ul>
    </main>
  );
}
</file>

<file path="apps/app/app/workspaces/[id]/members/page.tsx">
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';
import { isOwnerOrAdmin } from '@/lib/roles';
import { revalidatePath } from 'next/cache';
import { headers } from 'next/headers';
import { RateLimiter } from '@/lib/rateLimiter';
import { logAudit } from '@/lib/audit';

export const dynamic = 'force-dynamic';
const inviteLimiter = new RateLimiter(60_000, 5); // 5/min per IP

async function getMyMembership(workspaceId: string, userId: string) {
  const db = createSupabaseServer();
  const { data } = await db
    .from('workspace_members')
    .select('role')
    .eq('workspace_id', workspaceId)
    .eq('user_id', userId)
    .maybeSingle();
  return data?.role ?? null;
}

async function fetchData(workspaceId: string) {
  const db = createSupabaseServer();
  const [{ data: ws }, { data: members }, { data: invites }] = await Promise.all([
    db.from('workspaces').select('id,name,created_by').eq('id', workspaceId).single(),
    db.from('workspace_members').select('user_id,role,created_at').eq('workspace_id', workspaceId).order('created_at'),
    db.from('invites').select('email,role,token,expires_at,created_at,used_at,used_by').eq('workspace_id', workspaceId).order('created_at', { ascending: false }),
  ]);
  return { ws, members: members || [], invites: invites || [] };
}

async function createInvite(formData: FormData) {
  'use server';
  const workspaceId = String(formData.get('workspaceId') || '');
  const email = String(formData.get('email') || '').trim().toLowerCase();
  const role = (String(formData.get('role') || 'editor') as any);
  if (!workspaceId || !email) return;

  const ip = headers().get('x-forwarded-for') || 'unknown';
  if (!inviteLimiter.check(ip)) throw new Error('rate_limited');
  const ok = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  if (!ok) throw new Error('invalid_email');

  const db = createSupabaseServer();
  const user = await getCurrentUser();
  if (!user) throw new Error('not_authenticated');

  // Permission check via data, enforced again by RLS
  const { data: me } = await db
    .from('workspace_members')
    .select('role')
    .eq('workspace_id', workspaceId)
    .eq('user_id', user.id)
    .maybeSingle();
  if (!me || !['owner','admin'].includes(me.role)) throw new Error('not_authorized');

  const nowIso = new Date().toISOString();
  const { data: existing } = await db
    .from('invites')
    .select('id')
    .eq('workspace_id', workspaceId)
    .eq('email', email)
    .is('used_at', null)
    .gte('expires_at', nowIso)
    .maybeSingle();
  if (existing) throw new Error('invite_exists');

  const token = crypto.randomUUID();
  const { error } = await db.from('invites').insert({
    workspace_id: workspaceId, email, role, token, created_by: user.id,
    expires_at: new Date(Date.now() + 7*24*60*60*1000).toISOString(),
  });
  if (error) throw error;

  await logAudit({
    action: 'invite_created',
    workspaceId,
    entityType: 'invite',
    entityId: token,
    metadata: { email, role },
    userId: user.id
  });

  revalidatePath(`/workspaces/${workspaceId}/members`);
}

export default async function MembersPage({ params }: { params: { id: string }}) {
  const workspaceId = params.id;
  const user = await getCurrentUser();
  if (!user) {
    return <main style={{ padding:24 }}><h1>Workspace Members</h1><p>You must be signed in.</p></main>;
  }
  const myRole = await getMyMembership(workspaceId, user.id);
  const { ws, members, invites } = await fetchData(workspaceId);
  const inviteUrlBase = process.env.NEXT_PUBLIC_DASHBOARD_URL || 'http://localhost:3001';

  return (
    <main style={{ padding: 24, display: 'grid', gap: 24 }}>
      <h1>Workspace Members</h1>
      {ws ? (
        <p>
          <b>{ws.name}</b> (id: {ws.id})
          {myRole && <span style={{ marginLeft: 8, fontSize: 12, color: '#777', padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}>Role: {myRole}</span>}
        </p>
      ) : <p>Workspace not found</p>}

      <section>
        <h2>Members</h2>
        <table style={{ width: '100%', borderCollapse:'collapse' }}>
          <thead><tr><th align="left">User ID</th><th align="left">Role</th><th align="left">Joined</th></tr></thead>
          <tbody>
            {members.map((m: any) => (
              <tr key={m.user_id}>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{m.user_id}</td>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{m.role}</td>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{new Date(m.created_at).toLocaleString()}</td>
              </tr>
            ))}
            {!members.length && <tr><td colSpan={3} style={{ padding: 8, color:'#777' }}>No members yet.</td></tr>}
          </tbody>
        </table>
      </section>

      <section>
        <h2>Invite a teammate</h2>
        {isOwnerOrAdmin(myRole) ? (
          <form action={createInvite} style={{ display: 'flex', gap: 12, flexWrap:'wrap' }}>
            <input type="hidden" name="workspaceId" value={workspaceId} />
            <input name="email" placeholder="teammate@example.com" required style={{ padding:8, border:'1px solid #ddd', borderRadius:8 }} />
            <select name="role" defaultValue="editor" style={{ padding:8, border:'1px solid #ddd', borderRadius:8 }}>
              <option value="editor">Editor</option>
              <option value="viewer">Viewer</option>
              <option value="admin">Admin</option>
            </select>
            <button type="submit" style={{ padding:'8px 12px', border:'1px solid #ddd', borderRadius:8 }}>Create invite</button>
          </form>
        ) : (
          <p style={{ color:'#777' }}>Only workspace owners or admins can send invitations.</p>
        )}
      </section>

      <section>
        <h2>Pending invites</h2>
        <table style={{ width: '100%', borderCollapse:'collapse' }}>
          <thead><tr><th align="left">Email</th><th align="left">Role</th><th align="left">Token</th><th align="left">Accept link</th><th align="left">Created</th></tr></thead>
          <tbody>
            {invites.map((i: any) => {
              const link = `${inviteUrlBase}/invites/accept?token=${encodeURIComponent(i.token)}`;
              return (
                <tr key={i.token}>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{i.email}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{i.role}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee', fontFamily:'ui-monospace, SFMono-Regular, Menlo, monospace' }}>{i.token}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}><a href={link} target="_blank">Accept</a></td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{new Date(i.created_at).toLocaleString()}</td>
                </tr>
              );
            })}
            {!invites.length && <tr><td colSpan={5} style={{ padding: 8, color:'#777' }}>No invites yet.</td></tr>}
          </tbody>
        </table>
      </section>
    </main>
  );
}
</file>

<file path="apps/app/app/workspaces/page.tsx">
import Link from 'next/link';
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

export default async function WorkspacesIndex() {
  const user = await getCurrentUser();
  if (!user) {
    return <main style={{ padding:24 }}><h1>My Workspaces</h1><p>You must be signed in.</p></main>;
  }
  const db = createSupabaseServer();

  // fetch workspaces where current user is a member
  const { data: rows, error } = await db
    .from('workspace_members')
    .select('workspace_id, role, workspaces!inner(id, name)')
    .eq('user_id', user.id)
    .order('created_at', { ascending: false });

  if (error) {
    return <main style={{ padding:24 }}><h1>My Workspaces</h1><p style={{color:'crimson'}}>Error loading workspaces.</p></main>;
  }

  const items = (rows || []).map((r: any) => ({
    id: r.workspaces?.id,
    name: r.workspaces?.name ?? r.workspace_id,
    role: r.role,
  }));

  return (
    <main style={{ padding:24, display:'grid', gap:16 }}>
      <h1>My Workspaces</h1>
      {!items.length && (
        <p style={{ color:'#555' }}>You're not a member of any workspaces yet.</p>
      )}
      <ul style={{ listStyle:'none', padding:0, margin:0, display:'grid', gap:12 }}>
        {items.map((w: any) => (
          <li key={w.id} style={{ border:'1px solid #eee', borderRadius:10, padding:12 }}>
            <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>
              <div>
                <div style={{ fontWeight:600 }}>{w.name}</div>
                <div style={{ color:'#777', fontSize:13 }}>Role: {w.role}</div>
              </div>
              <div style={{ display:'flex', gap:8 }}>
                <Link href={`/workspaces/${w.id}/members`} className="btn">Members</Link>
                <Link href={`/workspaces/${w.id}`} className="btn">Overview</Link>
              </div>
            </div>
          </li>
        ))}
      </ul>
    </main>
  );
}
</file>

<file path="apps/app/app/globals.css">
/* Basic global styles */
.btn {
  display: inline-block;
  padding: 6px 10px;
  border: 1px solid #ddd;
  border-radius: 8px;
  background: #fff;
  text-decoration: none;
  color: inherit;
  font-size: 14px;
}

.btn:hover {
  background: #f5f5f5;
}

/* Icon sizing + color (fallbacks if tokens missing) */
.studio-icon {
  display: inline-block;
  color: var(--studio-fg-muted, currentColor);
  inline-size: var(--studio-icon-size, 16px);
  block-size: var(--studio-icon-size, 16px);
}
.studio-icon[data-size="sm"] { --studio-icon-size: var(--studio-size-sm, 14px); }
.studio-icon[data-size="md"] { --studio-icon-size: var(--studio-size-md, 16px); }
.studio-icon[data-size="lg"] { --studio-icon-size: var(--studio-size-lg, 20px); }

.studio-icon--loading,
.studio-icon--missing {
  inline-size: var(--studio-icon-size, 16px);
  block-size: var(--studio-icon-size, 16px);
  line-height: var(--studio-icon-size, 16px);
  text-align: center;
}
</file>

<file path="apps/app/app/layout.tsx">
import Link from 'next/link';

export const metadata = { title: 'Clickeen Dashboard' };

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body style={{ fontFamily: 'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto', color: '#111' }}>
        <header style={{ display:'flex', alignItems:'center', justifyContent:'space-between', padding:'12px 16px', borderBottom:'1px solid #eee' }}>
          <nav style={{ display:'flex', gap:16 }}>
            <Link href="/">Dashboard</Link>
            <Link href="/workspaces">My Workspaces</Link>
          </nav>
          <form action="/api/auth/signout" method="post">
            <button type="submit" style={{ padding:'6px 10px', border:'1px solid #ddd', borderRadius:'8px', background:'#fff' }}>Sign out</button>
          </form>
        </header>
        {children}
      </body>
    </html>
  );
}
</file>

<file path="apps/app/app/page.tsx">
export default function Page(){
  const demoWs = '00000000-0000-0000-0000-000000000001';
  return (
    <main style={{padding:24, display:'grid', gap:12}}>
      <h1>Dashboard</h1>
      <p><a href={`/workspaces/${demoWs}/members`}>Open demo workspace members →</a></p>
      <p><a href="/workspaces">My Workspaces →</a></p>
    </main>
  );
}
</file>

<file path="apps/app/lib/audit.ts">
import { headers } from 'next/headers';
import { supabaseAdmin } from './supabaseServer';

export async function logAudit(input: {
  action: string;
  workspaceId?: string;
  entityType?: string;
  entityId?: string;
  metadata?: Record<string, any>;
  userId?: string; // dev shim (DEV_USER_ID)
}) {
  try {
    const db = supabaseAdmin(); // dev-only OK
    const h = headers();
    const ip = h.get('x-forwarded-for')?.split(',')[0] || null;
    const ua = h.get('user-agent') || null;

    await db.from('audit_logs').insert({
      workspace_id: input.workspaceId ?? null,
      user_id: input.userId ?? null,
      action: input.action,
      entity_type: input.entityType ?? null,
      entity_id: input.entityId ?? null,
      metadata: input.metadata ?? null,
      ip_address: ip,
      user_agent: ua,
    });
  } catch (e) {
    console.error('audit log failed (ignored):', e);
  }
}
</file>

<file path="apps/app/lib/rateLimiter.ts">
export class RateLimiter {
  private attempts = new Map<string, number[]>();
  constructor(private windowMs: number, private max: number) {}

  check(key: string) {
    const now = Date.now();
    const arr = this.attempts.get(key) || [];
    const recent = arr.filter(t => t > now - this.windowMs);
    if (recent.length >= this.max) return false;
    recent.push(now);
    this.attempts.set(key, recent);
    if (recent.length === 1 || Math.random() < 0.01) this.cleanup();
    return true;
  }

  private cleanup() {
    const now = Date.now();
    for (const [k, v] of this.attempts.entries()) {
      const keep = v.filter(t => t > now - this.windowMs);
      if (keep.length) this.attempts.set(k, keep);
      else this.attempts.delete(k);
    }
  }
}
</file>

<file path="apps/app/lib/roles.ts">
export function isOwnerOrAdmin(role?: string | null) {
  return role === 'owner' || role === 'admin';
}
</file>

<file path="apps/app/lib/supabase.ts">
import { createServerClient, type CookieOptions } from '@supabase/ssr';
import { cookies, headers } from 'next/headers';

export function createSupabaseServer() {
  const cookieStore = cookies();
  return createServerClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        get(name: string) {
          return cookieStore.get(name)?.value;
        },
        set(name: string, value: string, options: CookieOptions) {
          cookieStore.set({ name, value, ...options });
        },
        remove(name: string, options: CookieOptions) {
          cookieStore.set({ name, value: '', ...options });
        },
      },
    }
  );
}

export async function getCurrentUser() {
  const supabase = createSupabaseServer();
  const { data: { user } } = await supabase.auth.getUser();
  return user ?? null;
}
</file>

<file path="apps/app/lib/supabaseServer.ts">
import { createClient } from '@supabase/supabase-js';

// DEPRECATED: Use createSupabaseServer() from ./supabase.ts instead
// This is kept only for dev scripts that need service role access
export function supabaseAdmin() {
  if (process.env.NODE_ENV === 'production') {
    throw new Error('Service role client should not be used in production dashboard');
  }
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  return createClient(url, serviceKey, { auth: { persistSession: false }});
}

// PHASE1-GUARD: block service-role outside local dev (non-throwing at import-time)
const __env = { NODE_ENV: process.env.NODE_ENV, VERCEL_ENV: process.env.VERCEL_ENV } as const;
if (__env.VERCEL_ENV === 'production' || __env.VERCEL_ENV === 'preview' || __env.NODE_ENV !== 'development') {
  // Do not crash build/import; warn loudly. Actual usage must be removed/migrated.
  console.warn('[SECURITY] Service role client is disabled outside local development — build continues. Do not use at runtime.');
}

// PHASE1: marker — service role not allowed outside local dev. Usage must be migrated to Paris (c-keen-api).
export const __SERVICE_ROLE_DISABLED =
  (__env.VERCEL_ENV === 'production' || __env.VERCEL_ENV === 'preview' || __env.NODE_ENV !== 'development');
</file>

<file path="apps/app/lib/supabaseServer.ts.bak.2025-09-17T22:10:18Z">
import { createClient } from '@supabase/supabase-js';

// DEPRECATED: Use createSupabaseServer() from ./supabase.ts instead
// This is kept only for dev scripts that need service role access
export function supabaseAdmin() {
  if (process.env.NODE_ENV === 'production') {
    throw new Error('Service role client should not be used in production dashboard');
  }
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  return createClient(url, serviceKey, { auth: { persistSession: false }});
}
</file>

<file path="apps/app/public/dieter/README.md">
# Generated assets

This folder is populated by the Dieter copy step. Do not commit files here.
</file>

<file path="apps/app/public/studio/index.html">
<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Studio</title>
    <link rel="stylesheet" href="/studio/studio.css" />
    <link rel="stylesheet" href="/dieter/components/icon.css" />
    <link rel="stylesheet" href="/dieter/components/icon-helpers.css" />
    <link rel="stylesheet" href="/dieter/components/segmented.css" />
  </head>
  <body>
    <header class="studio-topbar" role="banner">
      <nav class="studio-topbar__left">
        <a class="studio-logo" href="/">Clickeen</a>
        <span class="studio-title">Lorem Ipsum</span>
      </nav>
      <div class="studio-topbar__right" role="toolbar" aria-label="Studio controls"></div>
    </header>

    <main class="studio-grid" data-left="open" data-right="open" role="main">
      <aside class="panel panel--left" aria-label="Left Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/folder-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__actions">
            <button class="icon-btn" data-collapse="left" title="Collapse left" aria-label="Collapse left"><img class="diet-icon diet-icon--sm" src="/dieter/icons/chevron-left-16.svg" alt="" /></button>
          </div>
        </div>
        <div class="panel__body">Lorem Ipsum</div>
      </aside>

      <section class="panel panel--center" aria-label="Center Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/pencil-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__controls">
            <div class="diet-segmented" role="tablist" aria-label="Theme" id="segTheme">
              <button role="tab" aria-selected="true" data-theme="light" title="Light"><img class="diet-icon diet-icon--sm" src="/dieter/icons/sun-16.svg" alt="" /><span class="sr-only">Light</span></button>
              <button role="tab" aria-selected="false" data-theme="dark" title="Dark"><img class="diet-icon diet-icon--sm" src="/dieter/icons/moon-16.svg" alt="" /><span class="sr-only">Dark</span></button>
            </div>
            <div class="diet-segmented" role="tablist" aria-label="Viewport" id="segViewport">
              <button role="tab" aria-selected="true" data-viewport="desktop" title="Desktop"><img class="diet-icon diet-icon--sm" src="/dieter/icons/desktop-16.svg" alt="" /><span class="sr-only">Desktop</span></button>
              <button role="tab" aria-selected="false" data-viewport="mobile" title="Mobile"><img class="diet-icon diet-icon--sm" src="/dieter/icons/phone-16.svg" alt="" /><span class="sr-only">Mobile</span></button>
            </div>
          </div>
        </div>
        <div class="panel__body">
          <div id="centerPreview" class="preview"><div class="preview__placeholder">Lorem Ipsum</div></div>
        </div>
      </section>

      <aside class="panel panel--right" aria-label="Right Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/wrench-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__actions">
            <button class="icon-btn" id="copyBtn" title="Copy" aria-label="Copy"><img class="diet-icon diet-icon--sm" src="/dieter/icons/copy-16.svg" alt="" /></button>
            <button class="icon-btn" data-collapse="right" title="Collapse right" aria-label="Collapse right"><img class="diet-icon diet-icon--sm" src="/dieter/icons/chevron-right-16.svg" alt="" /></button>
          </div>
        </div>
        <div class="panel__body">Lorem Ipsum</div>
      </aside>
    </main>

    <script src="/studio/studio.js" defer></script>
  </body>
  
</html>
</file>

<file path="apps/app/public/studio/studio.css">
/* Studio Shell — Apple canvas, flat white components */
:root{
  --bg:#f5f5f7; --panel:#fff; --text:#1d1d1f; --muted:#6e6e73; --topbar-h:52px; --left-w:280px; --right-w:320px;
  --color-bg:#fff; --color-surface:#fff; --color-border:#e5e7eb; --color-text-primary:#1f2937; --state-hover:rgba(0,0,0,.06); --state-press:rgba(0,0,0,.12);
  --focus-ring-color:#2563eb; --focus-ring-width:2px; --color-primary:#2563eb; --color-on-primary:#fff;
}
html[data-theme="dark"]{
  --bg:#0f1115; --panel:#111318; --text:#e5e7eb; --muted:#9aa1ab;
  --color-bg:#0f1115; --color-surface:#111318; --color-border:#1f242c; --color-text-primary:#e5e7eb; --state-hover:rgba(255,255,255,.06); --state-press:rgba(255,255,255,.12);
  --focus-ring-color:#60a5fa; --color-primary:#60a5fa; --color-on-primary:#0b0f1a;
}
*{ box-sizing:border-box } html,body{ height:100% }
body{ margin:0; background:var(--bg); color:var(--text); font:14px/1.45 system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,"Apple Color Emoji","Segoe UI Emoji" }

/* Top bar */
.studio-topbar{ height:var(--topbar-h); display:flex; align-items:center; justify-content:space-between; padding:0 14px; background:#fff }
.studio-topbar__left{ display:flex; align-items:center; gap:10px }
.studio-logo{ color:var(--text); text-decoration:none; font-weight:600 }
.studio-title{ color:var(--muted) }
.studio-topbar__right{ display:flex; align-items:center; gap:10px }

/* Grid */
.studio-grid{ display:grid; grid-template-columns:var(--left-w) 1fr var(--right-w); gap:12px; padding:12px; height:calc(100vh - var(--topbar-h)); min-height:420px }
.studio-grid[data-left="closed"] .panel--left{ display:none }
.studio-grid[data-right="closed"] .panel--right{ display:none }

/* Panels */
.panel{ background:var(--panel); display:flex; flex-direction:column; min-width:0; min-height:0 }
.panel__header{ display:flex; align-items:center; gap:8px; padding:10px 12px; background:#fff }
.panel__icon .diet-icon{ display:inline-block }
.panel__title{ font-size:12px; color:var(--muted) }
.panel__actions, .panel__controls{ margin-left:auto; display:flex; gap:10px; align-items:center }
.panel__body{ padding:12px }

.icon-btn{ appearance:none; border:0; background:#fff; color:var(--text); width:28px; height:28px; display:grid; place-items:center; border-radius:6px; cursor:pointer }
.icon-btn:hover{ background:#f2f2f3 }

/* Preview */
.preview{ width:100%; height:100% }
.preview.is-mobile{ width:390px; margin-inline:auto }
.preview__placeholder{ text-align:center; color:var(--muted); padding:24px }

/* A11y */
.sr-only{ position:absolute; width:1px; height:1px; padding:0; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0 }

@media (max-width:1100px){ .studio-grid{ grid-template-columns:var(--left-w) 1fr } }
@media (max-width:720px){ .studio-grid{ grid-template-columns:1fr } .panel--left{ display:none } }
</file>

<file path="apps/app/public/studio/studio.js">
(() => {
  const root = document.documentElement;
  const grid = document.querySelector('.studio-grid');
  const preview = document.getElementById('centerPreview');

  // Theme segmented (Light/Dark)
  const segTheme = document.getElementById('segTheme');
  segTheme?.querySelectorAll('button[role="tab"]').forEach(btn => {
    btn.addEventListener('click', () => {
      segTheme.querySelectorAll('button[role="tab"]').forEach(b => b.setAttribute('aria-selected','false'));
      btn.setAttribute('aria-selected','true');
      const theme = btn.getAttribute('data-theme') || 'light';
      root.setAttribute('data-theme', theme);
      window.dispatchEvent(new CustomEvent('studio:theme', { detail: { theme } }));
    });
  });

  // Viewport segmented (Desktop/Mobile)
  const segViewport = document.getElementById('segViewport');
  segViewport?.querySelectorAll('button[role="tab"]').forEach(btn => {
    btn.addEventListener('click', () => {
      segViewport.querySelectorAll('button[role="tab"]').forEach(b => b.setAttribute('aria-selected','false'));
      btn.setAttribute('aria-selected','true');
      const mode = btn.getAttribute('data-viewport') || 'desktop';
      if (mode === 'mobile') preview?.classList.add('is-mobile'); else preview?.classList.remove('is-mobile');
      window.dispatchEvent(new CustomEvent('studio:viewport', { detail: { mode } }));
    });
  });

  // Panel collapse (data attributes drive layout)
  document.querySelectorAll('[data-collapse]').forEach(btn => {
    btn.addEventListener('click', () => {
      const side = btn.getAttribute('data-collapse');
      if (!side || !grid) return;
      const key = side === 'left' ? 'left' : 'right';
      const isClosed = (grid.getAttribute(`data-${key}`) === 'closed');
      grid.setAttribute(`data-${key}`, isClosed ? 'open' : 'closed');
      window.dispatchEvent(new CustomEvent('studio:panel', { detail: { side: key, collapsed: !isClosed } }));
    });
  });

  // Copy button stub
  document.getElementById('copyBtn')?.addEventListener('click', () => {
    console.log('copy triggered');
  });
})();
</file>

<file path="apps/app/.gitignore">
.vercel
</file>

<file path="apps/app/.redeploy.txt">
2025-09-02T03:24:37Z
</file>

<file path="apps/app/middleware.ts">
import { NextResponse, type NextRequest } from 'next/server';
import { createServerClient, type CookieOptions } from '@supabase/ssr';

const PUBLIC_PATHS = [
  '/auth/login',
  '/auth/confirm',
  '/auth/magic',
  '/invites/accept',
  '/favicon.ico',
  '/robots.txt',
  '/sitemap.xml',
  '/manifest.webmanifest',
  '/_next', // static assets
];

function isPublic(pathname: string) {
  return PUBLIC_PATHS.some((p) => pathname === p || pathname.startsWith(p));
}

export async function middleware(request: NextRequest) {
  const pathname = request.nextUrl.pathname;

  // Create a single pass-through response for the lifetime of this request
  const response = NextResponse.next({
    request: { headers: request.headers },
  });

  // Always allow public paths through
  if (isPublic(pathname)) return response;

  // Never break the site if envs are missing in Preview
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const anon = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  if (!url || !anon) {
    // Soft-allow: do not block, but don't crash middleware
    return response;
  }

  // Single response instance is created above

  try {
    const supabase = createServerClient(url, anon, {
      cookies: {
        get(name: string) {
          return request.cookies.get(name)?.value;
        },
        set(name: string, value: string, options: CookieOptions) {
          response.cookies.set({ name, value, ...options });
        },
        remove(name: string, options: CookieOptions) {
          response.cookies.set({ name, value: '', ...options });
        },
      },
    });

    const { data: { user }, error } = await supabase.auth.getUser();

    if (error) {
      // Don't throw from middleware – just allow and log
      console.error('supabase.auth.getUser error in middleware:', error);
      return response;
    }

    if (!user) {
      const loginUrl = new URL('/auth/login', request.url);
      loginUrl.searchParams.set('next', pathname);
      return NextResponse.redirect(loginUrl);
    }

    return response;
  } catch (err) {
    // Last-resort guard: never 500 the app from middleware
    console.error('Middleware fatal guard:', err);
    return NextResponse.next();
  }
}

// Only run on real app routes, skip assets and the auth callback
export const config = {
  matcher: [
    '/((?!_next/static|_next/image|favicon.ico|auth/callback).*)',
  ],
};
</file>

<file path="apps/app/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="apps/app/next.config.mjs">
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    serverComponentsExternalPackages: [],
  },
  async redirects() {
    return [
      // Ensure /studio loads the static host shell in /public/studio/index.html
      { source: "/studio", destination: "/studio/index.html", permanent: true },
    ];
  },
  headers: async () => [{
    source: "/(.*)",
    headers: [
      { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
      { key: "Permissions-Policy", value: "camera=(), microphone=(), geolocation=()" },
      { key: "Content-Security-Policy", value: "default-src 'self'; frame-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" }
    ]
  }]
};

export default nextConfig;
</file>

<file path="apps/app/package.json">
{
  "name": "@ck/app",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3001",
    "build": "next build",
    "start": "next start -p 3001",
    "postinstall": "echo 'no symlink; copy-on-build per ADR-005'"
  },
  "dependencies": {
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.45.0",
    "@ck/dieter": "workspace:*",
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "@ck/studio-shell": "workspace:*"
  },
  "devDependencies": {
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "typescript": "^5.4.5"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="apps/app/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "target": "es2015",
    "downlevelIteration": true,
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "./*"
      ]
    },
    "plugins": [
      {
        "name": "next"
      }
    ],
    "strictNullChecks": true
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="apps/app/vercel.json">
{
  "buildCommand": "cd ../../ && pnpm build --filter @ck/app",
  "devCommand": "cd ../../ && pnpm dev --filter @ck/app",
  "installCommand": "cd ../../ && pnpm install",
  "framework": "nextjs"
}
</file>

<file path="apps/site/app/api/widgets/anonymous/route.ts">
import { NextResponse } from 'next/server';
import { createClient } from '@supabase/supabase-js';
import { nanoid } from 'nanoid';

export async function POST(req: Request) {
  try {
    const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const key = process.env.SUPABASE_SERVICE_ROLE_KEY;
    if (!url || !key) {
      console.error('Missing NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY');
      return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
    }
    const supabase = createClient(url, key, { auth: { persistSession: false } });

    const body = await req.json().catch(() => ({} as any));
    const email: string = body?.email || '';
    const type: string = body?.type || 'contact-form';
    const config = (body?.config ?? {}) as Record<string, unknown>;

    const { data, error } = await supabase.rpc('create_widget_with_instance', {
      p_name: `Anonymous Widget - ${email}`,
      p_type: type,
      p_config: config,
    });

    if (error) {
      console.error('RPC error:', error.message || error);
      return NextResponse.json({ error: 'Internal server error', detail: error.message }, { status: 500 });
    }

    return NextResponse.json({
      publicKey: (data as any)?.public_key,
      publicId: (data as any)?.public_id
    });
  } catch (e) {
    console.error('Anon create failed:', e);
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
  }
}
</file>

<file path="apps/site/app/it/widgets/contact-form/page.tsx">
'use client';

import { useState } from 'react';
import ConfiguratorIT from '@/app/widgets/contact-form/ConfiguratorIT';

// Client component for the snippet box
function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const [copied, setCopied] = useState(false);
  
  const scriptSrc = isDev 
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://c-keen-embed.vercel.app/api/e/${publicId}?v=${version}`;
  
  const snippet = `<div id="ckeen-${publicId}"></div>
<script async defer src="${scriptSrc}"></script>`;

  const copyToClipboard = async () => {
    await navigator.clipboard.writeText(snippet);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <div style={{ margin: '24px 0' }}>
      <textarea
        value={snippet}
        readOnly
        style={{
          width: '100%',
          minHeight: '80px',
          fontFamily: 'monospace',
          fontSize: '14px',
          padding: '12px',
          border: '1px solid #e1e5e9',
          borderRadius: '8px',
          backgroundColor: '#f8f9fa',
          resize: 'vertical'
        }}
      />
      <button
        onClick={copyToClipboard}
        style={{
          marginTop: '8px',
          padding: '8px 16px',
          backgroundColor: copied ? '#28a745' : '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          fontSize: '14px'
        }}
      >
        {copied ? 'Copiato!' : 'Copia'}
      </button>
    </div>
  );
}

// Client component for email capture and snippet generation
function GetSnippetBox() {
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [generatedSnippet, setGeneratedSnippet] = useState('');
  const [generatedPublicId, setGeneratedPublicId] = useState('');

  const handleGetSnippet = async () => {
    if (!email) {
      setError('Inserisci la tua email');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config: {
            // Default config for preview
            theme: 'light',
            position: 'bottom-right'
          }
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Impossibile generare lo snippet');
      }

      const { publicId, publicKey } = await response.json();
      setGeneratedPublicId(publicId);
      
      const snippet = `<div id="ckeen-${publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${publicKey}?v=1"></script>`;
      
      setGeneratedSnippet(snippet);
      // Minimal hint (dev console) for direct form smoke
      console.log('PublicId for form POST:', publicId);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Qualcosa è andato storto');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={{ margin: '24px 0' }}>
      {!generatedSnippet ? (
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end' }}>
          <div style={{ flex: '1', minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              La tua email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="tua@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: isLoading ? '#ccc' : '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            {isLoading ? 'Generando...' : 'Ottieni Snippet'}
          </button>
        </div>
      ) : (
        <div>
          <textarea
            value={generatedSnippet}
            readOnly
            style={{
              width: '100%',
              minHeight: '80px',
              fontFamily: 'monospace',
              fontSize: '14px',
              padding: '12px',
              border: '1px solid #e1e5e9',
              borderRadius: '8px',
              backgroundColor: '#f8f9fa',
              resize: 'vertical'
            }}
          />
          <p style={{ fontSize: '14px', color: '#666', marginTop: '8px' }}>
            Vuoi modificarlo e salvarlo? Puoi creare un account più tardi — il widget funziona subito.
          </p>
        </div>
      )}
      {error && (
        <p style={{ color: '#dc3545', fontSize: '14px', marginTop: '8px' }}>
          {error}
        </p>
      )}
    </div>
  );
}

const PUBLIC_ID = process.env.DEMO_PUBLIC_ID || 'DEMO';
const EMBED_VERSION = Number(process.env.EMBED_VERSION) || 1;
const isDev = process.env.NODE_ENV === 'development';

export default function Page() {
  return (
    <main style={{ maxWidth: '800px', margin: '0 auto', padding: '24px' }}>
      {/* Live Demo */}
      <section id="demo" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Demo dal vivo</h2>
        <div 
          id={`ckeen-${PUBLIC_ID}`}
          style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: '#f8f9fa'
          }}
        ></div>
        <script 
          async 
          defer 
          src={isDev 
            ? `http://localhost:3002/api/e/${PUBLIC_ID}`
            : `https://c-keen-embed.vercel.app/api/e/${PUBLIC_ID}?v=${EMBED_VERSION}`
          }
        />
      </section>

      {/* Widget Configurator */}
      <ConfiguratorIT />

      {/* Why It's Faster */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Perché è più veloce</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Payload limitato a 28 KB</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Distribuito via Edge e cache immutabile</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Nessun iframe pesante al caricamento</span>
          </div>
        </div>
      </section>

      {/* Get Your Snippet */}
      <section id="snippet" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Ottieni il tuo snippet</h2>
        <GetSnippetBox />
        
        <h3 style={{ fontSize: '1.4rem', marginTop: '48px', marginBottom: '24px', color: '#1a1a1a' }}>Snippet demo</h3>
        <SnippetBox publicId={PUBLIC_ID} version={EMBED_VERSION} isDev={isDev} />
      </section>

      {/* Customization */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Personalizzazione</h2>
        <p style={{ fontSize: '1.1rem', lineHeight: '1.6', color: '#666' }}>
          Il widget si adatta automaticamente al tema del tuo sito. Personalizza colori, font e comportamento tramite la nostra dashboard o API.
        </p>
      </section>

      {/* Accessibility & Privacy */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Accessibilità e Privacy</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Accessibilità</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Navigazione da tastiera, etichette ARIA, rispetta le preferenze 'riduci movimento'.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Privacy</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Nessun tracker nello script; analytics anonimi opzionali.
            </p>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>FAQ</h2>
        <div style={{ display: 'grid', gap: '24px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Quanto è veloce?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Il widget si carica in meno di 100ms ed è memorizzato globalmente via CDN.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>È conforme al GDPR?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Sì, raccogliamo solo i dati che permetti esplicitamente e forniamo esportazione/cancellazione completa dei dati.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Posso personalizzare lo stile?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Assolutamente. Usa le proprietà CSS personalizzate o la nostra dashboard per abbinare il tuo brand.
            </p>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section style={{ textAlign: 'center', marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '16px', color: '#1a1a1a' }}>Pronto a iniziare?</h2>
        <p style={{ fontSize: '1.1rem', color: '#666', marginBottom: '24px' }}>
          Unisciti a migliaia di sviluppatori che usano i widget Clickeen.
        </p>
        <a 
          href="/dashboard" 
          style={{
            padding: '16px 32px',
            backgroundColor: '#007bff',
            color: 'white',
            textDecoration: 'none',
            borderRadius: '8px',
            fontWeight: '600',
            fontSize: '1.1rem'
          }}
        >
          Inizia gratis
        </a>
      </section>
    </main>
  );
}
</file>

<file path="apps/site/app/it/page.tsx">
export default function Page() {
  return (
    <main style={{ padding: 24 }}>
      <h1>IT root works ✅</h1>
      <p>This verifies the /it route group is recognized.</p>
      <p>Try: <a href="/it/widgets/contact-form">/it/widgets/contact-form</a></p>
    </main>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/Configurator.tsx">
'use client';

import { useState, useEffect, useRef, useCallback } from 'react';

interface ConfigState {
  title: string;
  successText: string;
  theme: 'light' | 'dark';
  fields: {
    name: boolean;
    email: boolean;
    message: boolean;
  };
}

const STORAGE_KEY = 'cf_cfg';

const defaultConfig: ConfigState = {
  title: 'Contact us',
  successText: 'Thanks! We\'ll get back to you soon.',
  theme: 'light',
  fields: {
    name: true,
    email: true,
    message: true,
  },
};

export default function Configurator() {
  const [config, setConfig] = useState<ConfigState>(defaultConfig);
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [snippet, setSnippet] = useState('');
  const [publicKey, setPublicKey] = useState('');
  const [isUpdating, setIsUpdating] = useState(false);
  const [previewSrcDoc, setPreviewSrcDoc] = useState('');
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const debounceTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);

  const encodeCfg = (cfg: ConfigState) => btoa(unescape(encodeURIComponent(JSON.stringify(cfg))));

  const previewHtml = (cfg: ConfigState) => `
     <!doctype html>
     <html>
       <head>
         <meta charset="utf-8" />
         <meta name="viewport" content="width=device-width,initial-scale=1" />
         <style>
           html,body{margin:0;padding:0;background:#f7f8fa;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;}
           #root{padding:12px}
           .err{font:12px/1.4 system-ui;color:#b00020;background:#fff3f3;border:1px solid #ffd7d7;border-radius:6px;padding:8px}
         </style>
       </head>
       <body>
         <div id="ckeen-DEMO"></div>
         <script>
           window.__CKEEN_PREVIEW__ = {
             config: ${JSON.stringify(cfg)},
             embedOrigin: 'https://c-keen-embed.vercel.app'
           };
         </script>
         <script async src="https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(cfg)}"></` + `script>
         <script>
           window.addEventListener('error', (e) => {
             const d=document.createElement('div');
             d.className='err';
             d.textContent='Preview error: ' + (e.message||'unknown');
             document.body.appendChild(d);
           });
         </script>
       </body>
     </html>`;

  // Load config from localStorage on mount
  useEffect(() => {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        setConfig({ ...defaultConfig, ...parsed });
      } catch (e) {
        console.warn('Failed to parse saved config:', e);
      }
    }
  }, []);

  // Debounced preview srcDoc rebuild (external script via srcDoc)
  const rebuildPreview = useCallback((cfg: ConfigState) => {
    setIsUpdating(true);
    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);
    debounceTimeoutRef.current = setTimeout(() => {
      setPreviewSrcDoc(previewHtml(cfg));
      setIsUpdating(false);
    }, 250);
  }, []);

  // Save config and rebuild preview on changes
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(config));
    rebuildPreview(config);
  }, [config, rebuildPreview]);

  // No fallback needed with srcDoc

  const updateConfig = (updates: Partial<ConfigState>) => {
    setConfig(prev => ({ ...prev, ...updates }));
  };

  const updateFields = (field: keyof ConfigState['fields'], value: boolean) => {
    setConfig(prev => ({
      ...prev,
      fields: { ...prev.fields, [field]: value }
    }));
  };

  const validateEmail = (email: string) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const handleGetSnippet = async () => {
    if (!validateEmail(email)) {
      setError('Please enter a valid email address');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to generate snippet');
      }

      const data = await response.json();
      setPublicKey(data.publicKey);
      
      const snippetText = `<div id="ckeen-${data.publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${data.publicKey}?v=1"></script>
<!-- Powered by Clickeen — remove with Pro -->`;
      
      setSnippet(snippetText);
      // Optionally show publicId hint in UI without changing layout
      console.log('PublicId for direct POST smoke:', data.publicId);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to generate snippet');
    } finally {
      setIsLoading(false);
    }
  };

  const copySnippet = async () => {
    try {
      await navigator.clipboard.writeText(snippet);
      // Could add a toast notification here
    } catch (err) {
      console.error('Failed to copy snippet:', err);
    }
  };

  // Using srcDoc-based preview; no external src URL required

  return (
    <div style={{ marginBottom: '48px' }}>
      <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>
        Configure Your Widget
      </h2>
      
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '32px', alignItems: 'start' }}>
        {/* Configuration Panel */}
        <div style={{ display: 'grid', gap: '20px' }}>
          {/* Title */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Form Title
            </label>
            <input
              type="text"
              value={config.title}
              onChange={(e) => updateConfig({ title: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Success Text */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Success Message
            </label>
            <input
              type="text"
              value={config.successText}
              onChange={(e) => updateConfig({ successText: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Fields */}
          <div>
            <label style={{ display: 'block', marginBottom: '12px', fontSize: '14px', fontWeight: '500' }}>
              Form Fields
            </label>
            <div style={{ display: 'grid', gap: '8px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.name}
                  onChange={(e) => updateFields('name', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Name field
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', opacity: 0.6 }}>
                <input
                  type="checkbox"
                  checked={true}
                  disabled
                  style={{ width: '16px', height: '16px' }}
                />
                Email field (always required)
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.message}
                  onChange={(e) => updateFields('message', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Message field
              </label>
            </div>
          </div>

          {/* Theme */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Theme
            </label>
            <div style={{ display: 'flex', gap: '12px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'light'}
                  onChange={() => updateConfig({ theme: 'light' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Light
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'dark'}
                  onChange={() => updateConfig({ theme: 'dark' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Dark
              </label>
            </div>
          </div>
        </div>

        {/* Live Preview */}
        <div style={{ position: 'relative' }}>
          <div style={{ 
            position: 'absolute', 
            top: '8px', 
            right: '8px', 
            backgroundColor: '#007bff', 
            color: 'white', 
            padding: '4px 8px', 
            borderRadius: '4px', 
            fontSize: '12px', 
            fontWeight: '500',
            zIndex: 10
          }}>
            Preview
          </div>
          {isUpdating && (
            <div style={{ 
              position: 'absolute', 
              top: '8px', 
              left: '8px', 
              backgroundColor: '#ffc107', 
              color: '#000', 
              padding: '4px 8px', 
              borderRadius: '4px', 
              fontSize: '12px', 
              fontWeight: '500',
              zIndex: 10
            }}>
              Updating...
            </div>
          )}
          <div style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: config.theme === 'dark' ? '#1a1a1a' : '#f8f9fa',
            minHeight: '200px',
            position: 'relative'
          }}>
            <iframe
              ref={iframeRef}
              sandbox="allow-scripts allow-same-origin"
              srcDoc={previewSrcDoc}
              style={{
                width: '100%',
                height: '280px',
                border: 'none',
                borderRadius: '4px'
              }}
              title="Widget Preview"
            />
            <div style={{ marginTop: '8px' }}>
              <a href={`https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(config)}`} target="_blank" rel="noopener noreferrer" style={{ fontSize: '12px', color: '#007bff' }}>
                Open preview in new tab
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Snippet Generation */}
      <div style={{ marginTop: '32px', padding: '24px', border: '1px solid #e1e5e9', borderRadius: '8px', backgroundColor: '#f8f9fa' }}>
        <h3 style={{ fontSize: '1.4rem', marginBottom: '16px', color: '#1a1a1a' }}>Get Your Snippet</h3>
        
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end', marginBottom: '16px' }}>
          <div style={{ flex: 1, minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Your email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500',
              opacity: isLoading ? 0.6 : 1
            }}
          >
            {isLoading ? 'Generating...' : 'Get Snippet'}
          </button>
        </div>

        {error && (
          <div style={{ color: '#dc3545', fontSize: '14px', marginBottom: '16px' }}>
            {error}
          </div>
        )}

        {snippet && (
          <div>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }}>
              <h4 style={{ fontSize: '1.1rem', margin: 0, color: '#1a1a1a' }}>Your Snippet</h4>
              <button
                onClick={copySnippet}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#28a745',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px',
                  fontWeight: '500'
                }}
              >
                Copy
              </button>
            </div>
            <textarea
              readOnly
              value={snippet}
              style={{
                width: '100%',
                minHeight: '100px',
                fontFamily: 'monospace',
                fontSize: '14px',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                backgroundColor: '#fff',
                resize: 'vertical'
              }}
            />
            <p style={{ fontSize: '13px', color: '#666', marginTop: '8px', marginBottom: 0 }}>
              Free plan includes a small Powered by Clickeen badge.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/ConfiguratorIT.tsx">
'use client';

import { useState, useEffect, useRef, useCallback } from 'react';

interface ConfigState {
  title: string;
  successText: string;
  theme: 'light' | 'dark';
  fields: {
    name: boolean;
    email: boolean;
    message: boolean;
  };
}

const STORAGE_KEY = 'cf_cfg';

const defaultConfig: ConfigState = {
  title: 'Contattaci',
  successText: 'Grazie! Ti risponderemo presto.',
  theme: 'light',
  fields: {
    name: true,
    email: true,
    message: true,
  },
};

export default function ConfiguratorIT() {
  const [config, setConfig] = useState<ConfigState>(defaultConfig);
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [snippet, setSnippet] = useState('');
  const [publicKey, setPublicKey] = useState('');
  const [isUpdating, setIsUpdating] = useState(false);
  const [previewSrcDoc, setPreviewSrcDoc] = useState('');
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const debounceTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);
  const encodeCfg = (cfg: ConfigState) => btoa(unescape(encodeURIComponent(JSON.stringify(cfg))));

  const previewHtml = (cfg: ConfigState) => `
     <!doctype html>
     <html>
       <head>
         <meta charset="utf-8" />
         <meta name="viewport" content="width=device-width,initial-scale=1" />
         <style>
           html,body{margin:0;padding:0;background:#f7f8fa;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;}
           #root{padding:12px}
           .err{font:12px/1.4 system-ui;color:#b00020;background:#fff3f3;border:1px solid #ffd7d7;border-radius:6px;padding:8px}
         </style>
       </head>
       <body>
         <div id="ckeen-DEMO"></div>
         <script>
           window.__CKEEN_PREVIEW__ = {
             config: ${JSON.stringify(cfg)},
             embedOrigin: 'https://c-keen-embed.vercel.app'
           };
         </script>
         <script async src="https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(cfg)}"></` + `script>
         <script>
           window.addEventListener('error', (e) => {
             const d=document.createElement('div');
             d.className='err';
             d.textContent='Preview error: ' + (e.message||'unknown');
             document.body.appendChild(d);
           });
         </script>
       </body>
     </html>`;

  // Load config from localStorage on mount
  useEffect(() => {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        setConfig({ ...defaultConfig, ...parsed });
      } catch (e) {
        console.warn('Failed to parse saved config:', e);
      }
    }
  }, []);

  // Debounced preview srcDoc rebuild (external script via srcDoc)
  const rebuildPreview = useCallback((cfg: ConfigState) => {
    setIsUpdating(true);
    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);
    debounceTimeoutRef.current = setTimeout(() => {
      setPreviewSrcDoc(previewHtml(cfg));
      setIsUpdating(false);
    }, 250);
  }, []);

  // Save config and rebuild preview on changes
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(config));
    rebuildPreview(config);
  }, [config, rebuildPreview]);

  // No fallback needed with srcDoc

  const updateConfig = (updates: Partial<ConfigState>) => {
    setConfig(prev => ({ ...prev, ...updates }));
  };

  const updateFields = (field: keyof ConfigState['fields'], value: boolean) => {
    setConfig(prev => ({
      ...prev,
      fields: { ...prev.fields, [field]: value }
    }));
  };

  const validateEmail = (email: string) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const handleGetSnippet = async () => {
    if (!validateEmail(email)) {
      setError('Inserisci un indirizzo email valido');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Impossibile generare lo snippet');
      }

      const data = await response.json();
      setPublicKey(data.publicKey);
      
      const snippetText = `<div id="ckeen-${data.publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${data.publicKey}?v=1"></script>
<!-- Powered by Clickeen — remove with Pro -->`;
      
      setSnippet(snippetText);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Impossibile generare lo snippet');
    } finally {
      setIsLoading(false);
    }
  };

  const copySnippet = async () => {
    try {
      await navigator.clipboard.writeText(snippet);
      // Could add a toast notification here
    } catch (err) {
      console.error('Failed to copy snippet:', err);
    }
  };

  // Using srcDoc-based preview; no external src URL required

  return (
    <div style={{ marginBottom: '48px' }}>
      <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>
        Configura il tuo Widget
      </h2>
      
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '32px', alignItems: 'start' }}>
        {/* Configuration Panel */}
        <div style={{ display: 'grid', gap: '20px' }}>
          {/* Title */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Titolo del Form
            </label>
            <input
              type="text"
              value={config.title}
              onChange={(e) => updateConfig({ title: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Success Text */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Messaggio di Successo
            </label>
            <input
              type="text"
              value={config.successText}
              onChange={(e) => updateConfig({ successText: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Fields */}
          <div>
            <label style={{ display: 'block', marginBottom: '12px', fontSize: '14px', fontWeight: '500' }}>
              Campi del Form
            </label>
            <div style={{ display: 'grid', gap: '8px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.name}
                  onChange={(e) => updateFields('name', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Campo nome
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', opacity: 0.6 }}>
                <input
                  type="checkbox"
                  checked={true}
                  disabled
                  style={{ width: '16px', height: '16px' }}
                />
                Campo email (sempre richiesto)
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.message}
                  onChange={(e) => updateFields('message', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Campo messaggio
              </label>
            </div>
          </div>

          {/* Theme */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Tema
            </label>
            <div style={{ display: 'flex', gap: '12px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'light'}
                  onChange={() => updateConfig({ theme: 'light' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Chiaro
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'dark'}
                  onChange={() => updateConfig({ theme: 'dark' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Scuro
              </label>
            </div>
          </div>
        </div>

        {/* Live Preview */}
        <div style={{ position: 'relative' }}>
          <div style={{ 
            position: 'absolute', 
            top: '8px', 
            right: '8px', 
            backgroundColor: '#007bff', 
            color: 'white', 
            padding: '4px 8px', 
            borderRadius: '4px', 
            fontSize: '12px', 
            fontWeight: '500',
            zIndex: 10
          }}>
            Anteprima
          </div>
          {isUpdating && (
            <div style={{ 
              position: 'absolute', 
              top: '8px', 
              left: '8px', 
              backgroundColor: '#ffc107', 
              color: '#000', 
              padding: '4px 8px', 
              borderRadius: '4px', 
              fontSize: '12px', 
              fontWeight: '500',
              zIndex: 10
            }}>
              Aggiornamento...
            </div>
          )}
          <div style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: config.theme === 'dark' ? '#1a1a1a' : '#f8f9fa',
            minHeight: '200px',
            position: 'relative'
          }}>
            <iframe
              ref={iframeRef}
              sandbox="allow-scripts allow-same-origin"
              srcDoc={previewSrcDoc}
              style={{
                width: '100%',
                height: '280px',
                border: 'none',
                borderRadius: '4px'
              }}
              title="Anteprima Widget"
            />
            <div style={{ marginTop: '8px' }}>
              <a href={`https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(config)}`} target="_blank" rel="noopener noreferrer" style={{ fontSize: '12px', color: '#007bff' }}>
                Apri anteprima in una nuova scheda
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Snippet Generation */}
      <div style={{ marginTop: '32px', padding: '24px', border: '1px solid #e1e5e9', borderRadius: '8px', backgroundColor: '#f8f9fa' }}>
        <h3 style={{ fontSize: '1.4rem', marginBottom: '16px', color: '#1a1a1a' }}>Ottieni il tuo Snippet</h3>
        
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end', marginBottom: '16px' }}>
          <div style={{ flex: 1, minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              La tua email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="la tua email"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500',
              opacity: isLoading ? 0.6 : 1
            }}
          >
            {isLoading ? 'Generazione...' : 'Ottieni snippet'}
          </button>
        </div>

        {error && (
          <div style={{ color: '#dc3545', fontSize: '14px', marginBottom: '16px' }}>
            {error}
          </div>
        )}

        {snippet && (
          <div>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }}>
              <h4 style={{ fontSize: '1.1rem', margin: 0, color: '#1a1a1a' }}>Il tuo Snippet</h4>
              <button
                onClick={copySnippet}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#28a745',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px',
                  fontWeight: '500'
                }}
              >
                Copia
              </button>
            </div>
            <textarea
              readOnly
              value={snippet}
              style={{
                width: '100%',
                minHeight: '100px',
                fontFamily: 'monospace',
                fontSize: '14px',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                backgroundColor: '#fff',
                resize: 'vertical'
              }}
            />
            <p style={{ fontSize: '13px', color: '#666', marginTop: '8px', marginBottom: 0 }}>
              Il piano gratuito include un piccolo badge Powered by Clickeen.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/page.tsx">
'use client';

import { useState } from 'react';
import Configurator from './Configurator';

// Client component for the snippet box
function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const [copied, setCopied] = useState(false);
  
  const scriptSrc = isDev 
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://c-keen-embed.vercel.app/api/e/${publicId}?v=${version}`;
  
  const snippet = `<div id="ckeen-${publicId}"></div>
<script async defer src="${scriptSrc}"></script>`;

  const copyToClipboard = async () => {
    await navigator.clipboard.writeText(snippet);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <div style={{ margin: '24px 0' }}>
      <textarea
        value={snippet}
        readOnly
        style={{
          width: '100%',
          minHeight: '80px',
          fontFamily: 'monospace',
          fontSize: '14px',
          padding: '12px',
          border: '1px solid #e1e5e9',
          borderRadius: '8px',
          backgroundColor: '#f8f9fa',
          resize: 'vertical'
        }}
      />
      <button
        onClick={copyToClipboard}
        style={{
          marginTop: '8px',
          padding: '8px 16px',
          backgroundColor: copied ? '#28a745' : '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          fontSize: '14px'
        }}
      >
        {copied ? 'Copied!' : 'Copy'}
      </button>
    </div>
  );
}

// Client component for email capture and snippet generation
function GetSnippetBox() {
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [generatedSnippet, setGeneratedSnippet] = useState('');
  const [generatedPublicId, setGeneratedPublicId] = useState('');

  const handleGetSnippet = async () => {
    if (!email) {
      setError('Please enter your email');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config: {
            // Default config for preview
            theme: 'light',
            position: 'bottom-right'
          }
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to generate snippet');
      }

      const { publicId } = await response.json();
      setGeneratedPublicId(publicId);
      
      const snippet = `<div id="ckeen-${publicId}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${publicId}?v=1"></script>`;
      
      setGeneratedSnippet(snippet);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Something went wrong');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={{ margin: '24px 0' }}>
      {!generatedSnippet ? (
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end' }}>
          <div style={{ flex: '1', minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Your email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: isLoading ? '#ccc' : '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            {isLoading ? 'Generating...' : 'Get Snippet'}
          </button>
        </div>
      ) : (
        <div>
          <textarea
            value={generatedSnippet}
            readOnly
            style={{
              width: '100%',
              minHeight: '80px',
              fontFamily: 'monospace',
              fontSize: '14px',
              padding: '12px',
              border: '1px solid #e1e5e9',
              borderRadius: '8px',
              backgroundColor: '#f8f9fa',
              resize: 'vertical'
            }}
          />
          <p style={{ fontSize: '14px', color: '#666', marginTop: '8px' }}>
            Want to edit and save it? You can create an account later — the widget works right now.
          </p>
        </div>
      )}
      {error && (
        <p style={{ color: '#dc3545', fontSize: '14px', marginTop: '8px' }}>
          {error}
        </p>
      )}
    </div>
  );
}

const PUBLIC_ID = process.env.DEMO_PUBLIC_ID || 'DEMO';
const EMBED_VERSION = Number(process.env.EMBED_VERSION) || 1;
const isDev = process.env.NODE_ENV === 'development';

export default function Page() {
  return (
    <main style={{ maxWidth: '800px', margin: '0 auto', padding: '24px' }}>
      {/* Live Demo */}
      <section id="demo" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Live Demo</h2>
        <div 
          id={`ckeen-${PUBLIC_ID}`}
          style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: '#f8f9fa'
          }}
        ></div>
        <script 
          async 
          defer 
          src={isDev 
            ? `http://localhost:3002/api/e/${PUBLIC_ID}`
            : `https://c-keen-embed.vercel.app/api/e/${PUBLIC_ID}?v=${EMBED_VERSION}`
          }
        />
      </section>

      {/* Widget Configurator */}
      <Configurator />

      {/* Why It's Faster */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Why It's Faster</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Payload limited to 28 KB</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Distributed via Edge and immutable cache</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>No heavy iframe on load</span>
          </div>
        </div>
      </section>

      {/* Copy-paste Snippet */}
      <section id="snippet" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Get Your Snippet</h2>
        <GetSnippetBox />
        
        <h3 style={{ fontSize: '1.4rem', marginTop: '48px', marginBottom: '24px', color: '#1a1a1a' }}>Demo Snippet</h3>
        <SnippetBox publicId={PUBLIC_ID} version={EMBED_VERSION} isDev={isDev} />
      </section>

      {/* Customization */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Customization</h2>
        <p style={{ fontSize: '1.1rem', lineHeight: '1.6', color: '#666' }}>
          The widget automatically adapts to your site's theme. Customize colors, fonts, and behavior through our dashboard or API.
        </p>
      </section>

      {/* Accessibility & Privacy */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Accessibility & Privacy</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Accessibility</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Keyboard navigation, ARIA labels, respects 'reduce motion' preferences.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Privacy</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              No trackers in the script; anonymous analytics optional.
            </p>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>FAQ</h2>
        <div style={{ display: 'grid', gap: '24px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>How fast is it?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              The widget loads in under 100ms and is cached globally via CDN.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Is it GDPR compliant?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Yes, we only collect data you explicitly allow and provide full data export/deletion.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Can I customize the styling?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Absolutely. Use CSS custom properties or our dashboard to match your brand.
            </p>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section style={{ textAlign: 'center', marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '16px', color: '#1a1a1a' }}>Ready to get started?</h2>
        <p style={{ fontSize: '1.1rem', color: '#666', marginBottom: '24px' }}>
          Join thousands of developers using Clickeen widgets.
        </p>
        <a 
          href="/dashboard" 
          style={{
            padding: '16px 32px',
            backgroundColor: '#007bff',
            color: 'white',
            textDecoration: 'none',
            borderRadius: '8px',
            fontWeight: '600',
            fontSize: '1.1rem'
          }}
        >
          Get Started Free
        </a>
      </section>
    </main>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/SnippetBox.tsx">
'use client';
import { useState } from 'react';

export default function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const src = isDev
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://cdn.c-keen.com/e/${publicId}.js?v=${version}`;
  const snippet = `<div id="ckeen-${publicId}"></div>\n<script async defer src="${src}"></script>`;
  const [copied, setCopied] = useState(false);
  return (
    <div style={{ display: 'grid', gap: 8, maxWidth: 720 }}>
      <textarea readOnly value={snippet} style={{ width: '100%', height: 100, fontFamily: 'ui-monospace, SFMono-Regular, Menlo, monospace', fontSize: 13, padding: 12, borderRadius: 8, border: '1px solid #ddd' }} />
      <button onClick={() => { navigator.clipboard.writeText(snippet); setCopied(true); setTimeout(()=>setCopied(false), 2000); }}
        style={{ alignSelf: 'start', padding: '8px 12px', borderRadius: 8, border: '1px solid #ddd', background: copied ? '#e6ffed' : 'white' }}>
        {copied ? 'Copied!' : 'Copy'}
      </button>
    </div>
  );
}
</file>

<file path="apps/site/app/layout.tsx">
export const metadata = {
  title: 'Clickeen',
  description: 'Fast, lightweight widgets',
};
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return <html lang="en"><body>{children}</body></html>;
}
</file>

<file path="apps/site/app/page.tsx">
export default function Page(){
  return (<main style={{padding:24}}>
    <h1>Clickeen</h1>
    <p>Widget-first platform. Tiny, fast, and versioned.</p>
    <a href="/widgets/contact-form">→ Contact Form widget</a>
  </main>);
}
</file>

<file path="apps/site/app/robots.ts">
export default function robots() {
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
  return {
    rules: [{ userAgent: '*', allow: '/' }],
    sitemap: `${base}/sitemap.xml`,
  };
}
</file>

<file path="apps/site/app/sitemap.ts">
export default async function sitemap() {
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
  return [
    { url: `${base}/`, changeFrequency: 'weekly', priority: 0.6 },
    { url: `${base}/widgets/contact-form`, changeFrequency: 'weekly', priority: 0.8 },
    { url: `${base}/it/widgets/contact-form`, changeFrequency: 'weekly', priority: 0.8 }
  ];
}
</file>

<file path="apps/site/app/version.txt">
2025-09-02T02:13:54Z
</file>

<file path="apps/site/lib/supabase.ts">
import { createClient } from '@supabase/supabase-js';

// Client used in the browser (public anon key)
export function getBrowserClient() {
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  if (!supabaseUrl || !supabaseAnonKey) return null;
  return createClient(supabaseUrl, supabaseAnonKey);
}

// Server-side client (service role) - only import in server contexts
export function getServerClient() {
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  if (!supabaseUrl || !serviceKey) {
    throw new Error('Missing Supabase environment variables');
  }
  return createClient(supabaseUrl, serviceKey, { auth: { persistSession: false } });
}

// Types for widget_instances table
export interface WidgetInstance {
  id: string;
  workspace_id: string | null;
  type_id: string;
  public_id: string;
  version: number;
  status: string;
  config: Record<string, any>;
  allowed_domains: string[];
  show_badge: boolean;
  created_by: string;
  created_at: string;
}

export interface CreateWidgetInstancePayload {
  workspace_id: string | null;
  type_id: string;
  public_id: string;
  status: string;
  config: Record<string, any>;
  allowed_domains?: string[];
  show_badge?: boolean;
  created_by?: string;
}
</file>

<file path="apps/site/lib/supabaseAdmin.ts">
import { createClient } from '@supabase/supabase-js';

// Server-side service role client for privileged operations.
// Never import this in client components.
export function supabaseAdmin() {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  if (!url || !serviceKey) {
    throw new Error('Missing Supabase environment variables for service role client');
  }
  return createClient(url, serviceKey, { auth: { persistSession: false } });
}
</file>

<file path="apps/site/.redeploy.txt">
2025-09-03T21:32:48Z
</file>

<file path="apps/site/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="apps/site/next.config.mjs">
export default {
  headers: async () => [{
    source: "/(.*)",
    headers: [
      { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
      { key: "Permissions-Policy", value: "camera=(), microphone=(), geolocation=()" }
    ]
  }]
};
</file>

<file path="apps/site/package.json">
{
  "name": "@ck/site",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3000",
    "build": "next build",
    "start": "next start -p 3000"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.56.1",
    "nanoid": "^5.1.5",
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "^24.3.0",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="apps/site/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "baseUrl": ".",
    "paths": {
      "@/*": ["./*"]
    },
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="dieter/components/accordion.css">
/* Dieter Accordion v0 — tokens-only, native details/summary */
.diet-accordion { display: grid; gap: var(--space-2); }

.diet-accordion details {
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, 0.5rem);
  background: var(--color-surface);
  color: var(--color-text-primary);
  padding: 0;
}

.diet-accordion summary {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
  list-style: none;
  min-height: 44px;
  padding: var(--space-3) var(--space-4);
  position: relative;
}
.diet-accordion summary::-webkit-details-marker { display: none; }

.diet-accordion__chev {
  inline-size: 1em;
  block-size: 1em;
  transform: rotate(0deg);
  transition: transform 150ms ease;
  border: 2px solid currentColor;
  border-left: 0; border-top: 0;
  rotate: 45deg;
  inline-size: 0.6rem; block-size: 0.6rem;
}
details[open] .diet-accordion__chev { transform: rotate(90deg); }

.diet-accordion summary:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-accordion summary:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-accordion summary:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

.diet-accordion__panel {
  padding: var(--space-3) var(--space-4) var(--space-4);
  border-top: 1px solid var(--color-border);
  line-height: var(--lh-body, 1.6);
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-accordion details { border-width: 2px; }
</file>

<file path="dieter/components/alert.css">
/* Dieter Alert v0 — tokens-only */
.diet-alert {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
}

.diet-alert__icon {
  inline-size: 1.25rem;
  block-size: 1.25rem;
  border-radius: 50%;
  align-self: start;
  background: var(--color-primary, #0b5fff);
}

/* Title + body */
.diet-alert__title { font-weight: 600; margin: 0; }
.diet-alert__body  { margin: 0; color: var(--color-text-secondary); }

/* Variants (info/success/warning/error) */
.diet-alert--info {
  border-color: var(--color-primary-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-primary, #0b5fff) 6%);
}
.diet-alert--info .diet-alert__icon { background: var(--color-primary, #0b5fff); }

.diet-alert--success {
  border-color: var(--color-success-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-success, #1a7f37) 6%);
}
.diet-alert--success .diet-alert__icon { background: var(--color-success, #1a7f37); }

.diet-alert--warning {
  border-color: var(--color-warning-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-warning, #b7791f) 6%);
}
.diet-alert--warning .diet-alert__icon { background: var(--color-warning, #b7791f); }

.diet-alert--error {
  border-color: var(--color-danger-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-danger, #d93025) 6%);
}
.diet-alert--error .diet-alert__icon { background: var(--color-danger, #d93025); }

/* Links/buttons inside alert respect tokens and focus ring */
.diet-alert a,
.diet-alert button {
  color: var(--color-link, var(--color-primary));
  text-underline-offset: 2px;
  font: inherit;
}
.diet-alert a:focus-visible,
.diet-alert button:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-radius: var(--radius-2, 0.375rem);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-alert { transition: none; }
}
</file>

<file path="dieter/components/avatar.css">
/* Dieter Avatar v0 — image/initials */
.diet-avatar {
  inline-size: 2rem; block-size: 2rem; border-radius: 50%;
  display:grid; place-items:center; overflow:hidden;
  background: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%);
  color: var(--color-on-primary, #fff); font-weight:600;
  border: 1px solid var(--color-border);
}
.diet-avatar--lg { inline-size: 3rem; block-size: 3rem; }
.diet-avatar img { inline-size:100%; block-size:100%; object-fit: cover; }
</file>

<file path="dieter/components/badge.css">
/* Dieter Badge & Tag v0 — tokens-only, no JS */
:root {
  /* defensive fallbacks */
  --_radius-2: var(--radius-2, 0.375rem);
  --_pad-sm-y: var(--space-1, 0.25rem);
  --_pad-sm-x: var(--space-2, 0.5rem);
  --_pad-md-y: var(--space-1_5, 0.375rem);
  --_pad-md-x: var(--space-3, 0.75rem);
  --_pad-lg-y: var(--space-2, 0.5rem);
  --_pad-lg-x: var(--space-4, 1rem);
}

.diet-badges { display: flex; flex-wrap: wrap; gap: var(--space-2, 0.5rem); }

/* Base token slots */
.diet-badge,
.diet-tag {
  --_bg: var(--color-surface, #fff);
  --_fg: var(--color-text-primary, #111);
  --_bd: var(--color-border, #e5e7eb);

  display: inline-flex;
  align-items: center;
  gap: var(--space-2, 0.5rem);
  border-radius: var(--_radius-2);
  border: 1px solid var(--_bd);
  background: var(--_bg);
  color: var(--_fg);
  font: inherit;
  line-height: var(--lh-body, 1.5);
  text-decoration: none;
  white-space: nowrap;
}

/* Sizes */
.diet-badge--sm, .diet-tag--sm { padding: var(--_pad-sm-y) var(--_pad-sm-x); font-size: var(--fs-12, 0.75rem); }
.diet-badge--md, .diet-tag--md { padding: var(--_pad-md-y) var(--_pad-md-x); font-size: var(--fs-14, 0.875rem); }
.diet-badge--lg, .diet-tag--lg { padding: var(--_pad-lg-y) var(--_pad-lg-x); font-size: var(--fs-16, 1rem); }

/* Badge (solid) variants */
.diet-badge { border-color: transparent; }

.diet-badge--neutral { --_bg: var(--color-surface-muted, color-mix(in oklab, var(--color-surface), var(--state-hover) 6%)); --_fg: var(--color-text-primary); }
.diet-badge--primary { --_bg: var(--color-primary, #0b64f4); --_fg: var(--color-on-primary, #fff); }
.diet-badge--success { --_bg: var(--color-success, #1a7f37); --_fg: var(--color-on-success, #fff); }
.diet-badge--warning { --_bg: var(--color-warning, #b7791f); --_fg: var(--color-on-warning, #111); }
.diet-badge--danger  { --_bg: var(--color-danger,  #d93025); --_fg: var(--color-on-danger,  #fff); }

/* Badge (soft) variants — subtle background using state layer */
.diet-badge--soft { border-color: transparent; }
.diet-badge--soft.diet-badge--primary { --_bg: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%); --_fg: var(--color-primary); }
.diet-badge--soft.diet-badge--success { --_bg: color-mix(in oklab, var(--color-surface), var(--color-success) 12%); --_fg: var(--color-success); }
.diet-badge--soft.diet-badge--warning { --_bg: color-mix(in oklab, var(--color-surface), var(--color-warning) 12%); --_fg: var(--color-warning); }
.diet-badge--soft.diet-badge--danger  { --_bg: color-mix(in oklab, var(--color-surface), var(--color-danger)  12%); --_fg: var(--color-danger); }

/* Tag (outline) variants */
.diet-tag { background: transparent; }

.diet-tag--neutral { --_bd: var(--color-border); --_fg: var(--color-text-secondary, #4b5563); }
.diet-tag--primary { --_bd: var(--color-primary); --_fg: var(--color-primary); }
.diet-tag--success { --_bd: var(--color-success); --_fg: var(--color-success); }
.diet-tag--warning { --_bd: var(--color-warning); --_fg: var(--color-warning); }
.diet-tag--danger  { --_bd: var(--color-danger);  --_fg: var(--color-danger); }

/* Dismiss affordance (markup only; no JS) */
.diet-tag__dismiss {
  inline-size: 1em; block-size: 1em; border-radius: var(--radius-1, 0.25rem);
  display: inline-grid; place-items: center; font-size: 0.9em;
  padding: 0; border: 1px solid transparent; background: transparent; color: currentColor;
}
.diet-tag__dismiss:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Hover/active cues */
.diet-badge:hover  { background: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-badge:active { background: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }
.diet-tag:hover    { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 6%); }
.diet-tag:active   { background: color-mix(in oklab, var(--color-surface), var(--state-press) 10%); }

/* High-contrast ensures readable borders/text via theme tokens */

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-badge, .diet-tag { transition: none; }
}
</file>

<file path="dieter/components/banner.css">
/* Dieter Banner v0 — info/success/warning/error */
.diet-banner {
  display:grid; grid-template-columns: auto 1fr auto; gap: var(--space-3);
  align-items: center;
  padding: var(--space-3);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, .5rem);
  color: var(--color-text-primary);
}
.diet-banner__icon { inline-size: 1rem; block-size: 1rem; border-radius: 50%; background: var(--color-primary); }
.diet-banner__title { font-weight: 600; }
.diet-banner__actions { display:flex; gap: var(--space-2); }
.diet-banner__btn {
  appearance:none; font:inherit; min-block-size:44px; padding: 0 var(--space-3);
  border-radius: var(--radius-2, .375rem); cursor:pointer;
  border: 1px solid var(--color-border); background: var(--color-surface); color: var(--color-text-primary);
}
.diet-banner__btn:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
/* Variants tint */
.diet-banner--info    { border-color: var(--color-primary); }
.diet-banner--info .diet-banner__icon { background: var(--color-primary); }
.diet-banner--success { border-color: var(--color-success, #1a7f37); }
.diet-banner--success .diet-banner__icon { background: var(--color-success, #1a7f37); }
.diet-banner--warning { border-color: var(--color-warning, #b7791f); }
.diet-banner--warning .diet-banner__icon { background: var(--color-warning, #b7791f); }
.diet-banner--error   { border-color: var(--color-danger, #d93025); }
.diet-banner--error .diet-banner__icon { background: var(--color-danger, #d93025); }
</file>

<file path="dieter/components/breadcrumb.css">
/* Dieter Breadcrumb — tokens-only */
.diet-breadcrumb{
  display: flex; flex-wrap: wrap; align-items: center; gap: var(--space-2, .5rem);
  color: var(--color-text-secondary, #4b5563);
  font-size: .875rem;
}

.diet-crumb{
  display: inline-flex; align-items: center; gap: var(--space-2, .5rem);
}

.diet-crumb a{
  color: inherit; text-decoration: none; border-radius: var(--radius-2, .375rem);
  padding-inline: .125rem;
}

.diet-crumb a:hover{
  color: var(--color-text-primary, #111);
  background: color-mix(in oklab, var(--color-surface, #fff), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

.diet-crumb a:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

.diet-crumb[aria-current="page"]{
  color: var(--color-text-primary, #111);
  font-weight: 600;
}

.diet-crumb__sep{ opacity: .6; }

/* Truncate utility */
.diet-crumb--truncate{
  max-inline-size: 16rem; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;
}

/* HC tweak */
html[data-theme="hc"] .diet-crumb__sep{ opacity: 1; }
</file>

<file path="dieter/components/button-group.css">
/* Dieter Button Group v0 — grouped buttons with selection */
.diet-btn-group {
  display: inline-flex;
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
}
.diet-btn-group .diet-btn {
  border: none;
  border-inline-end: 1px solid var(--color-border);
  background: transparent;
  color: var(--color-text-primary);
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-4);
}
.diet-btn-group .diet-btn:last-child { border-inline-end: none; }
.diet-btn-group .diet-btn:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-btn-group .diet-btn:focus-visible {
  outline: none;
  box-shadow:
    inset 0 0 0 2px var(--color-bg, #fff),
    inset 0 0 0 calc(2px + var(--focus-ring-width, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-btn-group .diet-btn[aria-pressed="true"],
.diet-btn-group .diet-btn[aria-current="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
</file>

<file path="dieter/components/button.css">
/* Dieter Button v0 — tokens-only, no raw values */
.diet-btn {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  min-height: 2.75rem;                 /* ≥ 44px touch target */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  background: var(--_bg);
  color: var(--_fg);
  font: inherit;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 150ms, color 150ms, border-color 150ms, transform 150ms;
}
@media (prefers-reduced-motion: reduce) {
  .diet-btn { transition: none; }
}
/* Sizes */
.diet-btn--sm { min-height: 2.5rem; padding-inline: var(--space-3); }
.diet-btn--lg { min-height: 3rem;   padding-inline: var(--space-5); }

/* Variants */
.diet-btn--primary {
  --_bg: var(--color-primary);
  --_fg: var(--color-on-primary, #fff);
  --_bd: var(--color-primary);
}
.diet-btn--ghost {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
}
.diet-btn--danger {
  --_bg: var(--color-danger, #d93025);
  --_fg: var(--color-on-danger, #fff);
  --_bd: var(--color-danger, #d93025);
}

/* States (use state layer tokens) */
.diet-btn:hover:not(:disabled) {
  background: color-mix(in oklab, var(--_bg), var(--state-hover) 12%);
}
.diet-btn:active:not(:disabled) {
  background: color-mix(in oklab, var(--_bg), var(--state-press) 18%);
  transform: translateY(1px);
}
.diet-btn:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Disabled */
.diet-btn:disabled,
.diet-btn[aria-disabled="true"] {
  opacity: 0.55;
  cursor: not-allowed;
}

/* Loading (attribute-driven, no JS required) */
.diet-btn[data-state="loading"] {
  position: relative;
  pointer-events: none;
}
.diet-btn[data-state="loading"]::after {
  content: "";
  inline-size: 1rem;
  block-size: 1rem;
  border: 2px solid color-mix(in oklab, var(--_fg), transparent 60%);
  border-top-color: var(--_fg);
  border-radius: 999px;
  animation: diet-spin 0.8s linear infinite;
}
@keyframes diet-spin { to { transform: rotate(360deg); } }
</file>

<file path="dieter/components/card.css">
/* Dieter Card v0 — tokens-only */
:root{
  --_radius-3: var(--radius-3, 0.5rem);
  --_pad-y: var(--space-4, 1rem);
  --_pad-x: var(--space-5, 1.25rem);
  --_gap: var(--space-3, 0.75rem);
  --_shadow-sm: var(--shadow-sm, 0 1px 2px rgb(0 0 0 / .08));
  --_shadow-md: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .12));
}

/* Base card */
.diet-card{
  --_bg: var(--color-surface, #fff);
  --_fg: var(--color-text-primary, #111);
  --_bd: var(--color-border, #e5e7eb);

  display: grid;
  gap: var(--_gap);
  background: var(--_bg);
  color: var(--_fg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius-3);
  padding: var(--_pad-y) var(--_pad-x);
}

/* Density variants */
.diet-card--compact{
  --_pad-y: var(--space-3, .75rem);
  --_pad-x: var(--space-4, 1rem);
  --_gap: var(--space-2, .5rem);
}

/* Elevated variant */
.diet-card--elevated{
  box-shadow: var(--_shadow-sm);
  border-color: color-mix(in oklab, var(--_bd), transparent 40%);
}
.diet-card--elevated:hover{
  box-shadow: var(--_shadow-md);
  background: color-mix(in oklab, var(--_bg), var(--state-hover, rgb(0 0 0 / .06)) 6%);
}

/* Sections */
.diet-card__header{ display:flex; align-items:center; gap: var(--space-3, .75rem); }
.diet-card__title{ font: inherit; font-weight: 600; line-height: var(--lh-title, 1.25); }
.diet-card__subtitle{ color: var(--color-text-secondary, #4b5563); font-size: .875rem; }
.diet-card__body{ display: grid; gap: var(--space-3, .75rem); }
.diet-card__footer{ display:flex; gap: var(--space-3, .75rem); justify-content:flex-end; }

/* Focus visibility for actionable cards */
.diet-card[tabindex]:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* High contrast theme tweaks */
html[data-theme="hc"] .diet-card--elevated{
  box-shadow: none;
  border-width: 2px;
}

@media (prefers-reduced-motion: reduce){
  .diet-card--elevated{ transition: none; }
}
</file>

<file path="dieter/components/chip.css">
/* Dieter Chip v0 — pill + optional dismiss */
.diet-chip {
  display:inline-flex; align-items:center; gap: .5ch;
  padding-inline: var(--space-2); min-block-size: 2rem;
  border: 1px solid var(--color-border); border-radius: 9999px;
  background: var(--color-surface); color: var(--color-text-secondary);
}
.diet-chip--primary { border-color: var(--color-primary); color: var(--color-text-primary); background: color-mix(in oklab, var(--color-surface), var(--color-primary) 10%); }
.diet-chip__dismiss {
  appearance:none; background: transparent; border: 1px solid var(--color-border);
  inline-size: 1.5rem; block-size: 1.5rem; border-radius: 9999px; cursor:pointer;
}
.diet-chip__dismiss:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/choice.css">
/* Dieter Choice Controls v0 — checkbox & radio (tokens-only, native) */
.diet-choice-field { display:grid; gap: var(--space-1); }
.diet-choice-row  { display:flex; align-items:center; gap: var(--space-2); min-height: 2.75rem; } /* ≥44px touch */

:root {
  /* Fallbacks in case tokens missing */
  --_choice-accent: var(--color-primary, #3b82f6);
  --_choice-bg:     var(--color-surface, #fff);
  --_choice-fg:     var(--color-text-primary, #111);
  --_choice-bd:     var(--color-border, #d0d5dd);
}

/* Normalize native inputs */
.diet-checkbox,
.diet-radio {
  inline-size: 1.125rem;
  block-size: 1.125rem;
  min-inline-size: 1.125rem;
  min-block-size: 1.125rem;
  accent-color: var(--_choice-accent);
  background: var(--_choice-bg);
  color: var(--_choice-fg);
  border: 1px solid var(--_choice-bd);
  border-radius: 0.25rem; /* radio will override */
  outline: none;
  margin: 0; /* rely on layout gaps */
}

/* Radio shape */
.diet-radio { border-radius: 999px; }

/* Sizes */
.diet-choice--sm { inline-size: 1rem;   block-size: 1rem; }
.diet-choice--lg { inline-size: 1.25rem; block-size: 1.25rem; }

/* Hover/Active feedback via state layers on the row */
.diet-choice-row:hover  { background: color-mix(in oklab, transparent, var(--state-hover, rgba(0,0,0,.05)) 8%); border-radius: var(--radius-2, 0.375rem); }
.diet-choice-row:active { background: color-mix(in oklab, transparent, var(--state-press, rgba(0,0,0,.1)) 12%); }

/* Focus ring (applies when focusing the input) */
.diet-checkbox:focus-visible,
.diet-radio:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
  border-radius: 0.375rem;
}
.diet-radio:focus-visible { border-radius: 999px; }

/* Disabled */
.diet-checkbox:disabled,
.diet-radio:disabled { opacity: .55; cursor: not-allowed; }

/* Label text */
.diet-choice-label { color: var(--color-text-primary); line-height: var(--lh-body); }
.diet-choice-hint  { color: var(--color-text-tertiary, color-mix(in oklab, var(--color-text-primary), transparent 40%)); font-size: 0.875rem; }
.diet-choice-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Error state */
.diet-choice-field[data-state="error"] .diet-checkbox,
.diet-choice-field[data-state="error"] .diet-radio,
.diet-checkbox[aria-invalid="true"],
.diet-radio[aria-invalid="true"] {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_choice-bg), var(--color-danger, #d93025) 6%);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-choice-row { transition: none; }
}

/* High-contrast inherits color/border from tokens */
</file>

<file path="dieter/components/container.css">
/* Dieter Container wrappers — tokens-only */
:root{
  /* responsive max-widths; rem-based */
  --container-max: 72rem;   /* ~1152px */
  --container-wide: 96rem;  /* ~1536px */
  --container-pad: var(--space-5, 1.25rem);
}

.diet-container{
  max-inline-size: var(--container-max);
  margin-inline: auto;
  padding-inline: var(--container-pad);
}

.diet-container--wide{
  max-inline-size: var(--container-wide);
}

/* Optional utility for vertical rhythm */
.diet-stack{ display:grid; gap: var(--space-4, 1rem); }
</file>

<file path="dieter/components/divider.css">
/* Dieter Divider — tokens-only */
.diet-divider{
  block-size: 1px;
  background: var(--color-border, #e5e7eb);
  inline-size: 100%;
  border: 0;
  margin: var(--space-4, 1rem) 0;
}

/* Inset divider for lists/cards */
.diet-divider--inset{
  margin-inline: var(--space-5, 1.25rem);
  inline-size: calc(100% - (var(--space-5, 1.25rem) * 2));
}

html[data-theme="hc"] .diet-divider{ block-size: 2px; }
</file>

<file path="dieter/components/drawer.css">
/* Dieter Drawer v0 — tokens-only, :target based (no JS) */
.diet-drawer-overlay {
  position: fixed; inset: 0;
  background: color-mix(in oklab, var(--color-surface), black 50%);
  opacity: 0; pointer-events: none; transition: opacity .2s ease;
}
.diet-drawer {
  position: fixed; inset-block: 0; inset-inline-end: 0;
  inline-size: min(90vw, 28rem);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-inline-start: 1px solid var(--color-border);
  transform: translateX(100%); transition: transform .25s ease;
  display: grid; grid-template-rows: auto 1fr auto; gap: var(--space-3);
  padding: var(--space-4);
}
.diet-drawer__header { display:flex; align-items:center; justify-content:space-between; gap: var(--space-2); }
.diet-drawer__title { font: inherit; font-weight: 600; }
.diet-drawer__close {
  appearance: none; background: var(--color-surface);
  border: 1px solid var(--color-border); border-radius: var(--radius-2, .375rem);
  min-block-size: 44px; padding-inline: var(--space-3); cursor: pointer;
  color: var(--color-text-primary);
}
.diet-drawer__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
:root:target .diet-drawer-open { } /* noop to satisfy some linters */

/* Target wiring */
#drawer:target ~ .diet-drawer-overlay { opacity: .9; pointer-events: auto; }
#drawer:target ~ .diet-drawer { transform: translateX(0%); }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-drawer, .diet-drawer-overlay { transition: none; }
}
</file>

<file path="dieter/components/empty-state.css">
/* Dieter Empty State v0 */
.diet-empty {
  display:grid; justify-items:center; text-align:center; gap: var(--space-3);
  padding: var(--space-6);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, .5rem);
  color: var(--color-text-secondary);
}
.diet-empty__icon { inline-size: 3rem; block-size: 3rem; border-radius: 1rem; background: color-mix(in oklab, var(--color-surface), var(--color-primary) 10%); }
.diet-empty__title { color: var(--color-text-primary); font-weight: 600; }
.diet-empty__cta {
  appearance:none; font:inherit; min-block-size:44px; padding:0 var(--space-4);
  border:1px solid var(--color-border); border-radius: var(--radius-2, .375rem);
  background: var(--color-surface); color: var(--color-text-primary); cursor:pointer;
}
.diet-empty__cta:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/form-validation.css">
/* Dieter Form Validation Patterns v0 — tokens-only */
:root {
  /* Optional fallbacks if not present: */
  --color-danger:  #d93025;
  --color-success: #1a7f37;
  --color-warning: #b7791f;
}

/* Field group state chromes (apply on container, e.g., .diet-field, .diet-input-field, .diet-select-field, .diet-textarea-field) */
[data-state="error"]   .diet-input,
[data-state="error"]   .diet-select,
[data-state="error"]   .diet-textarea {
  border-color: var(--color-danger);
  background: color-mix(in oklab, var(--color-surface), var(--color-danger) 6%);
}

[data-state="success"] .diet-input,
[data-state="success"] .diet-select,
[data-state="success"] .diet-textarea {
  border-color: var(--color-success);
  background: color-mix(in oklab, var(--color-surface), var(--color-success) 6%);
}

[data-state="warning"] .diet-input,
[data-state="warning"] .diet-select,
[data-state="warning"] .diet-textarea {
  border-color: var(--color-warning);
  background: color-mix(in oklab, var(--color-surface), var(--color-warning) 6%);
}

/* Inline messages */
.diet-inline-msg {
  font-size: 0.875rem;
  line-height: var(--lh-body);
  margin-block-start: var(--space-1);
}

.diet-inline-msg--error   { color: var(--color-danger); }
.diet-inline-msg--success { color: var(--color-success); }
.diet-inline-msg--warning { color: var(--color-warning); }

/* Validation summary banner */
.diet-validate-summary {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  margin-block: var(--space-4);
}

.diet-validate-summary__icon {
  inline-size: 1.25rem;
  block-size: 1.25rem;
  border-radius: 50%;
  align-self: start;
}

/* Variants */
.diet-validate-summary--error {
  border-color: var(--color-danger);
  background: color-mix(in oklab, var(--color-surface), var(--color-danger) 6%);
}
.diet-validate-summary--error .diet-validate-summary__icon { background: var(--color-danger); }

.diet-validate-summary--success {
  border-color: var(--color-success);
  background: color-mix(in oklab, var(--color-surface), var(--color-success) 6%);
}
.diet-validate-summary--success .diet-validate-summary__icon { background: var(--color-success); }

.diet-validate-summary--warning {
  border-color: var(--color-warning);
  background: color-mix(in oklab, var(--color-surface), var(--color-warning) 6%);
}
.diet-validate-summary--warning .diet-validate-summary__icon { background: var(--color-warning); }

/* Link in summary respects role color */
.diet-validate-summary a {
  color: var(--color-link, var(--color-primary));
  text-underline-offset: 2px;
}

/* Focus ring for actionable elements inside summary */
.diet-validate-summary a:focus-visible,
.diet-validate-summary button:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  outline: none;
  border-radius: var(--radius-2, 0.375rem);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-validate-summary { transition: none; }
}
</file>

<file path="dieter/components/form.css">
/* Dieter Form v0 — tokens-only layout + messaging */
.diet-field { display:grid; gap: var(--space-2); }

.diet-label {
  color: var(--color-text-secondary);
  font-weight: 600;
  line-height: var(--lh-body);
}
.diet-label--required::after {
  content:" *";
  color: var(--color-danger, #d93025);
  font-weight: 700;
}

/* Help & error text */
.diet-hint {
  color: var(--color-text-tertiary, color-mix(in oklab, var(--color-text-primary), transparent 40%));
  font-size: 0.875rem;
}
.diet-error {
  color: var(--color-danger, #d93025);
  font-size: 0.875rem;
}

/* Horizontal layout variant (label left, field right) */
.diet-field--row {
  align-items: center;
  grid-template-columns: minmax(10rem, 16rem) 1fr;
  gap: var(--space-4);
}
.diet-field--row .diet-hint,
.diet-field--row .diet-error {
  grid-column: 2; /* message aligns under control */
}

/* Compact spacing variant (for dense forms) */
.diet-field--compact { gap: var(--space-1); }

/* Grouping utilities */
.diet-form-stack { display:grid; gap: var(--space-5); }
.diet-inline { display:flex; gap: var(--space-3); align-items:center; flex-wrap: wrap; }

/* High-contrast inherits from tokens; no extra rules needed */

/* Minimum touch and focus are enforced by controls themselves */
</file>

<file path="dieter/components/icon-helpers.css">
/* Dieter Icon Helpers — tokens-only spacing + icon-only button */

/* Spacing helpers for inline icons */
.diet-icon-start { margin-inline-end: var(--space-2); }
.diet-icon-end   { margin-inline-start: var(--space-2); }

/* Compact option (e.g., tags/badges) */
.diet-icon-start--xs { margin-inline-end: var(--space-1); }
.diet-icon-end--xs   { margin-inline-start: var(--space-1); }

/* Icon-only button primitive (square, ≥44px touch) */
.diet-icon-btn {
  --_pad: var(--space-3);
  display: inline-grid;
  place-items: center;
  min-inline-size: 2.75rem;   /* ≈44px */
  min-block-size: 2.75rem;    /* ≈44px */
  padding: 0;
  border-radius: var(--radius-3, 0.5rem);
  background: var(--color-role-surface);
  border: 1px solid var(--color-role-border);
  color: var(--color-role-text-primary);
  text-decoration: none;
  cursor: pointer;
}
.diet-icon-btn:hover  { background: color-mix(in oklab, var(--color-role-surface), var(--state-hover) 10%); }
.diet-icon-btn:active { background: color-mix(in oklab, var(--color-role-surface), var(--state-press) 14%); }

/* Focus ring via tokens */
.diet-icon-btn:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Size variants map to icon sizes */
.diet-icon-btn--sm { min-inline-size: 2.5rem; min-block-size: 2.5rem; }
.diet-icon-btn--lg { min-inline-size: 3rem;   min-block-size: 3rem; }

/* Ensure embedded <img class="diet-icon"> centers and inherits color */
.diet-icon-btn > .diet-icon { display: block; }
</file>

<file path="dieter/components/icon.css">
/* Dieter Icon v0 — tokens-friendly sizing, currentColor inheritance */
.diet-icon { inline-size: 1.25rem; block-size: 1.25rem; display:inline-block; vertical-align:middle; }
.diet-icon--sm { inline-size: 1rem; block-size: 1rem; }
.diet-icon--md { inline-size: 1.25rem; block-size: 1.25rem; }
.diet-icon--lg { inline-size: 1.5rem; block-size: 1.5rem; }
</file>

<file path="dieter/components/index.ts">
// Dieter Component Contracts v0
// Tokens-only design system. Props are minimal, accessible, theme-safe.

export type Size = 'sm' | 'md' | 'lg';
export type State = 'default' | 'error' | 'success' | 'warning';
export type Theme = 'light' | 'dark' | 'hc';

// Button
export interface DieterButtonProps {
  size?: Size;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
}

// Input
export interface DieterInputProps {
  size?: Size;
  disabled?: boolean;
  readOnly?: boolean;
  required?: boolean;
  state?: State;
  type?: 'text' | 'email' | 'password';
}

// Textarea
export interface DieterTextareaProps {
  size?: Size;
  disabled?: boolean;
  readOnly?: boolean;
  required?: boolean;
  state?: State;
  rows?: number;
}

// Select
export interface DieterSelectProps {
  size?: Size;
  disabled?: boolean;
  required?: boolean;
  state?: State;
}

// Choice (Checkbox/Radio)
export interface DieterChoiceProps {
  size?: Size;
  disabled?: boolean;
  required?: boolean;
  state?: State;
  type: 'checkbox' | 'radio';
  name: string;
  value: string;
  checked?: boolean;
}

// Form Group
export interface DieterFormGroupProps {
  required?: boolean;
  orientation?: 'row' | 'column';
  helpText?: string;
  errorText?: string;
}

// Validation Summary
export interface DieterValidationSummaryProps {
  state: 'error' | 'success' | 'warning';
  message: string;
  role?: 'alert' | 'status';
}
</file>

<file path="dieter/components/input.css">
/* Dieter Text Input v0 — tokens-only */
.diet-field { display: grid; gap: var(--space-2); }
.diet-label {
  color: var(--color-text-secondary, var(--color-text-primary));
  font-weight: 500;
}
.diet-label .diet-required::after { content: " *"; color: var(--color-danger, #d93025); }

.diet-input {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  display: block;
  inline-size: 100%;
  min-height: 2.75rem;                /* ≥44px */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  background: var(--_bg);
  color: var(--_fg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  transition: border-color 150ms, background-color 150ms, color 150ms, box-shadow 150ms;
  font: inherit;
}
.diet-input::placeholder { color: var(--_ph); }

/* Hover/Active */
.diet-input:hover { background: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-input:active { background: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-input:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Sizes */
.diet-input--sm { min-height: 2.5rem; padding-inline: var(--space-3); }
.diet-input--lg { min-height: 3rem;   padding-inline: var(--space-5); }

/* Disabled/ReadOnly */
.diet-input:disabled,
.diet-input[aria-disabled="true"] { opacity: .55; cursor: not-allowed; }
.diet-input[readonly] { background: color-mix(in oklab, var(--_bg), var(--state-hover) 4%); }

/* Error state */
.diet-field[data-state="error"] .diet-input,
.diet-input[aria-invalid="true"] {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}
.diet-help { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-input { transition: none; }
}
</file>

<file path="dieter/components/modal.css">
/* Dieter Modal v0 — tokens-only, <dialog>-first with graceful fallback */
.diet-modal {
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, 0.5rem);
  padding: 0;
  margin: auto;
  max-inline-size: 42rem;
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: 0 8px 32px color-mix(in oklab, var(--color-text-primary), transparent 85%);
}
.diet-modal::backdrop {
  background: color-mix(in oklab, var(--color-text-primary), transparent 75%);
}
.diet-modal__header, .diet-modal__body, .diet-modal__footer { padding: var(--space-4); }
.diet-modal__header { display:flex; align-items:center; justify-content:space-between; gap: var(--space-3); border-bottom: 1px solid var(--color-border); }
.diet-modal__title { font-weight: 600; }
.diet-modal__body { line-height: var(--lh-body, 1.6); }
.diet-modal__footer { display:flex; gap: var(--space-3); justify-content:flex-end; border-top: 1px solid var(--color-border); }
.diet-modal__close {
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-radius: var(--radius-2, 0.375rem);
  padding: var(--space-2) var(--space-3);
  min-height: 44px;
  cursor: pointer;
}
.diet-modal__close:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 10%); }
.diet-modal__close:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 14%); }
.diet-modal__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-modal-fallback {
  position: fixed; inset: 0; display: grid; place-items: center;
  background: color-mix(in oklab, var(--color-text-primary), transparent 75%);
  z-index: 1000;
}
.diet-modal-fallback .diet-modal { max-inline-size: 42rem; }
:root[data-theme="hc"] .diet-modal { box-shadow: none; border-width: 2px; }
:root[data-theme="hc"] .diet-modal::backdrop,
:root[data-theme="hc"] .diet-modal-fallback { background: color-mix(in oklab, var(--color-text-primary), transparent 65%); }
</file>

<file path="dieter/components/navbar.css">
/* Dieter Navbar v0 — top nav */
.diet-navbar {
  display:flex; align-items:center; gap: var(--space-4);
  padding: var(--space-3) var(--space-4);
  background: var(--color-surface);
  border-block-end: 1px solid var(--color-border);
}
.diet-navbar__brand { font-weight:700; }
.diet-navbar__links { display:flex; gap: var(--space-3); flex-wrap: wrap; }
.diet-navbar__link {
  display:inline-flex; align-items:center; min-block-size:44px; padding-inline: var(--space-2);
  color: var(--color-text-secondary); text-decoration:none; border-radius: var(--radius-2, .375rem);
}
.diet-navbar__link:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgba(0,0,0,.05)) 10%); }
.diet-navbar__link[aria-current="page"] { color: var(--color-text-primary); font-weight:600; }
.diet-navbar__link:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/pagination.css">
/* Dieter Pagination — tokens-only */
.diet-pagination{
  display: inline-flex;
  gap: var(--space-2, .5rem);
  align-items: center;
  background: var(--color-surface, #fff);
  border: 1px solid var(--color-border, #e5e7eb);
  border-radius: var(--radius-3, .5rem);
  padding: var(--space-1, .25rem);
}

.diet-page{
  display: inline-flex;
  align-items: center; justify-content: center;
  min-width: 2.25rem; min-height: 2.25rem; /* ≥ 36px; page items aren’t primary controls */
  padding-inline: .5rem;
  border-radius: var(--radius-2, .375rem);
  color: var(--color-text-primary, #111);
  text-decoration: none;
  border: 1px solid transparent;
}

.diet-page:hover{
  background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

.diet-page:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

.diet-page[aria-current="page"]{
  background: var(--color-primary, #2563eb);
  color: var(--color-on-primary, #fff);
  border-color: var(--color-primary, #2563eb);
}

.diet-page[aria-disabled="true"]{
  opacity: .5;
  pointer-events: none;
}
</file>

<file path="dieter/components/popover.css">
/* Dieter Popover v0 — tokens-only, native details/summary as disclosure */
.diet-popover { position: relative; display: inline-block; }

.diet-popover summary {
  list-style: none;
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  min-height: 44px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  cursor: pointer;
}
.diet-popover summary::-webkit-details-marker { display: none; }
.diet-popover summary:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-popover summary:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-popover summary:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Panel */
.diet-popover__panel {
  position: absolute;
  inset-block-start: calc(100% + var(--space-2));
  inset-inline-start: 0;
  min-inline-size: 16rem;
  max-inline-size: 90vw;
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: var(--shadow-lg, 0 8px 24px rgb(0 0 0 / .18));
  z-index: 1100;
}

/* Open state via [open] */
.diet-popover[open] .diet-popover__panel { display: block; }

/* Basic menu semantics inside panel (optional) */
.diet-popover__list { display: grid; gap: var(--space-1); margin: 0; padding: 0; list-style: none; }
.diet-popover__item a {
  display: block;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  color: var(--color-text-primary);
  text-decoration: none;
}
.diet-popover__item a:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-popover__item a:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-popover__item a:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-popover__panel { border-width: 2px; }
</file>

<file path="dieter/components/progress.css">
/* Dieter Progress v0 — tokens-only, determinate */
.diet-progress {
  --_track: var(--color-surface);
  --_bar: var(--color-primary, #0b5fff);
  --_bd: 1px solid var(--color-border);
  inline-size: 100%;
  block-size: var(--space-3); /* ~12px */
  background: var(--_track);
  border: var(--_bd);
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  position: relative;
}

.diet-progress__bar {
  inline-size: 0%;
  block-size: 100%;
  background: var(--_bar);
  transition: inline-size 160ms ease;
}

/* Sizes */
.diet-progress--sm { block-size: var(--space-2); }
.diet-progress--lg { block-size: var(--space-4); }

/* Variants */
.diet-progress--success { --_bar: var(--color-success, #1a7f37); }
.diet-progress--warning { --_bar: var(--color-warning, #b7791f); }
.diet-progress--danger  { --_bar: var(--color-danger,  #d93025); }

/* Accessible name/value live region helper (visually hidden) */
.diet-sr {
  position: absolute !important; inline-size: 1px; block-size: 1px;
  padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
}
</file>

<file path="dieter/components/segmented.css">
/* Dieter Segmented Control v0 — single-select segments */
.diet-segmented {
  display: inline-flex;
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
}
.diet-segmented button {
  appearance: none;
  border: none;
  background: transparent;
  color: var(--color-text-primary);
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-4);
  cursor: pointer;
}
.diet-segmented button:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-segmented button:focus-visible {
  outline: none;
  box-shadow:
    inset 0 0 0 2px var(--color-bg, #fff),
    inset 0 0 0 calc(2px + var(--focus-ring-width, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-segmented button[aria-checked="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
.diet-segmented[role="tablist"] button[aria-selected="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
</file>

<file path="dieter/components/select.css">
/* Dieter Select v0 — tokens-only, native control */
.diet-select-field { display: grid; gap: var(--space-2); }

.diet-select {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_radius: var(--radius-3, 0.5rem);

  inline-size: 100%;
  min-height: 2.75rem; /* ≥44px touch */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  color: var(--_fg);
  background: var(--_bg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  font: inherit;
  appearance: none; /* simplify styling */
  background-image:
    linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position:
    right calc(var(--space-4) + 0.6rem) center,
    right calc(var(--space-4)) center;
  background-size: 6px 6px, 6px 6px;
  background-repeat: no-repeat;
}

.diet-select:hover { background-color: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-select:active { background-color: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-select:focus-visible{
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Placeholder-ish (first option disabled) */
.diet-select-placeholder { color: var(--_ph); }

/* Sizes */
.diet-select--sm { min-height: 2.5rem;  padding-inline: var(--space-3); }
.diet-select--lg { min-height: 3rem;    padding-inline: var(--space-5); }

/* Disabled & Error */
.diet-select:disabled,
.diet-select[aria-disabled="true"] { opacity:.55; cursor:not-allowed; }
.diet-select-field[data-state="error"] .diet-select,
.diet-select[aria-invalid="true"]{
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}

.diet-select-help { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-select-error{ color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) { .diet-select{ transition:none; } }

/* High-contrast tweaks are inherited from tokens via colors/borders */
</file>

<file path="dieter/components/sidebar.css">
/* Dieter Sidebar v0 — vertical nav */
.diet-sidebar {
  display:grid; gap: var(--space-1);
  padding: var(--space-3);
  background: var(--color-surface-2, var(--color-surface));
  border-inline-end: 1px solid var(--color-border);
  inline-size: 16rem;
}
.diet-sidebar__section { margin-block: var(--space-2); }
.diet-sidebar__label { font-size: 0.875rem; color: var(--color-text-tertiary); margin-block-end: var(--space-1); }
.diet-sidebar__link {
  display:flex; align-items:center; gap: var(--space-2);
  min-block-size:44px; padding-inline: var(--space-2);
  border-radius: var(--radius-2, .375rem);
  color: var(--color-text-secondary); text-decoration:none;
}
.diet-sidebar__link:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgba(0,0,0,.05)) 10%); }
.diet-sidebar__link[aria-current="page"] { color: var(--color-text-primary); font-weight:600; }
.diet-sidebar__link:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/skeleton.css">
/* Dieter Skeleton v0 — tokens-only */
@keyframes diet-skeleton-shimmer {
  0%  { background-position: 200% 0; }
  100%{ background-position: -200% 0; }
}

.diet-skeleton {
  --_base: var(--color-surface-muted, color-mix(in oklab, var(--color-surface), var(--color-role-muted, #9aa0a6) 16%));
  --_hi: var(--color-surface, #fff);
  display: inline-block;
  background: linear-gradient(90deg,
    color-mix(in oklab, var(--_base), var(--_hi) 0%),
    color-mix(in oklab, var(--_base), var(--_hi) 12%),
    color-mix(in oklab, var(--_base), var(--_hi) 0%));
  background-size: 200% 100%;
  animation: diet-skeleton-shimmer 1.2s linear infinite;
  border-radius: var(--radius-2, 0.375rem);
  color: transparent; /* hide accidental text */
}

/* Shapes */
.diet-skeleton--text { inline-size: 100%; block-size: 1em; line-height: 1; }
.diet-skeleton--rect { inline-size: 100%; block-size: var(--space-8); }
.diet-skeleton--avatar { inline-size: 3rem; block-size: 3rem; border-radius: 50%; }

/* Density sizes */
.diet-skeleton--sm { block-size: 0.75em; }
.diet-skeleton--lg { block-size: 1.25em; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-skeleton { animation: none; background-position: 0 0; }
}
</file>

<file path="dieter/components/status.css">
/* Dieter Status v0 — dot/badge */
.diet-status { display:inline-flex; align-items:center; gap: .5ch; font-size: .875rem; }
.diet-status__dot { inline-size: .6rem; block-size: .6rem; border-radius: 50%; background: var(--color-border); }
.diet-status--success .diet-status__dot { background: var(--color-success, #1a7f37); }
.diet-status--warning .diet-status__dot { background: var(--color-warning, #b7791f); }
.diet-status--error   .diet-status__dot { background: var(--color-danger, #d93025); }
.diet-status--info    .diet-status__dot { background: var(--color-primary); }
</file>

<file path="dieter/components/stepper.css">
/* Dieter Stepper v0 — ordered steps */
.diet-stepper { display:flex; gap: var(--space-4); list-style:none; padding:0; margin:0; }
.diet-step {
  display:flex; align-items:center; gap: var(--space-2);
  color: var(--color-text-secondary);
}
.diet-step__circle {
  inline-size: 1.75rem; block-size: 1.75rem; border-radius: 50%;
  display:grid; place-items:center;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  font-size: .875rem;
}
.diet-step[aria-current="step"] { color: var(--color-text-primary); }
.diet-step[aria-current="step"] .diet-step__circle {
  border-color: var(--color-primary); background: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%);
}
</file>

<file path="dieter/components/switch.css">
/* Dieter Switch v0 — tokens-only, native checkbox + role="switch" */
.diet-switch {
  display: inline-grid;
  grid-auto-flow: column;
  align-items: center;
  gap: var(--space-2);
  min-block-size: 44px; /* touch */
}
.diet-switch input[type="checkbox"] {
  appearance: none;
  inline-size: 2.5rem;  /* 40px */
  block-size: 1.5rem;   /* 24px */
  margin: 0;
  border-radius: 9999px;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  position: relative;
  outline: none;
  cursor: pointer;
  transition: background .15s, border-color .15s;
}
.diet-switch input[type="checkbox"]::after {
  content: "";
  position: absolute;
  inset-block-start: 2px;
  inset-inline-start: 2px;
  inline-size: 1.2rem;
  block-size: 1.2rem;
  border-radius: 50%;
  background: var(--color-bg, #fff);
  box-shadow: 0 1px 2px rgb(0 0 0 / 0.2);
  transition: transform .15s;
}
.diet-switch input[type="checkbox"]:checked {
  background: var(--color-primary);
  border-color: var(--color-primary);
}
.diet-switch input[type="checkbox"]:checked::after {
  transform: translateX(1rem);
}
.diet-switch input[type="checkbox"]:hover {
  background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%);
}
.diet-switch input[type="checkbox"]:active::after { transform: translateX(0) scale(0.96); }
.diet-switch input[type="checkbox"]:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}
.diet-switch input[type="checkbox"]:disabled {
  opacity: .55; cursor: not-allowed;
}
.diet-switch__label {
  color: var(--color-text-primary);
  user-select: none;
}

/* High-contrast tweaks */
:root[data-theme="hc"] .diet-switch input[type="checkbox"]::after { box-shadow: none; }
</file>

<file path="dieter/components/table.css">
/* Dieter Table v0 — tokens-only, accessible */
:root{
  --_table-bg: var(--color-surface, #fff);
  --_table-fg: var(--color-text-primary, #111);
  --_table-bd: var(--color-border, #e5e7eb);
  --_table-pad-y: var(--space-3, .75rem);
  --_table-pad-x: var(--space-4, 1rem);
  --_table-radius: var(--radius-3, .5rem);
  --_table-gap: var(--space-2, .5rem);
}

.diet-table{
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  background: var(--_table-bg);
  color: var(--_table-fg);
  border: 1px solid var(--_table-bd);
  border-radius: var(--_table-radius);
  overflow: clip;
}

/* Cells */
.diet-table th,
.diet-table td{
  padding: var(--_table-pad-y) var(--_table-pad-x);
  border-bottom: 1px solid var(--_table-bd);
  vertical-align: middle;
  text-align: left;
  line-height: var(--lh-body, 1.5);
  font-size: var(--text-14, .875rem);
}

.diet-table thead th{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 6%);
  font-weight: 600;
  color: var(--color-text-secondary, #374151);
}

.diet-table tr:last-child td{ border-bottom: 0; }

/* Zebra */
.diet-table--zebra tbody tr:nth-child(odd) td{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 4%);
}

/* Compact density */
.diet-table--compact{
  --_table-pad-y: var(--space-2, .5rem);
  --_table-pad-x: var(--space-3, .75rem);
}

/* Row hover */
.diet-table tbody tr:hover td{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

/* Focusable row/link focus ring */
.diet-table a:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-radius: var(--radius-2, .375rem);
}

/* Responsive stacked (opt-in via data-table="stacked") */
[data-table="stacked"] .diet-table,
[data-table="stacked"] .diet-table thead,
[data-table="stacked"] .diet-table tbody,
[data-table="stacked"] .diet-table tr,
[data-table="stacked"] .diet-table th,
[data-table="stacked"] .diet-table td{
  display: block;
}

[data-table="stacked"] .diet-table thead{ display: none; }

[data-table="stacked"] .diet-table tr{
  border-bottom: 1px solid var(--_table-bd);
  padding-block: var(--_table-pad-y);
}

[data-table="stacked"] .diet-table td{
  border: 0;
  padding: var(--space-2) var(--_table-pad-x);
}

[data-table="stacked"] .diet-table td::before{
  content: attr(data-label);
  display: block;
  font-weight: 600;
  color: var(--color-text-secondary, #4b5563);
  margin-bottom: var(--space-1, .25rem);
  font-size: .8125rem;
}

/* HC tweaks */
html[data-theme="hc"] .diet-table{ border-width: 2px; }
html[data-theme="hc"] .diet-table td,
html[data-theme="hc"] .diet-table th{ border-bottom-width: 2px; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce){
  .diet-table tbody tr:hover td{ transition: none; }
}
</file>

<file path="dieter/components/tabs.css">
/* Dieter Tabs v0 — tokens-only, :target-based (no JS) */
.diet-tabs {
  display: grid;
  gap: var(--space-3);
}
.diet-tabs__list {
  display: flex;
  gap: var(--space-2);
  border-bottom: 1px solid var(--color-border);
}
.diet-tab {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  min-height: 44px;
  padding: 0 var(--space-3);
  border: 1px solid transparent;
  border-bottom: 2px solid transparent;
  border-radius: var(--radius-2, 0.375rem) var(--radius-2, 0.375rem) 0 0;
  color: var(--color-text-secondary, color-mix(in oklab, var(--color-text-primary), transparent 30%));
  text-decoration: none;
  background: var(--color-surface);
}
.diet-tab:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-tab:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-tab:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-tab[aria-current="page"] {
  color: var(--color-text-primary);
  border-color: var(--color-border);
  border-bottom-color: var(--color-primary, currentColor);
  background: color-mix(in oklab, var(--color-surface), var(--state-hover) 6%);
}
.diet-tabs__panels { padding: var(--space-3) 0; }
.diet-tabpanel {
  display: none;
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  padding: var(--space-4);
  color: var(--color-text-primary);
}

/* :target routing */
.diet-tabpanel:target { display: block; }

/* Default-visible panel helper (when no hash) */
.diet-tabpanel.is-default { display: block; }

/* High contrast tweaks */
:root[data-theme="hc"] .diet-tab[aria-current="page"] { border-width: 2px; }
</file>

<file path="dieter/components/textarea.css">
/* Dieter Textarea v0 — tokens-only, native control */
.diet-textarea-field { display:grid; gap: var(--space-2); }

.diet-textarea {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  inline-size: 100%;
  min-block-size: 6rem; /* default ≥ 96px */
  padding: var(--space-3) var(--space-4);
  color: var(--_fg);
  background: var(--_bg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  font: inherit;
  line-height: var(--lh-body);
  resize: vertical;
}

.diet-textarea::placeholder { color: var(--_ph); }

/* Hover/Active */
.diet-textarea:hover  { background-color: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-textarea:active { background-color: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-textarea:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Sizes */
.diet-textarea--sm { min-block-size: 4rem;  padding: var(--space-2) var(--space-3); }
.diet-textarea--lg { min-block-size: 8rem;  padding: var(--space-4) var(--space-5); }

/* Disabled & Readonly */
.diet-textarea:disabled,
.diet-textarea[aria-disabled="true"] { opacity:.55; cursor:not-allowed; }
.diet-textarea[readonly] { background: color-mix(in oklab, var(--_bg), var(--state-hover) 6%); }

/* Error */
.diet-textarea[aria-invalid="true"],
.diet-textarea-field[data-state="error"] .diet-textarea {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}

.diet-textarea-hint  { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-textarea-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) { .diet-textarea { transition:none; } }
</file>

<file path="dieter/components/toast.css">
/* Dieter Toast v0 — tokens-only, non-blocking notices */
.diet-toast-region {
  position: fixed;
  inset: 1rem 1rem auto auto;
  display: grid;
  gap: var(--space-2);
  z-index: 1100;
}
.diet-toast {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: start;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: 0 4px 16px color-mix(in oklab, var(--color-text-primary), transparent 88%);
  min-inline-size: 18rem;
}
.diet-toast--success { border-color: var(--color-success, #1a7f37); background: color-mix(in oklab, var(--color-surface), var(--color-success, #1a7f37) 6%); }
.diet-toast--warning { border-color: var(--color-warning, #b7791f); background: color-mix(in oklab, var(--color-surface), var(--color-warning, #b7791f) 6%); }
.diet-toast--error   { border-color: var(--color-danger,  #d93025); background: color-mix(in oklab, var(--color-surface), var(--color-danger,  #d93025) 6%); }
.diet-toast__title { font-weight: 600; }
.diet-toast__close {
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-radius: var(--radius-2, 0.375rem);
  padding: var(--space-1) var(--space-2);
  min-height: 36px;
  cursor: pointer;
}
.diet-toast__close:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 10%); }
.diet-toast__close:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 14%); }
.diet-toast__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/toggle.css">
/* Dieter Toggle v0 — tokens-only, aria-pressed pattern */
.diet-toggle {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-inline-size: 2.75rem;
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  cursor: pointer;
  font: inherit;
}
.diet-toggle:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-toggle:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-toggle:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}
.diet-toggle[aria-pressed="true"] {
  background: var(--color-primary);
  border-color: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
.diet-toggle:disabled { opacity:.55; cursor:not-allowed; }

.diet-toggle--sm  { min-block-size: 2.5rem;  padding: 0 var(--space-2); }
.diet-toggle--lg  { min-block-size: 3rem;    padding: 0 var(--space-4); }
</file>

<file path="dieter/components/tooltip.css">
/* Dieter Tooltip v0 — tokens-only, CSS only (hover + focus-visible) */
.diet-tooltip {
  position: relative;
  display: inline-flex;
  align-items: center;
}

/* Trigger helper (any focusable element may be used) */
.diet-tooltip-trigger {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: 44px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  text-decoration: none;
}
.diet-tooltip-trigger:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-tooltip-trigger:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-tooltip-trigger:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Tooltip bubble */
.diet-tooltip-bubble {
  position: absolute;
  inset-inline-start: 50%;
  inset-block-end: calc(100% + var(--space-2));
  transform: translateX(-50%);
  max-inline-size: 24rem;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface-elevated, color-mix(in oklab, var(--color-surface), var(--state-hover) 6%));
  color: var(--color-text-primary);
  box-shadow: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .1));
  line-height: var(--lh-body, 1.6);
  font-size: 0.875rem;
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
  transition: opacity 150ms ease;
  z-index: 1000;
}

/* Arrow */
.diet-tooltip-bubble::after {
  content: "";
  position: absolute;
  inset-block-start: 100%;
  inset-inline-start: 50%;
  transform: translateX(-50%);
  inline-size: 8px;
  block-size: 8px;
  background: inherit;
  border-inline-start: 1px solid var(--color-border);
  border-block-start: 1px solid var(--color-border);
  rotate: 45deg;
}

/* Show on hover/focus of the trigger */
.diet-tooltip:has(.diet-tooltip-trigger:hover) .diet-tooltip-bubble,
.diet-tooltip:has(.diet-tooltip-trigger:focus-visible) .diet-tooltip-bubble {
  opacity: 1;
  visibility: visible;
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-tooltip-bubble { border-width: 2px; }
</file>

<file path="dieter/components/utilities.css">
/* Dieter Utilities v0 — tokens-only, no raw values */

/* Layout primitives */
.stack { display:flex; flex-direction:column; gap: var(--space-3); }
.stack--tight { gap: var(--space-2); }
.stack--loose { gap: var(--space-4); }

.cluster { display:flex; flex-wrap:wrap; gap: var(--space-3); align-items:center; }
.cluster--tight { gap: var(--space-2); }
.cluster--loose { gap: var(--space-4); }

/* Content containers (max-widths use token-friendly rems) */
.container { inline-size: 100%; max-inline-size: 72rem; margin-inline:auto; padding-inline: var(--space-4); }
.container--wide { max-inline-size: 90rem; }
.container--narrow { max-inline-size: 48rem; }

/* A11y helpers */
.visually-hidden {
  position:absolute !important;
  inline-size:1px; block-size:1px;
  padding:0; margin:-1px; overflow:hidden; clip:rect(0 0 0 0);
  white-space:nowrap; border:0;
}
.visually-hidden--focusable:focus,
.visually-hidden--focusable:focus-visible {
  position: static !important;
  inline-size: auto; block-size: auto; margin: 0; clip: auto; overflow: visible;
}

/* Text truncation (single line) */
.truncate {
  max-inline-size: 100%;
  inline-size: fit-content;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Text alignment */
.text-left   { text-align: start; }
.text-center { text-align: center; }
.text-right  { text-align: end; }

/* Display helpers */
.inline   { display:inline; }
.inline-block { display:inline-block; }
.block    { display:block; }

/* Utility borders & radius (tokenized) */
.border { border: 1px solid var(--color-role-border); }
.rounded { border-radius: var(--radius-3, 0.5rem); }

/* Spacing shims (only a few; rely on existing .p-*/.m-* if present) */
.gap-2 { gap: var(--space-2); }
.gap-3 { gap: var(--space-3); }
.gap-4 { gap: var(--space-4); }
</file>

<file path="dieter/icons/svg/archivebox.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.451171875 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M6.7237 26.1377H21.7137C24.7437 26.1377 26.4537 24.4577 26.4537 21.4377V8.7377C27.7137 8.2277 28.4537 7.0277 28.4537 5.4377V3.5777C28.4537 1.4377 27.1137 -0.0023 24.9337 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.0277 0.7337 8.2177 1.9937 8.7377V21.4377C1.9937 24.4577 3.7037 26.1377 6.7237 26.1377ZM3.9737 5.8377C3.4437 5.8377 3.1737 5.5677 3.1737 5.0277V3.9877C3.1737 3.4577 3.4437 3.1877 3.9737 3.1877H24.4737C25.0037 3.1877 25.2637 3.4577 25.2637 3.9877V5.0277C25.2637 5.5677 25.0037 5.8377 24.4737 5.8377ZM7.0837 22.6977C6.0537 22.6977 5.5237 22.1877 5.5237 21.1277V9.0277H22.9237V21.1277C22.9237 22.1877 22.3837 22.6977 21.3537 22.6977ZM9.9937 14.7077H18.4737C19.2337 14.7077 19.8137 14.1477 19.8137 13.3577V12.9177C19.8137 12.1277 19.2537 11.5677 18.4737 11.5677H9.9937C9.2137 11.5677 8.6537 12.1277 8.6537 12.9177V13.3577C8.6537 14.1477 9.2237 14.7077 9.9937 14.7077Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-down.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21.943359375 26.181640625" fill="currentColor" aria-hidden="true">
  <path d="M10.9637 -0.0049C9.7937 -0.0049 8.9837 0.8251 8.9837 2.0551V17.2251L9.1237 20.1951L6.3737 17.0251L3.2937 13.9551C2.9437 13.5851 2.4737 13.3451 1.8737 13.3451C0.8037 13.3451 0.0037 14.1351 0.0037 15.2551C0.0037 15.7751 0.2037 16.2551 0.6137 16.6751L9.5037 25.5851C9.8737 25.9651 10.4337 26.1851 10.9637 26.1851C11.5137 26.1851 12.0537 25.9651 12.4237 25.5851L21.3237 16.6751C21.7337 16.2551 21.9437 15.7751 21.9437 15.2551C21.9437 14.1351 21.1337 13.3451 20.0737 13.3451C19.4837 13.3451 19.0137 13.5851 18.6437 13.9551L15.5737 17.0251L12.8237 20.1951L12.9437 17.2251V2.0551C12.9437 0.8251 12.1537 -0.0049 10.9637 -0.0049Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-left-arrow-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.278830884007853 33.55078125" fill="currentColor" aria-hidden="true">
  <path d="M0.5854 7.4328C-0.2046 8.1928 -0.1946 9.3928 0.5854 10.1428L7.6454 17.0028C7.9854 17.3528 8.5054 17.5728 8.9754 17.5728C10.0354 17.5728 10.7754 16.8128 10.7754 15.7628C10.7754 15.2728 10.6154 14.8328 10.2554 14.4928L7.3754 11.7128L5.9854 10.5428L8.5054 10.6128H25.4554C26.4954 10.6128 27.2754 9.8328 27.2754 8.7928C27.2754 7.7428 26.4954 6.9628 25.4554 6.9628H8.5054L5.9854 7.0228L7.3754 5.8528L10.2554 3.0728C10.6154 2.7528 10.7754 2.3128 10.7754 1.8028C10.7754 0.7528 10.0354 0.0028 8.9754 0.0028C8.5054 0.0028 7.9854 0.2228 7.6454 0.5628ZM26.6854 26.1128C27.4854 25.3628 27.4654 24.1628 26.6854 23.4028L19.6354 16.5428C19.2954 16.2028 18.7754 15.9828 18.3054 15.9828C17.2454 15.9828 16.5054 16.7328 16.5054 17.7828C16.5054 18.2828 16.6654 18.7128 17.0254 19.0628L19.9054 21.8328L21.2854 23.0128L18.7754 22.9428H1.8354C0.7854 22.9428 0.0054 23.7228 0.0054 24.7628C0.0054 25.8128 0.7854 26.5928 1.8354 26.5928H18.7754L21.2854 26.5228L19.9054 27.7028L17.0254 30.4728C16.6654 30.8028 16.5054 31.2428 16.5054 31.7428C16.5054 32.8028 17.2454 33.5528 18.3054 33.5528C18.7754 33.5528 19.2954 33.3328 19.6354 32.9928Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.619140625 21.943359375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 10.9806C0.0037 11.5106 0.2337 12.0706 0.6037 12.4406L9.5137 21.3306C9.9237 21.7406 10.4137 21.9406 10.8937 21.9406C12.0537 21.9406 12.8537 21.1406 12.8537 20.0706C12.8537 19.4806 12.5937 19.0006 12.2237 18.6506L9.1637 15.5906L6.1237 12.8006L9.1237 12.9606H24.5637C25.8037 12.9606 26.6237 12.1506 26.6237 10.9806C26.6237 9.7906 25.8037 9.0006 24.5637 9.0006H9.1237L6.1437 9.1606L9.1637 6.3706L12.2237 3.2906C12.5937 2.9406 12.8537 2.4706 12.8537 1.8706C12.8537 0.8106 12.0537 0.0006 10.8937 0.0006C10.4137 0.0006 9.9237 0.2006 9.5037 0.6306L0.6037 9.5106C0.2337 9.8806 0.0037 10.4406 0.0037 10.9806Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.619140625 21.943359375" fill="currentColor" aria-hidden="true">
  <path d="M26.6237 10.9806C26.6237 10.4406 26.3837 9.8806 26.0137 9.5106L17.1137 0.6306C16.6937 0.2006 16.2037 0.0006 15.7237 0.0006C14.5637 0.0006 13.7637 0.8106 13.7637 1.8706C13.7637 2.4706 14.0237 2.9406 14.3937 3.2906L17.4637 6.3706L20.4837 9.1606L17.5037 9.0006H2.0537C0.8237 9.0006 0.0037 9.7906 0.0037 10.9806C0.0037 12.1506 0.8237 12.9606 2.0537 12.9606H17.5037L20.4937 12.8006L17.4637 15.5906L14.3937 18.6506C14.0237 19.0006 13.7637 19.4806 13.7637 20.0706C13.7637 21.1406 14.5637 21.9406 15.7237 21.9406C16.2037 21.9406 16.6937 21.7406 17.1037 21.3306L26.0137 12.4406C26.3837 12.0706 26.6237 11.5106 26.6237 10.9806Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-trianglehead-2-clockwise-rotate-90.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35.02322493761829 28.875" fill="currentColor" aria-hidden="true">
  <path d="M7.8465 3.9249C6.9465 4.7049 6.9365 5.7949 7.5065 6.4849C8.0965 7.2049 9.1465 7.4149 10.1865 6.5749C12.0765 4.7449 14.6665 3.5949 17.5265 3.5949C22.9965 3.5949 27.3565 7.5349 28.2165 12.4849H26.0865C24.9265 12.4849 24.5865 13.4549 25.3065 14.4549L28.9165 19.4449C29.5065 20.2449 30.4365 20.2349 31.0265 19.4449L34.6265 14.4549C35.3665 13.4549 35.0365 12.4849 33.8565 12.4849H31.8665C30.9665 5.5949 24.9065 0.0049 17.5265 0.0049C13.7365 0.0049 10.3065 1.5449 7.8465 3.9249ZM0.3865 14.4149C-0.3435 15.4049 -0.0135 16.3749 1.1665 16.3749H3.1865C4.0865 23.2649 10.1465 28.8749 17.5265 28.8749C21.3165 28.8749 24.7565 27.3149 27.2165 24.9249C28.1065 24.1549 28.1265 23.0649 27.5665 22.3849C26.9565 21.6449 25.9265 21.4549 24.8865 22.2849C23.0065 24.1149 20.3965 25.2749 17.5265 25.2749C12.0565 25.2749 7.6965 21.3449 6.8365 16.3749H8.9265C10.0865 16.3749 10.4465 15.4249 9.7165 14.4249L6.0965 9.4149C5.5265 8.6149 4.5965 8.6249 4.0065 9.4149Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-trianglehead-clockwise.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 31.80084709867549" fill="currentColor" aria-hidden="true">
  <path d="M0.0027 17.3644C0.0027 25.2944 6.5227 31.8044 14.4327 31.8044C22.3627 31.8044 28.8727 25.2944 28.8727 17.3644C28.8727 13.2344 26.8827 8.9444 23.8727 6.5644C22.9127 5.7444 21.8227 5.7944 21.1827 6.5644C20.4627 7.3944 20.7427 8.4444 21.5027 9.2244C23.8327 11.2544 25.2827 14.0844 25.2827 17.3644C25.2927 23.3744 20.4527 28.2044 14.4327 28.2044C8.4327 28.2044 3.6127 23.3744 3.6127 17.3644C3.6127 12.4244 6.8527 8.3144 11.3327 7.0044V8.9244C11.3327 10.0944 12.2927 10.4444 13.2927 9.7244L18.2927 6.0944C19.1027 5.5244 19.0827 4.5844 18.2927 4.0044L13.3027 0.3844C12.3027 -0.3456 11.3327 -0.0156 11.3327 1.1644V3.2844C4.8827 4.6944 0.0027 10.5044 0.0027 17.3644Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-backward-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8437 16.9277C9.6637 16.9277 10.1837 16.3477 10.1837 15.4377V13.5777L9.9837 11.8777L11.6037 13.7177L15.9437 18.0477C16.2837 18.3777 16.6637 18.5277 17.1137 18.5277C17.9637 18.5277 18.6337 17.9277 18.6337 17.0177C18.6337 16.6077 18.4537 16.1977 18.1537 15.9177L13.7937 11.5377L11.9337 9.9077L13.5537 10.1277H15.5437C16.4437 10.1277 17.0337 9.6077 17.0337 8.7877C17.0337 7.9677 16.4437 7.4677 15.5337 7.4677H9.2937C8.1937 7.4677 7.5037 8.0677 7.5037 9.2277V15.4377C7.5037 16.3277 8.0237 16.9277 8.8437 16.9277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-bin.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.58984375 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M9.8937 26.1377H24.7037C27.7237 26.1377 29.0537 24.5277 29.5137 21.5177L31.4637 9.0077C33.4037 8.8477 34.5937 7.4677 34.5937 5.4377V3.5777C34.5937 1.4377 33.2537 -0.0023 31.0937 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.4677 1.2037 8.8477 3.1337 9.0077L5.0737 21.5177C5.5537 24.5277 6.8637 26.1377 9.8937 26.1377ZM3.9737 5.9177C3.4437 5.9177 3.1737 5.6477 3.1737 5.1177V3.9077C3.1737 3.3777 3.4437 3.1077 3.9737 3.1077H30.6237C31.1537 3.1077 31.4137 3.3777 31.4137 3.9077V5.1177C31.4137 5.6477 31.1537 5.9177 30.6237 5.9177ZM10.2037 22.6977C9.1737 22.6977 8.6937 22.2577 8.5137 21.1277L6.5737 9.0277H28.0137L26.0837 21.1277C25.9037 22.2577 25.4137 22.6977 24.3937 22.6977ZM18.7737 19.6977V16.1377L18.6337 14.1877L19.4937 15.1077L20.1937 15.8477C20.3937 16.1077 20.7837 16.2977 21.1237 16.2977C21.8437 16.2977 22.4037 15.7777 22.4037 15.0677C22.4037 14.6677 22.2737 14.3877 21.9537 14.1077L18.4737 10.9477C18.1137 10.6277 17.7737 10.4277 17.3237 10.4277C16.8737 10.4277 16.5137 10.6277 16.1637 10.9477L12.6837 14.1077C12.3737 14.3877 12.2337 14.6677 12.2337 15.0677C12.2337 15.7777 12.7837 16.2977 13.5037 16.2977C13.8637 16.2977 14.2237 16.1077 14.4537 15.8477L15.1437 15.1077L15.9937 14.1877L15.8637 16.1377V19.6977C15.8637 20.5077 16.5337 21.0677 17.3237 21.0677C18.1137 21.0677 18.7737 20.5077 18.7737 19.6977Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-right-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM17.3037 16.9277C18.1337 16.9277 18.6337 16.3277 18.6337 15.4377V9.2277C18.6337 8.0677 17.9637 7.4677 16.8437 7.4677H10.6137C9.7037 7.4677 9.1237 7.9677 9.1237 8.7877C9.1237 9.6077 9.7037 10.1277 10.6137 10.1277H12.6037L14.2037 9.9077L12.3637 11.5377L7.9937 15.9177C7.6937 16.1977 7.5037 16.6077 7.5037 17.0177C7.5037 17.9277 8.1937 18.5277 9.0337 18.5277C9.4837 18.5277 9.8537 18.3777 10.2137 18.0477L14.5337 13.7177L16.1637 11.8777L15.9737 13.5777V15.4377C15.9737 16.3477 16.4837 16.9277 17.3037 16.9277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21.943359375 26.181640625" fill="currentColor" aria-hidden="true">
  <path d="M10.9637 26.1851C12.1537 26.1851 12.9437 25.3651 12.9437 24.1351V8.9551L12.8237 5.9851L15.5737 9.1651L18.6437 12.2251C19.0137 12.5951 19.4837 12.8351 20.0737 12.8351C21.1337 12.8351 21.9437 12.0451 21.9437 10.9251C21.9437 10.4051 21.7337 9.9251 21.3237 9.5051L12.4237 0.6051C12.0537 0.2151 11.5137 -0.0049 10.9637 -0.0049C10.4337 -0.0049 9.8737 0.2151 9.5037 0.6051L0.6137 9.5051C0.2037 9.9251 0.0037 10.4051 0.0037 10.9251C0.0037 12.0451 0.8037 12.8351 1.8737 12.8351C2.4737 12.8351 2.9437 12.5951 3.2937 12.2251L6.3737 9.1651L9.1237 5.9851L8.9837 8.9551V24.1351C8.9837 25.3651 9.7937 26.1851 10.9637 26.1851Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-uturn-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.783203125 26.93359375" fill="currentColor" aria-hidden="true">
  <path d="M26.7837 17.3115C26.7837 11.5215 22.8837 7.5515 16.7337 7.5515H9.1037L6.0137 7.7015L8.0937 5.9915L10.8537 3.2915C11.2237 2.9415 11.4737 2.5015 11.4737 1.8915C11.4737 0.8115 10.7037 0.0015 9.5537 0.0015C9.0537 0.0015 8.5337 0.2215 8.1337 0.6115L0.5837 8.0615C0.2237 8.4315 0.0037 8.9915 0.0037 9.5315C0.0037 10.0715 0.2237 10.6215 0.5837 10.9915L8.1337 18.4415C8.5337 18.8415 9.0537 19.0615 9.5537 19.0615C10.7037 19.0615 11.4737 18.2515 11.4737 17.1715C11.4737 16.5615 11.2237 16.1215 10.8537 15.7615L8.0937 13.0815L6.0137 11.3715L9.1037 11.5115H16.5937C20.5537 11.5115 22.9037 13.8815 22.9037 17.2315C22.9037 20.5715 20.5537 22.9815 16.5937 22.9815H13.3537C12.1937 22.9815 11.3437 23.8615 11.3437 24.9515C11.3437 26.0615 12.2137 26.9315 13.3537 26.9315H16.8537C22.9437 26.9315 26.7837 23.1615 26.7837 17.3115Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrowshape-forward.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.1875 26.072265625" fill="currentColor" aria-hidden="true">
  <path d="M30.1888 13.0304C30.1888 12.4304 29.9388 11.7604 29.3988 11.2404L18.4988 1.1504C17.5988 0.3304 16.9988 0.0004 16.1788 0.0004C14.8888 0.0004 13.9188 1.0104 13.9188 2.2804V6.7104H4.0088C1.4787 6.7104 -0.0013 8.1904 -0.0013 10.7004V15.4504C-0.0013 17.9504 1.4787 19.4304 4.0088 19.4304H13.9188V23.8304C13.9188 25.1004 14.8888 26.0704 16.1588 26.0704C17.0088 26.0704 17.6788 25.7304 18.4988 24.9804L29.3787 14.8304C29.9288 14.3104 30.1888 13.6204 30.1888 13.0304ZM26.2488 13.0304C26.2488 13.1104 26.2087 13.1804 26.1088 13.2704L17.3788 21.5204C17.2987 21.6004 17.2288 21.6304 17.1488 21.6304C17.0188 21.6304 16.9288 21.5304 16.9288 21.4004V16.7304C16.9288 16.4304 16.7888 16.3004 16.4888 16.3004H4.3488C3.5588 16.3004 3.1288 15.9004 3.1288 15.0804V11.0604C3.1288 10.2404 3.5588 9.8404 4.3488 9.8404H16.4888C16.7888 9.8404 16.9288 9.7204 16.9288 9.4104V4.6204C16.9288 4.4804 17.0188 4.3904 17.1588 4.3904C17.2288 4.3904 17.3088 4.4304 17.3788 4.4804L26.1088 12.7804C26.2087 12.8904 26.2488 12.9504 26.2488 13.0304Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrowshape-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.1875 26.072265625" fill="currentColor" aria-hidden="true">
  <path d="M0.0049 13.0304C0.0049 13.6204 0.2549 14.3104 0.8049 14.8304L11.6849 24.9804C12.5049 25.7304 13.1749 26.0704 14.0249 26.0704C15.3149 26.0704 16.2649 25.1004 16.2649 23.8304V19.4304H26.1849C28.7149 19.4304 30.1849 17.9504 30.1849 15.4504V10.7004C30.1849 8.1904 28.7149 6.7104 26.1849 6.7104H16.2649V2.2804C16.2649 1.0104 15.3149 0.0004 14.0149 0.0004C13.1949 0.0004 12.5949 0.3304 11.6849 1.1504L0.8049 11.2404C0.2449 11.7604 0.0049 12.4304 0.0049 13.0304ZM3.9349 13.0304C3.9349 12.9504 3.9749 12.8904 4.0849 12.7804L12.8149 4.4804C12.8749 4.4304 12.9649 4.3904 13.0249 4.3904C13.1649 4.3904 13.2649 4.4804 13.2649 4.6204V9.4104C13.2649 9.7204 13.3949 9.8404 13.6949 9.8404H25.8349C26.6349 9.8404 27.0549 10.2404 27.0549 11.0604V15.0804C27.0549 15.9004 26.6349 16.3004 25.8349 16.3004H13.6949C13.3949 16.3004 13.2649 16.4304 13.2649 16.7304V21.4004C13.2649 21.5304 13.1649 21.6304 13.0449 21.6304C12.9649 21.6304 12.8949 21.6004 12.8149 21.5204L4.0849 13.2704C3.9749 13.1804 3.9349 13.1104 3.9349 13.0304Z"/>
</svg>
</file>

<file path="dieter/icons/svg/bag.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.484375 29.75" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 24.9471C0.0037 28.0571 1.7137 29.7471 4.8237 29.7471H20.8937C23.7937 29.7471 25.4837 28.0571 25.4837 24.9471V10.8371C25.4837 7.7471 23.7737 6.0471 20.6537 6.0471H19.1137C19.0737 2.6771 16.2537 -0.0029 12.7437 -0.0029C9.2437 -0.0029 6.4237 2.6771 6.3737 6.0471H4.8237C1.7137 6.0471 0.0037 7.7371 0.0037 10.8371ZM9.6637 6.0471C9.7037 4.2971 10.9637 2.9271 12.7437 2.9271C14.5237 2.9271 15.7937 4.2971 15.8337 6.0471ZM3.5237 24.5271V11.2771C3.5237 10.1171 4.1137 9.5671 5.2137 9.5671H20.2737C21.3737 9.5671 21.9537 10.1171 21.9537 11.2771V24.5271C21.9537 25.6871 21.3737 26.2271 20.5037 26.2271H5.2137C4.1137 26.2271 3.5237 25.6871 3.5237 24.5271Z"/>
</svg>
</file>

<file path="dieter/icons/svg/bell.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.80859375 29.39453125" fill="currentColor" aria-hidden="true">
  <path d="M0.0007 21.8584C0.0007 23.2984 1.0207 24.2684 2.6707 24.2684H8.0407C8.1507 26.8684 10.4207 29.3984 13.9007 29.3984C17.3907 29.3984 19.6607 26.8784 19.7707 24.2684H25.1407C26.7707 24.2684 27.8107 23.2984 27.8107 21.8584C27.8107 20.2584 26.5807 18.9884 25.2507 17.8284C24.1707 16.8984 23.9707 15.1084 23.6807 12.6784C23.3507 7.8584 21.6607 4.4284 18.2007 3.1884C17.5707 1.3084 15.9807 -0.0016 13.9007 -0.0016C11.8307 -0.0016 10.2407 1.3084 9.6107 3.1884C6.1507 4.4284 4.4607 7.8584 4.1307 12.6784C3.8407 15.1084 3.6407 16.8984 2.5607 17.8284C1.2307 18.9884 0.0007 20.2584 0.0007 21.8584ZM4.3307 20.9884V20.8384C4.8807 20.4684 5.6307 19.8684 6.2307 19.1284C7.1007 18.0884 7.4907 15.7484 7.6707 13.2884C7.9207 8.4784 9.4907 6.7284 11.4607 6.1884C11.7707 6.1284 11.9607 5.9784 12.0007 5.5484C12.1107 4.2284 12.8107 3.4084 13.9007 3.4084C15.0007 3.4084 15.6907 4.2284 15.8007 5.5484C15.8507 5.9784 16.0407 6.1284 16.3507 6.1884C18.3207 6.7284 19.8907 8.4784 20.1207 13.2884C20.3007 15.7484 20.7307 18.0884 21.5707 19.1284C22.1807 19.8684 22.8507 20.4684 23.3907 20.8384V20.9884ZM11.4207 24.2684H16.3907C16.3007 25.7484 15.2807 26.7284 13.9007 26.7284C12.5207 26.7284 11.5107 25.7484 11.4207 24.2684Z"/>
</svg>
</file>

<file path="dieter/icons/svg/checkmark-circle.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 28.888671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM13.0027 20.9486C13.5627 20.9486 14.0727 20.6586 14.3927 20.1686L20.2627 11.0986C20.4827 10.7686 20.6327 10.4286 20.6327 10.0986C20.6327 9.2986 19.9227 8.7386 19.1527 8.7386C18.6527 8.7386 18.2127 9.0086 17.8827 9.5586L12.9727 17.4586L10.6927 14.6586C10.3527 14.2286 9.9827 14.0586 9.5327 14.0586C8.7327 14.0586 8.0927 14.6786 8.0927 15.4786C8.0927 15.8586 8.2127 16.1886 8.5027 16.5386L11.5627 20.1886C11.9627 20.6886 12.4327 20.9486 13.0027 20.9486Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-down.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.046875 14.861328125" fill="currentColor" aria-hidden="true">
  <path d="M12.5237 14.8611C13.2037 14.8611 13.7837 14.6011 14.3137 14.0511L24.4337 3.7011C24.8437 3.2911 25.0437 2.8011 25.0437 2.2011C25.0437 0.9811 24.0737 0.0011 22.8737 0.0011C22.2837 0.0011 21.7237 0.2411 21.2737 0.7011L12.5337 9.7211L3.7837 0.7011C3.3337 0.2411 2.7737 0.0011 2.1737 0.0011C0.9737 0.0011 0.0037 0.9811 0.0037 2.2011C0.0037 2.7911 0.2037 3.2811 0.6137 3.7011L10.7337 14.0511C11.2937 14.6111 11.8537 14.8611 12.5237 14.8611Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.861328125 25.046875" fill="currentColor" aria-hidden="true">
  <path d="M0.0041 12.5245C0.0041 13.1945 0.2441 13.7545 0.8041 14.3045L11.1441 24.4345C11.5641 24.8445 12.0541 25.0445 12.6641 25.0445C13.8641 25.0445 14.8641 24.0745 14.8641 22.8745C14.8641 22.2545 14.6041 21.7145 14.1541 21.2645L5.1441 12.5145L14.1541 3.7745C14.6041 3.3345 14.8641 2.7745 14.8641 2.1745C14.8641 0.9845 13.8641 0.0045 12.6641 0.0045C12.0541 0.0045 11.5641 0.2045 11.1441 0.6145L0.8041 10.7445C0.2441 11.2745 0.0141 11.8445 0.0041 12.5245Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.84765625 25.046875" fill="currentColor" aria-hidden="true">
  <path d="M14.8496 12.5245C14.8496 11.8445 14.5996 11.2745 14.0396 10.7445L3.7096 0.6145C3.2996 0.2045 2.7896 0.0045 2.1896 0.0045C0.9796 0.0045 -0.0004 0.9845 -0.0004 2.1745C-0.0004 2.7745 0.2496 3.3345 0.6996 3.7745L9.7096 12.5145L0.6996 21.2645C0.2496 21.7145 -0.0004 22.2545 -0.0004 22.8745C-0.0004 24.0745 0.9796 25.0445 2.1896 25.0445C2.7896 25.0445 3.2996 24.8445 3.7096 24.4345L14.0396 14.3045C14.6196 13.7545 14.8496 13.1945 14.8496 12.5245Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.046875 14.861328125" fill="currentColor" aria-hidden="true">
  <path d="M0.6137 11.1577C0.2037 11.5677 0.0037 12.0677 0.0037 12.6577C0.0037 13.8777 0.9737 14.8577 2.1737 14.8577C2.7737 14.8577 3.3337 14.6177 3.7837 14.1677L12.5337 5.1577L21.2737 14.1677C21.7137 14.6277 22.2837 14.8577 22.8737 14.8577C24.0737 14.8577 25.0437 13.8777 25.0437 12.6577C25.0437 12.0577 24.8437 11.5677 24.4337 11.1577L14.3137 0.8077C13.7837 0.2577 13.2037 -0.0023 12.5237 -0.0023C11.8537 -0.0023 11.2937 0.2477 10.7337 0.8077Z"/>
</svg>
</file>

<file path="dieter/icons/svg/circle-grid-2x1.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.58203125 17.240234375" fill="currentColor" aria-hidden="true">
  <path d="M8.6127 17.2444C13.3527 17.2444 17.2227 13.3544 17.2227 8.6144C17.2227 3.8644 13.3527 0.0044 8.6127 0.0044C3.8527 0.0044 0.0027 3.8644 0.0027 8.6144C0.0027 13.3544 3.8527 17.2444 8.6127 17.2444ZM29.9527 17.2444C34.7027 17.2444 38.5827 13.3544 38.5827 8.6144C38.5827 3.8644 34.7027 0.0044 29.9527 0.0044C25.2127 0.0044 21.3427 3.8644 21.3427 8.6144C21.3427 13.3544 25.1927 17.2444 29.9527 17.2444ZM8.6127 13.8644C5.7327 13.8644 3.3627 11.5144 3.3627 8.6144C3.3627 5.7244 5.7327 3.3744 8.6127 3.3744C11.4827 3.3744 13.8627 5.7444 13.8627 8.6144C13.8627 11.4944 11.4827 13.8644 8.6127 13.8644ZM29.9527 13.8644C27.0727 13.8644 24.7227 11.5144 24.7227 8.6144C24.7227 5.7244 27.0727 3.3744 29.9527 3.3744C32.8427 3.3744 35.2027 5.7444 35.2027 8.6144C35.2027 11.4944 32.8427 13.8644 29.9527 13.8644Z"/>
</svg>
</file>

<file path="dieter/icons/svg/circlebadge-2.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.271484375 20.9453125" fill="currentColor" aria-hidden="true">
  <path d="M10.4727 20.9438C11.9627 20.9438 13.4027 20.6138 14.6927 20.0338C15.9527 20.6038 17.3327 20.9438 18.8027 20.9438C24.5027 20.9438 29.2727 16.1737 29.2727 10.4738C29.2727 4.7538 24.5027 0.0038 18.7827 0.0038C17.3227 0.0038 15.9427 0.3238 14.6927 0.9138C13.3827 0.3238 11.9527 0.0038 10.4627 0.0038C4.7427 0.0038 0.0027 4.7538 0.0027 10.4738C0.0027 16.1737 4.7627 20.9438 10.4727 20.9438ZM10.4727 17.4638C6.6827 17.4638 3.4727 14.2638 3.4727 10.4738C3.4727 6.6738 6.6727 3.4737 10.4627 3.4737C14.2627 3.4737 17.4627 6.6838 17.4627 10.4738C17.4627 14.2638 14.2627 17.4638 10.4727 17.4638ZM20.9427 10.4738C20.9427 7.8238 19.9027 5.3637 18.2227 3.5038C18.4127 3.4838 18.5927 3.4737 18.7827 3.4737C22.5827 3.4737 25.7827 6.6838 25.7827 10.4738C25.7827 14.2638 22.5827 17.4638 18.8027 17.4638C18.6027 17.4638 18.4127 17.4638 18.2427 17.4338C19.9027 15.5738 20.9427 13.1238 20.9427 10.4738Z"/>
</svg>
</file>

<file path="dieter/icons/svg/clear.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8737 18.7277C9.3237 18.7277 9.6837 18.5977 9.9637 18.2977L13.0837 15.1777L16.2137 18.2977C16.5037 18.5777 16.8537 18.7277 17.2937 18.7277C18.1337 18.7277 18.7737 18.0877 18.7737 17.2577C18.7737 16.8577 18.6037 16.4977 18.3237 16.2277L15.1937 13.0877L18.3337 9.9277C18.6237 9.6277 18.7737 9.2877 18.7737 8.8977C18.7737 8.0677 18.1337 7.4277 17.3037 7.4277C16.8737 7.4277 16.5337 7.5577 16.2237 7.8577L13.0837 10.9877L9.9537 7.8777C9.6637 7.5777 9.3237 7.4377 8.8737 7.4377C8.0537 7.4377 7.4137 8.0777 7.4137 8.9177C7.4137 9.2977 7.5637 9.6477 7.8437 9.9277L10.9937 13.0877L7.8437 16.2277C7.5637 16.4977 7.4137 16.8677 7.4137 17.2577C7.4137 18.0877 8.0537 18.7277 8.8737 18.7277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/cloud-hail.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32.443359375 33.318359375" fill="currentColor" aria-hidden="true">
  <path d="M6.9727 21.8086H24.1327C28.8727 21.8086 32.4427 18.1986 32.4427 13.6586C32.4427 9.0186 28.7927 5.5086 23.9927 5.5086C22.3527 2.3386 19.3327 -0.0014 14.8427 -0.0014C9.4327 -0.0014 5.1527 4.0186 4.5427 9.1486C1.9527 9.9986 0.0027 12.2386 0.0027 15.2986C0.0027 18.9486 2.7027 21.8086 6.9727 21.8086ZM7.0427 18.5786C4.4827 18.5786 3.2127 17.2086 3.2127 15.3686C3.2127 13.7786 4.1827 12.4986 6.4127 11.9186C7.2627 11.6986 7.5027 11.3186 7.6127 10.4586C8.1327 5.9286 11.1527 3.2286 14.8427 3.2286C17.6627 3.2286 19.9627 4.7986 21.4527 7.7086C21.8227 8.4186 22.2427 8.6786 23.1227 8.6786C27.1927 8.6786 29.2327 10.9386 29.2327 13.7286C29.2327 16.4486 27.1227 18.5786 24.1327 18.5786ZM9.0327 26.7686L9.7727 25.4886C10.0627 24.9886 9.9227 24.3786 9.4227 24.0886C8.9127 23.7986 8.3427 23.9786 8.0427 24.4886L7.3027 25.7886C7.0227 26.2686 7.1527 26.8686 7.6527 27.1486C8.1627 27.4386 8.7527 27.2486 9.0327 26.7686ZM15.0027 28.8586L16.9427 25.4986C17.2227 25.0086 17.0927 24.3886 16.5827 24.0986C16.0827 23.8186 15.5127 23.9986 15.2127 24.5186L13.2727 27.8886C12.9927 28.3586 13.1127 28.9586 13.6127 29.2586C14.1227 29.5286 14.7227 29.3386 15.0027 28.8586ZM23.3627 26.8086L24.1027 25.5286C24.3927 25.0286 24.2527 24.4286 23.7527 24.1486C23.2427 23.8486 22.6727 24.0186 22.3627 24.5386L21.6327 25.8386C21.3527 26.3186 21.4627 26.9186 21.9827 27.2086C22.4927 27.4986 23.0827 27.2986 23.3627 26.8086ZM6.2227 31.2286C7.1227 31.2286 7.8627 30.4786 7.8627 29.5686C7.8627 28.6886 7.1227 27.9486 6.2227 27.9486C5.3327 27.9486 4.5827 28.6886 4.5827 29.5686C4.5827 30.4786 5.3327 31.2286 6.2227 31.2286ZM20.5527 31.2786C21.4527 31.2786 22.1927 30.5286 22.1927 29.6286C22.1927 28.7386 21.4527 27.9986 20.5527 27.9986C19.6627 27.9986 18.9127 28.7386 18.9127 29.6286C18.9127 30.5286 19.6627 31.2786 20.5527 31.2786ZM12.1927 33.3186C13.0827 33.3186 13.8327 32.5786 13.8327 31.6686C13.8327 30.7886 13.0827 30.0386 12.1927 30.0386C11.2927 30.0386 10.5527 30.7886 10.5527 31.6686C10.5527 32.5786 11.2927 33.3186 12.1927 33.3186Z"/>
</svg>
</file>

<file path="dieter/icons/svg/delete-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.201171875 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M25.3709 26.1377C28.4909 26.1377 30.2009 24.7477 30.2009 21.6377V4.7977C30.2009 1.6977 28.4909 -0.0023 25.3709 -0.0023H13.6309C11.3909 -0.0023 10.1209 0.5177 8.7109 2.1377L1.5209 10.1077C0.3409 11.4477 0.0009 12.1777 0.0009 13.0577C0.0009 13.9477 0.3509 14.7077 1.5209 16.0377L8.7109 23.9677C10.1409 25.5977 11.3909 26.1377 13.6309 26.1377ZM24.9809 22.6177H13.4009C12.5809 22.6177 12.0309 22.3777 11.4409 21.7377L4.2909 13.8777C3.9909 13.5577 3.9009 13.3177 3.9009 13.0577C3.9009 12.7977 3.9909 12.5777 4.2909 12.2477L11.4409 4.3477C12.0209 3.7077 12.5809 3.5277 13.3809 3.5277H24.9809C26.0909 3.5277 26.6709 4.0777 26.6709 5.2377V20.9177C26.6709 22.0777 26.0909 22.6177 24.9809 22.6177ZM13.4509 18.7577C13.9009 18.7577 14.2609 18.6077 14.5509 18.3177L17.6609 15.2077L20.7909 18.3177C21.0809 18.6077 21.4409 18.7577 21.8709 18.7577C22.7109 18.7577 23.3509 18.0977 23.3509 17.2677C23.3509 16.8877 23.1909 16.5277 22.9009 16.2377L19.7709 13.0977L22.9109 9.9377C23.2009 9.6477 23.3509 9.2977 23.3509 8.9277C23.3509 8.0777 22.7109 7.4377 21.8909 7.4377C21.4509 7.4377 21.1209 7.5777 20.8109 7.8877L17.6609 11.0177L14.5309 7.8877C14.2509 7.5977 13.9009 7.4677 13.4509 7.4677C12.6309 7.4677 11.9909 8.0977 11.9909 8.9277C11.9909 9.3077 12.1409 9.6677 12.4309 9.9577L15.5709 13.0977L12.4309 16.2577C12.1409 16.5277 11.9909 16.8877 11.9909 17.2677C11.9909 18.0977 12.6309 18.7577 13.4509 18.7577Z"/>
</svg>
</file>

<file path="dieter/icons/svg/document.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24.240234375 30.091796875" fill="currentColor" aria-hidden="true">
  <path d="M4.8037 30.0902H19.4437C22.5437 30.0902 24.2437 28.3802 24.2437 25.2702V12.8802C24.2437 10.7502 23.9237 9.6802 22.5737 8.3102L16.0137 1.6802C14.6837 0.3402 13.5737 0.0002 11.5537 0.0002H4.8037C1.6937 0.0002 0.0037 1.7102 0.0037 4.8302V25.2702C0.0037 28.4002 1.6937 30.0902 4.8037 30.0902ZM5.2237 26.5602C4.0637 26.5602 3.5237 25.9802 3.5237 24.8802V5.2202C3.5237 4.1302 4.0637 3.5302 5.2237 3.5302H10.5937V10.2302C10.5937 12.6102 11.7337 13.7302 14.0937 13.7302H20.7137V24.8802C20.7137 25.9802 20.1837 26.5602 19.0137 26.5602ZM14.3537 10.8302C13.7637 10.8302 13.4937 10.5502 13.4937 9.9702V3.8102L20.4437 10.8302Z"/>
</svg>
</file>

<file path="dieter/icons/svg/ellipsis-circle.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 28.888671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM8.1027 16.6286C9.3127 16.6286 10.2927 15.6386 10.2927 14.4386C10.2927 13.2386 9.3127 12.2486 8.1027 12.2486C6.9027 12.2486 5.9227 13.2386 5.9227 14.4386C5.9227 15.6386 6.9027 16.6286 8.1027 16.6286ZM14.4227 16.6286C15.6227 16.6286 16.5927 15.6386 16.5927 14.4386C16.5927 13.2386 15.6227 12.2486 14.4227 12.2486C13.2027 12.2486 12.2327 13.2386 12.2327 14.4386C12.2327 15.6386 13.2027 16.6286 14.4227 16.6286ZM20.7227 16.6286C21.9327 16.6286 22.9027 15.6386 22.9027 14.4386C22.9027 13.2386 21.9327 12.2486 20.7227 12.2486C19.5227 12.2486 18.5427 13.2386 18.5427 14.4386C18.5427 15.6386 19.5227 16.6286 20.7227 16.6286Z"/>
</svg>
</file>

<file path="dieter/icons/svg/eraser-line-dashed.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 39.70937776856488 29.626643659003065" fill="currentColor" aria-hidden="true">
  <path d="M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421ZM16.5517 28.7721H25.9417C26.9117 28.7721 27.7017 27.9821 27.7017 27.0121C27.7017 26.0421 26.9117 25.2421 25.9417 25.2421H20.0717ZM31.4517 28.7721H37.9417C38.9117 28.7721 39.7117 27.9821 39.7117 27.0121C39.7117 26.0421 38.9117 25.2421 37.9417 25.2421H31.4517C30.4817 25.2421 29.6917 26.0421 29.6917 27.0121C29.6917 27.9821 30.4817 28.7721 31.4517 28.7721Z"/>
</svg>
</file>

<file path="dieter/icons/svg/eraser.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.61962396511093 29.626643659003065" fill="currentColor" aria-hidden="true">
  <path d="M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421Z"/>
</svg>
</file>

<file path="dieter/icons/svg/externaldrive.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.04296875 24.7734375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 17.9341C0.0037 21.9141 2.8737 24.7741 7.0537 24.7741H26.9837C31.1737 24.7741 34.0437 21.9141 34.0437 17.9341C34.0437 16.6941 33.6837 15.5841 33.2637 14.6041L28.4537 3.6541C27.4237 1.2941 25.4437 0.0041 22.7237 0.0041H11.3337C8.6137 0.0041 6.6337 1.2941 5.6037 3.6541L0.8637 14.4641C0.4137 15.4941 0.0037 16.6241 0.0037 17.9341ZM5.7237 11.2941L8.6937 4.3441C9.0937 3.3541 10.0337 2.8141 11.2537 2.8141H22.8137C24.0237 2.8141 24.9637 3.3541 25.3737 4.3441L28.3237 11.2941C27.9037 11.1741 27.4637 11.1041 26.9837 11.1041H7.0537C6.5937 11.1041 6.1437 11.1741 5.7237 11.2941ZM3.2937 17.9341C3.2937 15.8741 4.7837 14.3841 7.0537 14.3841H26.9837C29.2537 14.3841 30.7637 15.8741 30.7637 17.9341C30.7637 20.1541 29.2537 21.4941 26.9837 21.4941H7.0537C4.7837 21.4941 3.2937 20.0041 3.2937 17.9341ZM24.9337 17.9341C24.9337 18.9941 25.7837 19.8241 26.8337 19.8241C27.8637 19.8241 28.7137 18.9941 28.7137 17.9341C28.7137 16.9241 27.8537 16.0541 26.8337 16.0541C25.8037 16.0541 24.9337 16.9241 24.9337 17.9341Z"/>
</svg>
</file>

<file path="dieter/icons/svg/folder-badge-plus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37.1875 26.728515625" fill="currentColor" aria-hidden="true">
  <path d="M29.9937 14.4097C33.9237 14.4097 37.1837 11.1297 37.1837 7.1897C37.1837 3.2497 33.9337 -0.0003 29.9937 -0.0003C26.0437 -0.0003 22.7937 3.2697 22.7937 7.1897C22.7937 11.1397 26.0437 14.4097 29.9937 14.4097ZM4.8237 26.7297H27.2337C30.1337 26.7297 31.8237 25.0197 31.8237 21.9297V16.2697C30.7937 16.5297 29.4337 16.5297 28.3037 16.2697V21.5097C28.3037 22.6497 27.7137 23.1997 26.6237 23.1997H5.2137C4.1137 23.1997 3.5237 22.6497 3.5237 21.4897V11.9897H22.2537C21.6537 11.1297 21.2037 10.1397 20.9637 9.0897H3.5237V5.6697C3.5237 4.5897 4.1737 3.9897 5.2537 3.9897H7.4337C8.4937 3.9897 9.1037 4.2197 9.9937 4.9097L10.6737 5.4697C11.7437 6.2897 12.4837 6.5597 14.0437 6.5597H20.8537C20.8737 5.2997 21.1337 4.1797 21.7137 3.0397H14.9937C13.9437 3.0397 13.3037 2.7897 12.4237 2.1197L11.7437 1.5697C10.6737 0.7397 9.9537 0.4697 8.3837 0.4697H4.5637C1.7337 0.4697 0.0037 2.1697 0.0037 5.2597V21.9297C0.0037 25.0297 1.7137 26.7297 4.8237 26.7297ZM29.9937 11.8497C29.3237 11.8497 28.9037 11.4197 28.9037 10.7697V8.2997H26.4437C25.8037 8.2997 25.3637 7.8597 25.3437 7.2097C25.3437 6.5497 25.7837 6.1097 26.4437 6.1097H28.9037V3.6597C28.9037 3.0197 29.3237 2.5797 29.9937 2.5697C30.6537 2.5597 31.0937 3.0097 31.0937 3.6597V6.1097H33.5537C34.1937 6.1097 34.6337 6.5497 34.6337 7.2097C34.6337 7.8597 34.1937 8.2997 33.5537 8.2997H31.0937V10.7697C31.0937 11.4197 30.6537 11.8497 29.9937 11.8497Z"/>
</svg>
</file>

<file path="dieter/icons/svg/folder.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.828125 26.263671875" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.2648H27.2337C30.1337 26.2648 31.8237 24.5548 31.8237 21.4648V7.3648C31.8237 4.2648 30.1237 2.5748 27.0037 2.5748H14.9937C13.9437 2.5748 13.3037 2.3248 12.4237 1.6548L11.7437 1.1048C10.6737 0.2748 9.9537 0.0048 8.3837 0.0048H4.5637C1.7337 0.0048 0.0037 1.7048 0.0037 4.7948V21.4648C0.0037 24.5648 1.7137 26.2648 4.8237 26.2648ZM3.5237 5.2048C3.5237 4.1248 4.1737 3.5248 5.2537 3.5248H7.4337C8.4937 3.5248 9.1037 3.7548 9.9937 4.4448L10.6737 5.0048C11.7437 5.8248 12.4837 6.0948 14.0437 6.0948H26.6237C27.7137 6.0948 28.3037 6.6348 28.3037 7.7948V8.6248H3.5237ZM5.2137 22.7348C4.1137 22.7348 3.5237 22.1848 3.5237 21.0248V11.5248H28.3037V21.0448C28.3037 22.1848 27.7137 22.7348 26.6237 22.7348Z"/>
</svg>
</file>

<file path="dieter/icons/svg/gearshape.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.4609375 30.4609375" fill="currentColor" aria-hidden="true">
  <path d="M13.8327 30.4616H16.6227C17.8927 30.4616 18.9227 29.6516 19.1927 28.4416L19.7027 26.2616L19.9327 26.1816L21.8327 27.3616C22.9027 28.0116 24.1827 27.8316 25.0727 26.9316L27.0027 25.0216C27.9027 24.0916 28.0527 22.8216 27.4027 21.7816L26.2327 19.8916L26.3027 19.6716L28.4627 19.1716C29.6727 18.8716 30.4627 17.8516 30.4627 16.6016V13.9216C30.4627 12.6616 29.6827 11.6316 28.4627 11.3316L26.3327 10.8116L26.2327 10.5916L27.4127 8.7116C28.0827 7.6716 27.9227 6.4016 27.0027 5.4516L25.0727 3.5416C24.2027 2.6416 22.9127 2.4616 21.8427 3.1216L19.9427 4.2816L19.7027 4.2016L19.1927 2.0216C18.9227 0.8116 17.8927 0.0016 16.6227 0.0016H13.8327C12.5627 0.0016 11.5527 0.8216 11.2627 2.0216L10.7627 4.2016L10.5127 4.2816L8.6127 3.1216C7.5427 2.4716 6.2627 2.6416 5.3827 3.5416L3.4627 5.4516C2.5527 6.4016 2.3927 7.6716 3.0527 8.7116L4.2227 10.5916L4.1427 10.8116L1.9927 11.3316C0.7827 11.6316 0.0027 12.6616 0.0027 13.9216V16.6016C0.0027 17.8516 0.7927 18.8716 1.9927 19.1716L4.1527 19.6716L4.2427 19.8916L3.0627 21.7816C2.3927 22.8216 2.5527 24.0916 3.4627 25.0216L5.3827 26.9316C6.2727 27.8316 7.5627 28.0116 8.6227 27.3616L10.5227 26.1816L10.7627 26.2616L11.2627 28.4416C11.5527 29.6516 12.5627 30.4616 13.8327 30.4616ZM14.3827 27.3716C14.1627 27.3716 14.0527 27.2616 14.0227 27.0716L13.2327 23.7316C12.3027 23.5616 11.3927 23.1716 10.5827 22.6416L7.6727 24.4416C7.5027 24.5516 7.3427 24.5416 7.1927 24.3916L6.0127 23.2116C5.8527 23.0616 5.8627 22.9016 5.9627 22.7316L7.7627 19.8216C7.2827 19.0316 6.9027 18.1416 6.7127 17.2116L3.3727 16.4316C3.1827 16.3916 3.0727 16.3016 3.0727 16.0616V14.4416C3.0727 14.1916 3.1827 14.0916 3.3727 14.0516L6.7127 13.2716C6.9227 12.3316 7.3027 11.4016 7.7527 10.6516L5.9627 7.7416C5.8527 7.5716 5.8427 7.4116 5.9927 7.2616L7.1827 6.1016C7.3427 5.9516 7.4827 5.9316 7.6727 6.0416L10.5727 7.8216C11.2427 7.3716 12.2627 6.9416 13.2327 6.7216L14.0227 3.3916C14.0527 3.2016 14.1627 3.0916 14.3827 3.0916H16.0827C16.3127 3.0916 16.4027 3.2016 16.4427 3.3916L17.2427 6.7416C18.2127 6.9416 19.1027 7.3416 19.8827 7.8216L22.7727 6.0616C22.9727 5.9516 23.1027 5.9616 23.2727 6.1116L24.4627 7.2716C24.6127 7.4416 24.5927 7.5916 24.4827 7.7616L22.7127 10.6516C23.1627 11.4016 23.5527 12.3316 23.7527 13.2616L27.0827 14.0516C27.2927 14.0916 27.3827 14.1916 27.3827 14.4416V16.0616C27.3827 16.3016 27.2727 16.3916 27.0827 16.4316L23.7527 17.2216C23.5527 18.1316 23.1727 19.0616 22.6927 19.8216L24.4827 22.7216C24.5827 22.8916 24.5927 23.0516 24.4327 23.2016L23.2527 24.3816C23.0927 24.5316 22.9427 24.5416 22.7727 24.4316L19.8827 22.6416C19.0627 23.1716 18.2527 23.5316 17.2427 23.7316L16.4427 27.0716C16.4027 27.2616 16.3127 27.3716 16.0827 27.3716ZM15.2327 20.3816C18.0627 20.3816 20.3727 18.0716 20.3727 15.2316C20.3727 12.4116 18.0627 10.1016 15.2327 10.1016C12.4027 10.1016 10.0727 12.4116 10.0727 15.2316C10.0727 18.0716 12.4027 20.3816 15.2327 20.3816ZM15.2327 17.6416C13.9227 17.6416 12.8427 16.5616 12.8427 15.2316C12.8427 13.9316 13.9227 12.8516 15.2327 12.8516C16.5127 12.8516 17.5927 13.9316 17.5927 15.2316C17.5927 16.5416 16.5127 17.6416 15.2327 17.6416Z"/>
</svg>
</file>

<file path="dieter/icons/svg/heart.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.451171875 26.4140625" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 8.9843C0.0037 14.8443 4.9337 20.6943 12.4537 25.6043C13.0837 26.0143 13.7637 26.4143 14.2237 26.4143C14.6837 26.4143 15.3637 26.0143 15.9937 25.6043C23.5137 20.6943 28.4537 14.8443 28.4537 8.9843C28.4537 3.6143 24.7237 0.0043 20.1637 0.0043C17.4437 0.0043 15.4237 1.1943 14.2237 2.9143C13.0337 1.1943 11.0037 0.0043 8.2837 0.0043C3.7337 0.0043 0.0037 3.6143 0.0037 8.9843ZM3.7337 8.9443C3.7337 5.7843 5.8837 3.6143 8.7337 3.6143C11.0337 3.6143 12.2737 4.9243 13.1137 6.1143C13.4937 6.6743 13.8037 6.9043 14.2237 6.9043C14.6437 6.9043 14.9137 6.6743 15.3437 6.1143C16.2237 4.9243 17.4137 3.6143 19.7037 3.6143C22.5737 3.6143 24.7237 5.7843 24.7237 8.9443C24.7237 13.3543 20.2637 18.4543 14.4337 22.3243C14.3437 22.3843 14.2737 22.4343 14.2237 22.4343C14.1737 22.4343 14.1137 22.3843 14.0137 22.3243C8.1937 18.4543 3.7337 13.3543 3.7337 8.9443Z"/>
</svg>
</file>

<file path="dieter/icons/svg/humidity.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.18133278998727 24.650390625" fill="currentColor" aria-hidden="true">
  <path d="M5.9575 8.2071C12.2875 8.2071 15.5275 3.0471 21.0875 3.0471C22.3875 3.0471 23.4975 3.3371 24.8075 4.0971C25.5475 4.5071 26.3375 4.2771 26.7775 3.6671C27.2875 2.9271 27.1075 1.9171 26.1575 1.3571C24.5775 0.4471 22.8975 -0.0029 21.0875 -0.0029C14.7075 -0.0029 11.4775 5.1671 5.9575 5.1671C4.6575 5.1671 3.5575 4.8671 2.2375 4.1171C1.4975 3.6871 0.6875 3.9371 0.2675 4.5671C-0.2225 5.3071 -0.0425 6.3071 0.8875 6.8471C2.4675 7.7471 4.1475 8.2071 5.9575 8.2071ZM23.9175 24.6471C27.4075 24.6471 30.1775 21.9271 30.1775 18.5271C30.1775 16.6671 29.2675 14.8471 28.5175 13.4371L25.4675 7.7671C25.0975 7.0971 24.6275 6.7671 23.9175 6.7671C23.2075 6.7671 22.7475 7.0971 22.3875 7.7671L19.3575 13.4371C18.5975 14.8471 17.6675 16.6671 17.6675 18.5271C17.6675 21.9271 20.4575 24.6471 23.9175 24.6471ZM5.9675 15.5471C11.0375 15.5471 14.2775 12.0071 18.3875 10.8871C18.9975 9.7071 19.6375 8.5471 20.2675 7.3671C14.3175 7.8171 11.2975 12.4971 5.9675 12.4971C4.6675 12.4971 3.5775 12.1971 2.2675 11.4471C1.5075 11.0171 0.7075 11.2671 0.2975 11.8971C-0.2125 12.6371 -0.0325 13.6271 0.8975 14.1771C2.4775 15.0771 4.1675 15.5471 5.9675 15.5471ZM23.9175 22.0671C21.8875 22.0671 20.2575 20.5071 20.2575 18.5271C20.2575 17.2671 20.8975 16.0471 21.6475 14.6471L23.7975 10.6371C23.8675 10.4971 23.9975 10.4971 24.0875 10.6371L26.2075 14.6471C26.9575 16.0471 27.6075 17.2671 27.6075 18.5271C27.6075 20.5071 25.9875 22.0671 23.9175 22.0671ZM5.9575 22.8771C9.9475 22.8771 12.7475 20.7271 15.7175 19.2471C15.5675 18.2071 15.7075 16.9371 16.0675 15.7871C12.5475 17.3071 9.8375 19.8271 5.9575 19.8271C4.6575 19.8271 3.5575 19.5271 2.2375 18.7671C1.4975 18.3471 0.6875 18.5971 0.2675 19.2271C-0.2225 19.9571 -0.0425 20.9571 0.8875 21.5071C2.4675 22.4071 4.1475 22.8771 5.9575 22.8771Z"/>
</svg>
</file>

<file path="dieter/icons/svg/link.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.120862082483555 30.10546875" fill="currentColor" aria-hidden="true">
  <path d="M13.6938 21.0327L16.2238 18.5027C14.8838 18.3527 13.7538 17.8527 13.0138 17.1127C10.8138 14.9127 10.8138 11.8427 12.9838 9.6627L17.6638 4.9927C19.8538 2.8127 22.9138 2.8127 25.1138 4.9927C27.3138 7.2127 27.3138 10.2727 25.1238 12.4527L23.3738 14.2127C23.8938 15.4327 24.1338 16.9827 23.7338 18.3427L27.4938 14.6127C31.0038 11.1227 30.9938 6.1427 27.4838 2.6327C23.9538 -0.8773 19.0038 -0.8673 15.5138 2.6227L10.6238 7.5127C7.1338 11.0027 7.1238 15.9627 10.6338 19.4727C11.3338 20.1727 12.3838 20.7627 13.6938 21.0327ZM16.4338 9.0727L13.8938 11.6027C15.2438 11.7527 16.3638 12.2527 17.1038 12.9927C19.3038 15.1927 19.3138 18.2727 17.1338 20.4427L12.4538 25.1127C10.2638 27.2927 7.2038 27.2927 5.0138 25.1127C2.8038 22.8927 2.8038 19.8427 4.9838 17.6527L6.7338 15.9027C6.2238 14.6927 5.9838 13.1227 6.3838 11.7627L2.6238 15.5127C-0.8762 18.9827 -0.8762 23.9627 2.6338 27.4727C6.1638 30.9827 11.1138 30.9727 14.6038 27.4827L19.4938 22.5927C22.9838 19.1027 22.9938 14.1427 19.4838 10.6327C18.7838 9.9427 17.7338 9.3427 16.4338 9.0727Z"/>
</svg>
</file>

<file path="dieter/icons/svg/minus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.40625 4.142578125" fill="currentColor" aria-hidden="true">
  <path d="M2.0337 4.1419H21.3537C22.4537 4.1419 23.4037 3.2019 23.4037 2.0619C23.4037 0.9419 22.4537 0.0019 21.3537 0.0019H2.0337C0.9937 0.0019 0.0037 0.9419 0.0037 2.0619C0.0037 3.2019 0.9937 4.1419 2.0337 4.1419Z"/>
</svg>
</file>

<file path="dieter/icons/svg/paperclip.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.506760745330002 30.83056564117573" fill="currentColor" aria-hidden="true">
  <path d="M22.8357 15.8659L12.6757 26.0159C10.1757 28.5259 6.8357 28.3059 4.6857 26.1459C2.5157 23.9859 2.3157 20.6659 4.8157 18.1459L18.7857 4.2059C20.1757 2.7959 22.3157 2.4559 23.7257 3.8659C25.1457 5.2959 24.7857 7.4059 23.3957 8.7959L9.5957 22.6159C9.1057 23.1159 8.5357 22.9759 8.1857 22.6459C7.8657 22.3059 7.7257 21.7359 8.2157 21.2359L17.8157 11.6459C18.4057 11.0559 18.4257 10.1759 17.8557 9.6059C17.2857 9.0559 16.4057 9.0559 15.8157 9.6459L6.1757 19.2859C4.5957 20.8859 4.6657 23.3359 6.0857 24.7559C7.6157 26.2859 9.9557 26.2459 11.5357 24.6559L25.4157 10.7759C28.2057 7.9959 28.1257 4.3159 25.6457 1.8359C23.2157 -0.5841 19.4857 -0.7141 16.6957 2.0559L2.6257 16.1359C-0.9743 19.7459 -0.7543 24.9759 2.5457 28.2759C5.8657 31.5759 11.0857 31.8059 14.6957 28.2159L24.9257 17.9759C25.4857 17.4259 25.4857 16.3859 24.8957 15.8359C24.3457 15.2559 23.4057 15.3059 22.8357 15.8659Z"/>
</svg>
</file>

<file path="dieter/icons/svg/paperplane.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.4765625 29.4765625" fill="currentColor" aria-hidden="true">
  <path d="M17.5282 29.4764C18.6882 29.4764 19.4982 28.6064 19.9982 27.2764L29.1382 3.3764C29.3582 2.8064 29.4782 2.2864 29.4782 1.8364C29.4782 0.7264 28.7482 -0.0036 27.6482 -0.0036C27.1782 -0.0036 26.6582 0.1264 26.0982 0.3464L2.1282 9.5064C0.8982 9.9764 -0.0018 10.7764 -0.0018 11.9464C-0.0018 13.3264 0.9982 13.9464 2.4082 14.3564L12.2382 17.2364L15.0982 27.0064C15.5182 28.4364 16.1282 29.4764 17.5282 29.4764ZM13.2982 14.0564L6.2182 11.8764C6.0682 11.8364 6.0182 11.7764 6.0182 11.6864C6.0182 11.6064 6.0682 11.5364 6.2082 11.4864L19.0082 6.5264C20.2982 6.0064 21.5782 5.4164 23.1582 4.6864C22.0382 5.5964 20.7082 6.6964 19.7582 7.6464ZM17.7982 23.4764C17.7082 23.4764 17.6482 23.4064 17.6082 23.2464L15.4182 16.1764L21.8382 9.7364C22.7382 8.8064 23.9282 7.3964 24.7882 6.3064C24.0782 7.8864 23.4782 9.1764 22.9682 10.4764L17.9882 23.2664C17.9482 23.4064 17.8782 23.4764 17.7982 23.4764Z"/>
</svg>
</file>

<file path="dieter/icons/svg/party-popper.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.749139892045925 35.328048033378394" fill="currentColor" aria-hidden="true">
  <path d="M13.2728 3.688C14.3028 3.688 15.1228 2.868 15.1228 1.858C15.1228 0.838 14.3028 -0.002 13.2728 -0.002C12.2328 -0.002 11.4328 0.838 11.4328 1.858C11.4328 2.868 12.2328 3.688 13.2728 3.688ZM21.9828 5.878C23.5928 5.878 24.8828 4.578 24.8828 2.968C24.8828 1.338 23.5928 0.068 21.9828 0.068C20.3528 0.068 19.0728 1.338 19.0728 2.968C19.0728 4.578 20.3528 5.878 21.9828 5.878ZM33.5128 4.078C34.3528 4.078 35.0428 3.388 35.0428 2.528C35.0428 1.668 34.3528 0.968 33.5128 0.968C32.6328 0.968 31.9528 1.668 31.9528 2.528C31.9528 3.388 32.6328 4.078 33.5128 4.078ZM29.1428 4.608L26.6028 7.148C26.1128 7.668 26.1128 8.488 26.6028 8.998C27.1128 9.498 27.9428 9.498 28.4528 9.008L30.9928 6.468C31.4828 5.958 31.4828 5.128 30.9928 4.608C30.4628 4.118 29.6428 4.128 29.1428 4.608ZM22.9728 27.128C25.0228 26.278 25.2328 24.368 24.5528 22.228C26.2328 22.208 27.9028 22.358 29.5828 22.668C30.3128 22.848 30.9628 22.148 30.9628 21.408C30.9628 20.698 30.3928 20.248 29.7328 20.098C27.6128 19.698 25.5128 19.568 23.3928 19.678C22.7228 18.528 21.9028 17.408 21.0628 16.448L25.6728 11.858C26.1228 11.378 26.1628 10.538 25.6728 10.038C25.1528 9.518 24.3228 9.558 23.8428 10.018L19.2328 14.598C18.2628 13.738 17.1528 12.888 16.0128 12.208C16.1228 10.128 15.9728 8.048 15.5828 5.958C15.4328 5.308 14.9928 4.748 14.2828 4.748C13.5628 4.748 12.8528 5.378 13.0128 6.128C13.3328 7.748 13.4828 9.388 13.4828 11.038C11.4328 10.388 9.5828 10.678 8.6128 12.798L0.3228 31.188C-0.8772 33.878 1.4328 36.148 4.0628 35.038ZM19.3828 10.388C20.2628 10.388 20.9428 9.698 20.9428 8.818C20.9428 7.988 20.2628 7.278 19.3828 7.278C18.5428 7.278 17.8428 7.968 17.8428 8.818C17.8428 9.698 18.5428 10.388 19.3828 10.388ZM28.7528 17.418C30.1428 17.418 31.2828 16.328 31.2828 14.928C31.2828 13.538 30.1628 12.398 28.7528 12.398C27.3528 12.398 26.2628 13.538 26.2628 14.928C26.2628 16.328 27.3528 17.418 28.7528 17.418ZM34.9028 16.858C35.9128 16.858 36.7528 16.048 36.7528 15.008C36.7528 13.988 35.9128 13.168 34.9028 13.168C33.8528 13.168 33.0428 13.988 33.0428 15.008C33.0428 16.048 33.8628 16.858 34.9028 16.858ZM11.2828 13.648C11.5928 13.318 12.3128 13.368 13.3028 13.808C13.2328 14.438 13.1428 15.078 13.0128 15.718C12.8528 16.478 13.5528 17.078 14.2728 17.088C14.9428 17.088 15.4328 16.588 15.5828 15.878C15.6128 15.668 15.6528 15.448 15.6928 15.248C16.2028 15.628 16.7228 16.068 17.2828 16.558L16.7028 17.128C16.2028 17.638 16.2128 18.468 16.7028 18.978C17.2128 19.468 18.0428 19.478 18.5528 18.978L19.1228 18.398C19.6328 18.948 20.0728 19.478 20.4528 19.988C20.2428 20.028 20.0428 20.068 19.8228 20.098C19.1228 20.258 18.6228 20.758 18.6228 21.408C18.6228 22.138 19.2328 22.828 19.9728 22.698C20.6328 22.568 21.2728 22.458 21.9328 22.398C22.3828 23.418 22.4328 24.168 22.1028 24.488C21.3728 25.248 18.4428 24.008 15.1028 20.658C11.7528 17.308 10.5128 14.378 11.2828 13.648ZM3.0928 31.728L9.4628 17.598C10.2428 19.238 11.5428 20.998 13.1528 22.618C14.7128 24.188 16.4328 25.448 18.0228 26.218L3.5528 32.228C3.1828 32.388 2.8928 32.138 3.0928 31.728ZM34.1528 24.018C35.1628 24.018 35.9828 23.198 35.9828 22.178C35.9828 21.148 35.1628 20.328 34.1528 20.328C33.1228 20.328 32.3028 21.148 32.3028 22.178C32.3028 23.198 33.1228 24.018 34.1528 24.018Z"/>
</svg>
</file>

<file path="dieter/icons/svg/pause.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.4921875 23.7890625" fill="currentColor" aria-hidden="true">
  <path d="M2.0737 23.792C3.2637 23.792 4.1537 22.932 4.1537 21.762V2.012C4.1537 0.862 3.2637 0.002 2.0737 0.002C0.8937 0.002 0.0037 0.862 0.0037 2.012V21.762C0.0037 22.932 0.8937 23.792 2.0737 23.792ZM12.4137 23.792C13.6037 23.792 14.4937 22.932 14.4937 21.762V2.012C14.4937 0.862 13.6037 0.002 12.4137 0.002C11.2237 0.002 10.3337 0.862 10.3337 2.012V21.762C10.3337 22.932 11.2237 23.792 12.4137 23.792Z"/>
</svg>
</file>

<file path="dieter/icons/svg/person-2.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.759765625 25.921875" fill="currentColor" aria-hidden="true">
  <path d="M26.6037 13.0959C29.9937 13.0959 32.7337 10.1459 32.7337 6.4759C32.7337 2.8959 29.9837 -0.0041 26.6037 -0.0041C23.2437 -0.0041 20.4837 2.9159 20.4937 6.4959C20.5037 10.1459 23.2137 13.0959 26.6037 13.0959ZM10.6137 13.2859C13.5637 13.2859 15.9537 10.6959 15.9537 7.4659C15.9537 4.3359 13.5537 1.7659 10.6137 1.7659C7.6737 1.7659 5.2537 4.3659 5.2537 7.4759C5.2637 10.7059 7.6437 13.2859 10.6137 13.2859ZM26.6037 10.1959C24.8937 10.1959 23.4637 8.5959 23.4637 6.4759C23.4437 4.4659 24.9137 2.8859 26.6037 2.8859C28.3237 2.8859 29.7537 4.4559 29.7537 6.4759C29.7537 8.5759 28.3237 10.1959 26.6037 10.1959ZM10.6137 10.4459C9.2537 10.4459 8.1037 9.1459 8.1037 7.4759C8.0937 5.9059 9.2537 4.6059 10.6137 4.6059C11.9637 4.6059 13.1137 5.8759 13.1137 7.4659C13.1137 9.1459 11.9737 10.4459 10.6137 10.4459ZM3.2137 25.9259H13.6437C12.7537 25.3759 12.2537 24.1159 12.3637 23.0759H3.4037C3.1737 23.0759 3.0937 22.9559 3.0937 22.7759C3.0937 20.0559 6.4637 17.3359 10.5937 17.3359C11.8237 17.3359 13.3337 17.6659 14.3037 18.1459C14.7937 17.2959 15.4737 16.5659 16.4337 15.9859C14.7537 15.0559 12.5237 14.5059 10.5937 14.5059C4.7437 14.5059 0.0037 18.6059 0.0037 23.1459C0.0037 24.9559 1.0637 25.9259 3.2137 25.9259ZM18.1937 25.9059H35.0137C37.5137 25.9059 38.7637 25.0559 38.7637 23.2859C38.7637 19.2659 33.7937 14.5159 26.6037 14.5159C19.4037 14.5159 14.4537 19.2659 14.4537 23.2859C14.4537 25.0559 15.6937 25.9059 18.1937 25.9059ZM18.0837 23.0259C17.8237 23.0259 17.7437 22.9159 17.7437 22.7059C17.7437 20.8759 20.9737 17.4059 26.6037 17.4059C32.2337 17.4059 35.4637 20.8759 35.4637 22.7059C35.4637 22.9159 35.3837 23.0259 35.1137 23.0259Z"/>
</svg>
</file>

<file path="dieter/icons/svg/person.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24.30859375 25.908203125" fill="currentColor" aria-hidden="true">
  <path d="M12.1537 13.0959C15.5437 13.0959 18.2837 10.1459 18.2837 6.4759C18.2837 2.8959 15.5337 -0.0041 12.1537 -0.0041C8.7937 -0.0041 6.0337 2.9159 6.0437 6.4959C6.0537 10.1459 8.7637 13.0959 12.1537 13.0959ZM12.1537 10.1959C10.4437 10.1959 9.0237 8.6559 9.0137 6.4759C8.9937 4.4059 10.4637 2.8859 12.1537 2.8859C13.8737 2.8859 15.3037 4.3859 15.3037 6.4759C15.3037 8.6359 13.8737 10.1959 12.1537 10.1959ZM3.7437 25.9059H20.5637C23.0637 25.9059 24.3037 25.0559 24.3037 23.2859C24.3037 19.2659 19.3437 14.5159 12.1537 14.5159C4.9537 14.5159 0.0037 19.2659 0.0037 23.2859C0.0037 25.0559 1.2437 25.9059 3.7437 25.9059ZM3.6337 23.0259C3.3737 23.0259 3.2937 22.9159 3.2937 22.7059C3.2937 20.8759 6.5237 17.4059 12.1537 17.4059C17.7837 17.4059 21.0137 20.8759 21.0137 22.7059C21.0137 22.9159 20.9337 23.0259 20.6537 23.0259Z"/>
</svg>
</file>

<file path="dieter/icons/svg/personalhotspot.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40.33203125 23.5703125" fill="currentColor" aria-hidden="true">
  <path d="M8.4527 16.9379H9.2427C9.0927 15.8279 9.0327 14.6879 9.2327 13.7379H8.6127C5.5127 13.7379 3.3527 11.5779 3.3527 8.4579C3.3527 5.3579 5.5227 3.1879 8.6127 3.1879H20.6327C23.7027 3.1879 25.8927 5.3579 25.8927 8.4579C25.8927 11.5779 23.7227 13.7379 20.6327 13.7379H16.9527C16.2427 14.3579 16.2827 16.1879 17.1127 16.9379H20.7827C25.7327 16.9379 29.2327 13.4379 29.2327 8.4579C29.2327 3.4979 25.7327 -0.0021 20.7827 -0.0021H8.4527C3.5127 -0.0021 0.0027 3.4979 0.0027 8.4579C0.0027 13.4379 3.5127 16.9379 8.4527 16.9379ZM19.5527 23.5679H31.8827C36.8227 23.5679 40.3327 20.0679 40.3327 15.1079C40.3327 10.1279 36.8227 6.6279 31.8827 6.6279H31.0927C31.2527 7.7279 31.2927 8.8779 31.1027 9.8279H31.7227C34.8227 9.8279 36.9827 11.9879 36.9827 15.1079C36.9827 18.2079 34.8127 20.3879 31.7227 20.3879H19.7027C16.6227 20.3879 14.4327 18.2079 14.4327 15.1079C14.4327 11.9879 16.6127 9.8279 19.7027 9.8279H23.3827C24.0127 9.1279 23.9627 7.3779 23.2027 6.6279H19.5527C14.6027 6.6279 11.1027 10.1279 11.1027 15.1079C11.1027 20.0679 14.6027 23.5679 19.5527 23.5679Z"/>
</svg>
</file>

<file path="dieter/icons/svg/play.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22.5859375 25.224609375" fill="currentColor" aria-hidden="true">
  <path d="M2.3237 25.2229C2.9537 25.2229 3.5237 25.0229 4.2937 24.5829L20.7037 15.0629C21.9537 14.3429 22.5837 13.6729 22.5837 12.6029C22.5837 11.5529 21.9537 10.8829 20.7037 10.1429L4.2937 0.6329C3.5237 0.1929 2.9537 0.0029 2.3237 0.0029C1.0437 0.0029 0.0037 0.9729 0.0037 2.6129V22.6029C0.0037 24.2429 1.0437 25.2229 2.3237 25.2229ZM3.8237 20.6129C3.7637 20.6129 3.7237 20.5629 3.7237 20.4829V4.7329C3.7237 4.6329 3.7637 4.5829 3.8237 4.5829C3.8837 4.5829 3.9237 4.6029 3.9937 4.6329L17.5537 12.4729C17.6137 12.5129 17.6537 12.5529 17.6537 12.6029C17.6537 12.6729 17.6137 12.7029 17.5537 12.7429L3.9937 20.5629C3.9237 20.6029 3.8837 20.6129 3.8237 20.6129Z"/>
</svg>
</file>

<file path="dieter/icons/svg/plus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.4609375 23.474609375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 11.7316C0.0037 12.8816 0.9337 13.8116 2.0737 13.8116H9.6637V21.3916C9.6637 22.5316 10.5837 23.4716 11.7337 23.4716C12.8837 23.4716 13.8037 22.5316 13.8037 21.3916V13.8116H21.3937C22.5337 13.8116 23.4637 12.8816 23.4637 11.7316C23.4637 10.5916 22.5337 9.6616 21.3937 9.6616H13.8037V2.0816C13.8037 0.9416 12.8837 0.0016 11.7337 0.0016C10.5837 0.0016 9.6637 0.9416 9.6637 2.0816V9.6616H2.0737C0.9337 9.6616 0.0037 10.5916 0.0037 11.7316Z"/>
</svg>
</file>

<file path="dieter/icons/svg/power.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 29.763671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 15.6636C15.5827 15.6636 16.3527 14.8436 16.3527 13.6336V2.0336C16.3527 0.8036 15.5827 0.0036 14.4327 0.0036C13.2927 0.0036 12.5227 0.8036 12.5227 2.0336V13.6336C12.5227 14.8436 13.2927 15.6636 14.4327 15.6636ZM14.4327 29.7636C22.3627 29.7636 28.8727 23.2436 28.8727 15.3136C28.8727 11.2936 27.1827 7.6936 24.7327 5.2736C22.9527 3.4436 20.2727 5.6836 22.1327 7.6936C24.0727 9.6436 25.2827 12.3336 25.2827 15.3136C25.2927 21.3236 20.4527 26.1636 14.4327 26.1636C8.4327 26.1636 3.6127 21.3236 3.6127 15.3136C3.6127 12.3136 4.8127 9.6436 6.7527 7.6836C8.6127 5.6736 5.9227 3.4436 4.1527 5.2636C1.6927 7.6936 0.0027 11.2936 0.0027 15.3136C0.0027 23.2436 6.5227 29.7636 14.4327 29.7636Z"/>
</svg>
</file>

<file path="dieter/icons/svg/progress-indicator.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.265625 33.4140625" fill="currentColor" aria-hidden="true">
  <path d="M0.0028 2.7202H25.2628V0.0002H0.0028ZM0.0028 8.8602H25.2628V6.1202H0.0028ZM0.0028 15.0002H25.2628V12.2802H0.0028ZM0.0028 21.1402H25.2628V18.4002H0.0028ZM0.0028 27.2802H25.2628V24.5502H0.0028ZM0.0028 33.4102H25.2628V30.6802H0.0028Z"/>
</svg>
</file>

<file path="dieter/icons/svg/rectangle-and-pencil-and-ellipsis.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 43.740236861188485 27.363502517625186" fill="currentColor" aria-hidden="true">
  <path d="M42.3137 3.9043L43.2337 2.9743C43.8837 2.3143 43.9137 1.3843 43.2837 0.7843L42.8437 0.3443C42.3037 -0.1857 41.3437 -0.0857 40.7237 0.5243L39.8237 1.4243ZM26.8137 17.6043L29.8637 16.3543L41.2037 5.0143L38.7237 2.5343L27.3837 13.8843L26.1037 16.8743C25.9237 17.3243 26.4037 17.7643 26.8137 17.6043ZM4.0837 27.3643H35.0137C37.6237 27.3643 39.0837 25.9143 39.0837 23.3343V10.7943L35.4937 14.4043V22.5643C35.4937 23.5043 34.9337 24.0643 33.9637 24.0643H5.1237C4.1537 24.0643 3.6137 23.5043 3.6137 22.5643V11.3143C3.6137 10.3443 4.1537 9.8043 5.1237 9.8043H27.7037L30.9937 6.5243H4.0837C1.4737 6.5243 0.0037 7.9643 0.0037 10.5643V23.3343C0.0037 25.9143 1.4737 27.3643 4.0837 27.3643ZM8.6437 19.1043C9.8437 19.1043 10.8037 18.1343 10.8037 16.9443C10.8037 15.7443 9.8437 14.7743 8.6437 14.7743C7.4337 14.7743 6.4637 15.7443 6.4637 16.9443C6.4637 18.1343 7.4337 19.1043 8.6437 19.1043ZM14.9337 19.1043C16.1237 19.1043 17.1037 18.1343 17.1037 16.9443C17.1037 15.7443 16.1237 14.7743 14.9337 14.7743C13.7437 14.7743 12.7537 15.7443 12.7537 16.9443C12.7537 18.1343 13.7437 19.1043 14.9337 19.1043ZM21.2237 19.1043C22.4237 19.1043 23.3937 18.1343 23.3937 16.9443C23.3937 15.7443 22.4237 14.7743 21.2237 14.7743C20.0137 14.7743 19.0537 15.7443 19.0537 16.9443C19.0537 18.1343 20.0137 19.1043 21.2237 19.1043Z"/>
</svg>
</file>

<file path="dieter/icons/svg/repeat.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.623046875 27.412109375" fill="currentColor" aria-hidden="true">
  <path d="M1.8437 14.6578C2.8737 14.6578 3.6737 13.8478 3.6737 12.8078V11.7478C3.6737 9.3378 5.2737 7.8578 7.8737 7.8578H18.2837V10.9078C18.2837 11.7578 18.7837 12.2678 19.6237 12.2678C20.0137 12.2678 20.3337 12.1278 20.5937 11.9078L26.3037 7.0978C26.9337 6.5578 26.9437 5.6978 26.3037 5.1678L20.5937 0.3578C20.3337 0.1378 20.0137 -0.0022 19.6237 -0.0022C18.7837 -0.0022 18.2837 0.5178 18.2837 1.3678V4.2678H8.0637C3.0937 4.2678 0.0037 6.9178 0.0037 11.2778V12.8078C0.0037 13.8478 0.8237 14.6578 1.8437 14.6578ZM29.7937 12.7678C28.7637 12.7678 27.9637 13.5878 27.9637 14.6178V15.6778C27.9637 18.0878 26.3437 19.5678 23.7637 19.5678H13.3537V16.5178C13.3537 15.6678 12.8337 15.1478 12.0037 15.1478C11.6237 15.1478 11.2937 15.2878 11.0337 15.5078L5.3137 20.3178C4.6937 20.8678 4.6937 21.7078 5.3137 22.2478L11.0337 27.0578C11.2937 27.2778 11.6237 27.4078 12.0037 27.4078C12.8337 27.4078 13.3537 26.9078 13.3537 26.0578V23.1578H23.5537C28.5337 23.1578 31.6237 20.5078 31.6237 16.1478V14.6178C31.6237 13.5878 30.8137 12.7678 29.7937 12.7678Z"/>
</svg>
</file>

<file path="dieter/icons/svg/sparkles.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.38671875 31.869140625" fill="currentColor" aria-hidden="true">
  <path d="M12.1109 6.8369C12.3309 6.8369 12.4709 6.6869 12.5109 6.4969C12.8809 4.3069 12.8409 4.2669 15.1909 3.8169C15.4109 3.7769 15.5409 3.6369 15.5409 3.4169C15.5409 3.2169 15.3909 3.0669 15.1909 3.0369C12.8409 2.6569 12.8609 2.5869 12.5109 0.3569C12.4709 0.1469 12.3309 -0.0031 12.1109 -0.0031C11.8909 -0.0031 11.7609 0.1469 11.7309 0.3669C11.3909 2.5269 11.4009 2.5869 9.0409 3.0369C8.8309 3.0769 8.6909 3.2169 8.6909 3.4169C8.6909 3.6369 8.8309 3.7769 9.0609 3.8169C11.3909 4.2269 11.3709 4.2769 11.7309 6.4769C11.7609 6.6869 11.8909 6.8369 12.1109 6.8369ZM5.4709 16.6569C5.7809 16.6569 6.0409 16.4169 6.0809 16.1069C6.5509 12.5269 6.6309 12.4969 10.3909 11.8169C10.7009 11.7569 10.9409 11.5269 10.9409 11.1969C10.9409 10.8669 10.7009 10.6269 10.3909 10.5869C6.6609 10.0769 6.5509 9.9769 6.0809 6.3169C6.0409 5.9769 5.8009 5.7469 5.4709 5.7469C5.1409 5.7469 4.8909 5.9769 4.8509 6.3269C4.4209 9.8869 4.2909 9.8969 0.5509 10.5869C0.2309 10.6369 0.0009 10.8669 0.0009 11.1969C0.0009 11.5369 0.2309 11.7569 0.6109 11.8169C4.2909 12.3769 4.4209 12.4969 4.8509 16.0669C4.8909 16.4169 5.1409 16.6569 5.4709 16.6569ZM15.2609 31.8669C15.7909 31.8669 16.2009 31.4869 16.3009 30.9269C17.2909 23.6669 18.3109 22.5969 25.4009 21.7969C25.9809 21.7369 26.3909 21.2869 26.3909 20.7369C26.3909 20.2069 25.9809 19.7669 25.4209 19.6869C18.3309 18.8169 17.3909 17.8169 16.3009 10.5669C16.2009 10.0069 15.7809 9.6269 15.2609 9.6269C14.7209 9.6269 14.3009 10.0069 14.2209 10.5669C13.2109 17.8169 12.1909 18.8969 5.1109 19.6869C4.5409 19.7569 4.1309 20.1969 4.1309 20.7369C4.1309 21.2869 4.5209 21.7069 5.1009 21.7969C12.1709 22.7669 13.0809 23.6669 14.2209 30.9269C14.3109 31.4869 14.7209 31.8669 15.2609 31.8669Z"/>
</svg>
</file>

<file path="dieter/icons/svg/square-and-arrow-up-on-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32.798828125 39.033203125" fill="currentColor" aria-hidden="true">
  <path d="M12.7437 20.7992C13.6337 20.7992 14.3237 20.0692 14.3237 19.2392V5.9192L14.1937 3.9192L14.9037 4.9792L16.5537 6.7392C16.8137 7.0292 17.1837 7.1892 17.5837 7.1892C18.3037 7.1892 18.9537 6.6492 18.9537 5.8692C18.9537 5.4692 18.8037 5.1792 18.5237 4.9092L14.0037 0.5492C13.5737 0.1392 13.1637 -0.0008 12.7437 -0.0008C12.3137 -0.0008 11.9037 0.1392 11.4937 0.5492L6.9637 4.9092C6.6837 5.1792 6.5337 5.4692 6.5337 5.8692C6.5337 6.6492 7.1737 7.1892 7.9037 7.1892C8.2837 7.1892 8.6637 7.0292 8.9237 6.7392L10.5837 4.9792L11.2937 3.9192L11.1737 5.9192V19.2392C11.1737 20.0692 11.8637 20.7992 12.7437 20.7992ZM4.8237 32.0292H8.3837V34.2392C8.3837 37.3392 10.0937 39.0292 13.2037 39.0292H27.9737C31.0937 39.0292 32.8037 37.3392 32.8037 34.2392V20.0792C32.8037 16.9792 31.0937 15.2892 27.9737 15.2892H25.4837V14.1092C25.4837 11.0092 23.7937 9.3092 20.6537 9.3092H17.1437V12.8392H20.2737C21.3737 12.8392 21.9537 13.3692 21.9537 14.5292V26.7992C21.9537 27.9592 21.3737 28.5092 20.2737 28.5092H5.2137C4.1137 28.5092 3.5237 27.9592 3.5237 26.7992V14.5292C3.5237 13.3692 4.1137 12.8392 5.2137 12.8392H8.4037V9.3092H4.8237C1.7137 9.3092 0.0037 11.0092 0.0037 14.1092V27.2392C0.0037 30.3392 1.7137 32.0292 4.8237 32.0292ZM13.6037 35.5092C12.5137 35.5092 11.9037 34.9692 11.9037 33.8092V32.0292H20.6537C23.7937 32.0292 25.4837 30.3292 25.4837 27.2392V18.8092H27.5737C28.6837 18.8092 29.2737 19.3492 29.2737 20.5092V33.8092C29.2737 34.9692 28.6837 35.5092 27.5737 35.5092Z"/>
</svg>
</file>

<file path="dieter/icons/svg/square-and-arrow-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.484375 32.046875" fill="currentColor" aria-hidden="true">
  <path d="M12.7437 20.808C13.6337 20.808 14.3237 20.088 14.3237 19.248V5.938L14.1937 3.938L14.9037 4.988L16.5537 6.738C16.8137 7.038 17.1837 7.188 17.5837 7.188C18.3037 7.188 18.9537 6.658 18.9537 5.878C18.9537 5.478 18.8037 5.198 18.5237 4.918L14.0037 0.558C13.5737 0.148 13.1637 -0.002 12.7437 -0.002C12.3137 -0.002 11.9037 0.148 11.4937 0.558L6.9637 4.918C6.6837 5.198 6.5337 5.478 6.5337 5.878C6.5337 6.658 7.1737 7.188 7.9037 7.188C8.2837 7.188 8.6637 7.038 8.9237 6.738L10.5837 4.988L11.2937 3.928L11.1737 5.938V19.248C11.1737 20.088 11.8637 20.808 12.7437 20.808ZM4.8237 32.048H20.6537C23.7937 32.048 25.4837 30.338 25.4837 27.248V14.108C25.4837 11.018 23.7937 9.328 20.6537 9.328H17.1437V12.848H20.2737C21.3737 12.848 21.9537 13.388 21.9537 14.548V26.808C21.9537 27.968 21.3737 28.508 20.2737 28.508H5.2137C4.1137 28.508 3.5237 27.968 3.5237 26.808V14.548C3.5237 13.388 4.1137 12.848 5.2137 12.848H8.4037V9.328H4.8237C1.7137 9.328 0.0037 11.008 0.0037 14.108V27.248C0.0037 30.348 1.7137 32.048 4.8237 32.048Z"/>
</svg>
</file>

<file path="dieter/icons/svg/stop.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.501953125 23.48828125" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 19.9652C0.0037 22.1452 1.3637 23.4852 3.6537 23.4852H19.8337C22.1337 23.4852 23.5037 22.1452 23.5037 19.9652V3.5252C23.5037 1.3552 22.1337 -0.0048 19.8337 -0.0048H3.6537C1.3637 -0.0048 0.0037 1.3552 0.0037 3.5252ZM3.5237 18.7552V4.7352C3.5237 3.9352 3.9937 3.4752 4.7837 3.4752H18.8437C19.6237 3.4752 20.0837 3.9352 20.0837 4.7352V18.7552C20.0837 19.5652 19.6237 20.0252 18.8437 20.0252H4.7837C3.9937 20.0252 3.5237 19.5652 3.5237 18.7552Z"/>
</svg>
</file>

<file path="dieter/icons/svg/sun-max.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.8828125 31.8828125" fill="currentColor" aria-hidden="true">
  <path d="M15.9427 6.0325C16.8527 6.0325 17.6227 5.2625 17.6227 4.3525V1.6825C17.6227 0.7625 16.8527 0.0025 15.9427 0.0025C15.0227 0.0025 14.2627 0.7625 14.2627 1.6825V4.3525C14.2627 5.2625 15.0227 6.0325 15.9427 6.0325ZM22.9527 8.9825C23.5827 9.6125 24.6827 9.6125 25.3327 8.9525L27.2227 7.0725C27.8527 6.4225 27.8327 5.3325 27.1927 4.6725C26.5627 4.0425 25.4727 4.0625 24.8327 4.7025L22.9327 6.6025C22.3027 7.2425 22.3027 8.3425 22.9527 8.9825ZM8.9127 8.9825C9.5727 8.3425 9.5727 7.2325 8.9527 6.6025L7.0727 4.7025C6.4227 4.0725 5.3327 4.0425 4.6927 4.6725C4.0427 5.3325 4.0327 6.4225 4.6627 7.0525L6.5527 8.9525C7.1927 9.6125 8.2827 9.6125 8.9127 8.9825ZM15.9427 23.5025C20.0727 23.5025 23.4927 20.0825 23.4927 15.9425C23.4927 11.8025 20.0727 8.3825 15.9427 8.3825C11.8027 8.3825 8.3827 11.8025 8.3827 15.9425C8.3827 20.0825 11.8027 23.5025 15.9427 23.5025ZM15.9427 20.1625C13.6327 20.1625 11.7027 18.2525 11.7027 15.9425C11.7027 13.6325 13.6327 11.7025 15.9427 11.7025C18.2427 11.7025 20.1627 13.6325 20.1627 15.9425C20.1627 18.2525 18.2427 20.1625 15.9427 20.1625ZM25.8527 15.9425C25.8527 16.8525 26.6227 17.6225 27.5327 17.6225H30.2027C31.1127 17.6225 31.8827 16.8525 31.8827 15.9425C31.8827 15.0225 31.1127 14.2625 30.2027 14.2625H27.5327C26.6227 14.2625 25.8527 15.0225 25.8527 15.9425ZM6.0327 15.9425C6.0327 15.0225 5.2627 14.2625 4.3427 14.2625H1.6827C0.7627 14.2625 0.0027 15.0225 0.0027 15.9425C0.0027 16.8525 0.7627 17.6225 1.6827 17.6225H4.3427C5.2627 17.6225 6.0327 16.8525 6.0327 15.9425ZM22.9327 22.9325C22.3027 23.5725 22.3027 24.6525 22.9527 25.3025L24.8527 27.2025C25.4827 27.8325 26.5827 27.8225 27.2327 27.1625C27.8627 26.5325 27.8627 25.4425 27.2027 24.8025L25.3027 22.9125C24.6627 22.2825 23.5727 22.2825 22.9327 22.9325ZM8.9527 22.9325C8.3027 22.2825 7.2027 22.2825 6.5627 22.9125L4.6627 24.7825C4.0227 25.4325 4.0027 26.5225 4.6327 27.1625C5.2927 27.8125 6.3827 27.8225 7.0227 27.1925L8.9127 25.3025C9.5727 24.6525 9.5727 23.5725 8.9527 22.9325ZM15.9427 25.8425C15.0227 25.8425 14.2627 26.6025 14.2627 27.5225V30.2025C14.2627 31.1125 15.0227 31.8825 15.9427 31.8825C16.8527 31.8825 17.6227 31.1125 17.6227 30.2025V27.5225C17.6227 26.6025 16.8527 25.8425 15.9427 25.8425Z"/>
</svg>
</file>

<file path="dieter/icons/svg/trash.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.822265625 31.568359375" fill="currentColor" aria-hidden="true">
  <path d="M7.5982 31.572H20.2182C22.5582 31.572 23.9982 30.272 24.1082 27.932L25.0082 8.542H26.2782C27.1682 8.542 27.8182 7.912 27.8182 7.042C27.8182 6.182 27.1482 5.552 26.2782 5.552H20.4782V3.572C20.4782 1.282 19.0482 0.002 16.4982 0.002H11.2882C8.7482 0.002 7.3282 1.282 7.3282 3.572V5.552H1.5282C0.6682 5.552 -0.0018 6.182 -0.0018 7.042C-0.0018 7.912 0.6682 8.542 1.5282 8.542H2.8182L3.7182 27.932C3.8282 30.282 5.2482 31.572 7.5982 31.572ZM10.4682 3.682C10.4682 3.092 10.8782 2.732 11.5282 2.732H16.2682C16.9282 2.732 17.3382 3.092 17.3382 3.682V5.552H10.4682ZM8.0082 28.522C7.2982 28.522 6.8382 28.012 6.7982 27.212L5.9182 8.542H21.8782L21.0182 27.212C20.9882 28.032 20.5182 28.522 19.7982 28.522ZM9.9082 26.542C10.5982 26.542 11.0182 26.102 11.0082 25.472L10.5982 11.662C10.5782 11.022 10.1282 10.612 9.4882 10.612C8.8182 10.612 8.3982 11.032 8.4182 11.672L8.8182 25.482C8.8282 26.112 9.2882 26.542 9.9082 26.542ZM13.9082 26.542C14.5582 26.542 15.0082 26.112 15.0082 25.482V11.652C15.0082 11.022 14.5582 10.612 13.9082 10.612C13.2582 10.612 12.8082 11.022 12.8082 11.652V25.482C12.8082 26.112 13.2582 26.542 13.9082 26.542ZM17.9082 26.542C18.5382 26.542 18.9782 26.122 18.9882 25.482L19.3982 11.672C19.4182 11.032 18.9882 10.612 18.3382 10.612C17.6782 10.612 17.2382 11.022 17.2282 11.662L16.8182 25.472C16.7982 26.102 17.2282 26.542 17.9082 26.542Z"/>
</svg>
</file>

<file path="dieter/icons/icons.json">
{
  "version": "4.0",
  "precision": 2,
  "fontSize": 28,
  "symbols": {
    "square.and.arrow.up": {
      "bold": {
        "path": "M12.7437 20.808C13.6337 20.808 14.3237 20.088 14.3237 19.248V5.938L14.1937 3.938L14.9037 4.988L16.5537 6.738C16.8137 7.038 17.1837 7.188 17.5837 7.188C18.3037 7.188 18.9537 6.658 18.9537 5.878C18.9537 5.478 18.8037 5.198 18.5237 4.918L14.0037 0.558C13.5737 0.148 13.1637 -0.002 12.7437 -0.002C12.3137 -0.002 11.9037 0.148 11.4937 0.558L6.9637 4.918C6.6837 5.198 6.5337 5.478 6.5337 5.878C6.5337 6.658 7.1737 7.188 7.9037 7.188C8.2837 7.188 8.6637 7.038 8.9237 6.738L10.5837 4.988L11.2937 3.928L11.1737 5.938V19.248C11.1737 20.088 11.8637 20.808 12.7437 20.808ZM4.8237 32.048H20.6537C23.7937 32.048 25.4837 30.338 25.4837 27.248V14.108C25.4837 11.018 23.7937 9.328 20.6537 9.328H17.1437V12.848H20.2737C21.3737 12.848 21.9537 13.388 21.9537 14.548V26.808C21.9537 27.968 21.3737 28.508 20.2737 28.508H5.2137C4.1137 28.508 3.5237 27.968 3.5237 26.808V14.548C3.5237 13.388 4.1137 12.848 5.2137 12.848H8.4037V9.328H4.8237C1.7137 9.328 0.0037 11.008 0.0037 14.108V27.248C0.0037 30.348 1.7137 32.048 4.8237 32.048Z",
        "geometry": {
          "width": 25.484375,
          "height": 32.046875
        }
      }
    },
    "square.and.arrow.up.on.square": {
      "bold": {
        "path": "M12.7437 20.7992C13.6337 20.7992 14.3237 20.0692 14.3237 19.2392V5.9192L14.1937 3.9192L14.9037 4.9792L16.5537 6.7392C16.8137 7.0292 17.1837 7.1892 17.5837 7.1892C18.3037 7.1892 18.9537 6.6492 18.9537 5.8692C18.9537 5.4692 18.8037 5.1792 18.5237 4.9092L14.0037 0.5492C13.5737 0.1392 13.1637 -0.0008 12.7437 -0.0008C12.3137 -0.0008 11.9037 0.1392 11.4937 0.5492L6.9637 4.9092C6.6837 5.1792 6.5337 5.4692 6.5337 5.8692C6.5337 6.6492 7.1737 7.1892 7.9037 7.1892C8.2837 7.1892 8.6637 7.0292 8.9237 6.7392L10.5837 4.9792L11.2937 3.9192L11.1737 5.9192V19.2392C11.1737 20.0692 11.8637 20.7992 12.7437 20.7992ZM4.8237 32.0292H8.3837V34.2392C8.3837 37.3392 10.0937 39.0292 13.2037 39.0292H27.9737C31.0937 39.0292 32.8037 37.3392 32.8037 34.2392V20.0792C32.8037 16.9792 31.0937 15.2892 27.9737 15.2892H25.4837V14.1092C25.4837 11.0092 23.7937 9.3092 20.6537 9.3092H17.1437V12.8392H20.2737C21.3737 12.8392 21.9537 13.3692 21.9537 14.5292V26.7992C21.9537 27.9592 21.3737 28.5092 20.2737 28.5092H5.2137C4.1137 28.5092 3.5237 27.9592 3.5237 26.7992V14.5292C3.5237 13.3692 4.1137 12.8392 5.2137 12.8392H8.4037V9.3092H4.8237C1.7137 9.3092 0.0037 11.0092 0.0037 14.1092V27.2392C0.0037 30.3392 1.7137 32.0292 4.8237 32.0292ZM13.6037 35.5092C12.5137 35.5092 11.9037 34.9692 11.9037 33.8092V32.0292H20.6537C23.7937 32.0292 25.4837 30.3292 25.4837 27.2392V18.8092H27.5737C28.6837 18.8092 29.2737 19.3492 29.2737 20.5092V33.8092C29.2737 34.9692 28.6837 35.5092 27.5737 35.5092Z",
        "geometry": {
          "width": 32.798828125,
          "height": 39.033203125
        }
      }
    },
    "eraser": {
      "bold": {
        "path": "M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421Z",
        "geometry": {
          "width": 29.61962396511093,
          "height": 29.626643659003065
        }
      }
    },
    "eraser.line.dashed": {
      "bold": {
        "path": "M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421ZM16.5517 28.7721H25.9417C26.9117 28.7721 27.7017 27.9821 27.7017 27.0121C27.7017 26.0421 26.9117 25.2421 25.9417 25.2421H20.0717ZM31.4517 28.7721H37.9417C38.9117 28.7721 39.7117 27.9821 39.7117 27.0121C39.7117 26.0421 38.9117 25.2421 37.9417 25.2421H31.4517C30.4817 25.2421 29.6917 26.0421 29.6917 27.0121C29.6917 27.9821 30.4817 28.7721 31.4517 28.7721Z",
        "geometry": {
          "width": 39.70937776856488,
          "height": 29.626643659003065
        }
      }
    },
    "rectangle.and.pencil.and.ellipsis": {
      "bold": {
        "path": "M42.3137 3.9043L43.2337 2.9743C43.8837 2.3143 43.9137 1.3843 43.2837 0.7843L42.8437 0.3443C42.3037 -0.1857 41.3437 -0.0857 40.7237 0.5243L39.8237 1.4243ZM26.8137 17.6043L29.8637 16.3543L41.2037 5.0143L38.7237 2.5343L27.3837 13.8843L26.1037 16.8743C25.9237 17.3243 26.4037 17.7643 26.8137 17.6043ZM4.0837 27.3643H35.0137C37.6237 27.3643 39.0837 25.9143 39.0837 23.3343V10.7943L35.4937 14.4043V22.5643C35.4937 23.5043 34.9337 24.0643 33.9637 24.0643H5.1237C4.1537 24.0643 3.6137 23.5043 3.6137 22.5643V11.3143C3.6137 10.3443 4.1537 9.8043 5.1237 9.8043H27.7037L30.9937 6.5243H4.0837C1.4737 6.5243 0.0037 7.9643 0.0037 10.5643V23.3343C0.0037 25.9143 1.4737 27.3643 4.0837 27.3643ZM8.6437 19.1043C9.8437 19.1043 10.8037 18.1343 10.8037 16.9443C10.8037 15.7443 9.8437 14.7743 8.6437 14.7743C7.4337 14.7743 6.4637 15.7443 6.4637 16.9443C6.4637 18.1343 7.4337 19.1043 8.6437 19.1043ZM14.9337 19.1043C16.1237 19.1043 17.1037 18.1343 17.1037 16.9443C17.1037 15.7443 16.1237 14.7743 14.9337 14.7743C13.7437 14.7743 12.7537 15.7443 12.7537 16.9443C12.7537 18.1343 13.7437 19.1043 14.9337 19.1043ZM21.2237 19.1043C22.4237 19.1043 23.3937 18.1343 23.3937 16.9443C23.3937 15.7443 22.4237 14.7743 21.2237 14.7743C20.0137 14.7743 19.0537 15.7443 19.0537 16.9443C19.0537 18.1343 20.0137 19.1043 21.2237 19.1043Z",
        "geometry": {
          "width": 43.740236861188485,
          "height": 27.363502517625186
        }
      }
    },
    "trash": {
      "bold": {
        "path": "M7.5982 31.572H20.2182C22.5582 31.572 23.9982 30.272 24.1082 27.932L25.0082 8.542H26.2782C27.1682 8.542 27.8182 7.912 27.8182 7.042C27.8182 6.182 27.1482 5.552 26.2782 5.552H20.4782V3.572C20.4782 1.282 19.0482 0.002 16.4982 0.002H11.2882C8.7482 0.002 7.3282 1.282 7.3282 3.572V5.552H1.5282C0.6682 5.552 -0.0018 6.182 -0.0018 7.042C-0.0018 7.912 0.6682 8.542 1.5282 8.542H2.8182L3.7182 27.932C3.8282 30.282 5.2482 31.572 7.5982 31.572ZM10.4682 3.682C10.4682 3.092 10.8782 2.732 11.5282 2.732H16.2682C16.9282 2.732 17.3382 3.092 17.3382 3.682V5.552H10.4682ZM8.0082 28.522C7.2982 28.522 6.8382 28.012 6.7982 27.212L5.9182 8.542H21.8782L21.0182 27.212C20.9882 28.032 20.5182 28.522 19.7982 28.522ZM9.9082 26.542C10.5982 26.542 11.0182 26.102 11.0082 25.472L10.5982 11.662C10.5782 11.022 10.1282 10.612 9.4882 10.612C8.8182 10.612 8.3982 11.032 8.4182 11.672L8.8182 25.482C8.8282 26.112 9.2882 26.542 9.9082 26.542ZM13.9082 26.542C14.5582 26.542 15.0082 26.112 15.0082 25.482V11.652C15.0082 11.022 14.5582 10.612 13.9082 10.612C13.2582 10.612 12.8082 11.022 12.8082 11.652V25.482C12.8082 26.112 13.2582 26.542 13.9082 26.542ZM17.9082 26.542C18.5382 26.542 18.9782 26.122 18.9882 25.482L19.3982 11.672C19.4182 11.032 18.9882 10.612 18.3382 10.612C17.6782 10.612 17.2382 11.022 17.2282 11.662L16.8182 25.472C16.7982 26.102 17.2282 26.542 17.9082 26.542Z",
        "geometry": {
          "width": 27.822265625,
          "height": 31.568359375
        }
      }
    },
    "folder": {
      "bold": {
        "path": "M4.8237 26.2648H27.2337C30.1337 26.2648 31.8237 24.5548 31.8237 21.4648V7.3648C31.8237 4.2648 30.1237 2.5748 27.0037 2.5748H14.9937C13.9437 2.5748 13.3037 2.3248 12.4237 1.6548L11.7437 1.1048C10.6737 0.2748 9.9537 0.0048 8.3837 0.0048H4.5637C1.7337 0.0048 0.0037 1.7048 0.0037 4.7948V21.4648C0.0037 24.5648 1.7137 26.2648 4.8237 26.2648ZM3.5237 5.2048C3.5237 4.1248 4.1737 3.5248 5.2537 3.5248H7.4337C8.4937 3.5248 9.1037 3.7548 9.9937 4.4448L10.6737 5.0048C11.7437 5.8248 12.4837 6.0948 14.0437 6.0948H26.6237C27.7137 6.0948 28.3037 6.6348 28.3037 7.7948V8.6248H3.5237ZM5.2137 22.7348C4.1137 22.7348 3.5237 22.1848 3.5237 21.0248V11.5248H28.3037V21.0448C28.3037 22.1848 27.7137 22.7348 26.6237 22.7348Z",
        "geometry": {
          "width": 31.828125,
          "height": 26.263671875
        }
      }
    },
    "folder.badge.plus": {
      "bold": {
        "path": "M29.9937 14.4097C33.9237 14.4097 37.1837 11.1297 37.1837 7.1897C37.1837 3.2497 33.9337 -0.0003 29.9937 -0.0003C26.0437 -0.0003 22.7937 3.2697 22.7937 7.1897C22.7937 11.1397 26.0437 14.4097 29.9937 14.4097ZM4.8237 26.7297H27.2337C30.1337 26.7297 31.8237 25.0197 31.8237 21.9297V16.2697C30.7937 16.5297 29.4337 16.5297 28.3037 16.2697V21.5097C28.3037 22.6497 27.7137 23.1997 26.6237 23.1997H5.2137C4.1137 23.1997 3.5237 22.6497 3.5237 21.4897V11.9897H22.2537C21.6537 11.1297 21.2037 10.1397 20.9637 9.0897H3.5237V5.6697C3.5237 4.5897 4.1737 3.9897 5.2537 3.9897H7.4337C8.4937 3.9897 9.1037 4.2197 9.9937 4.9097L10.6737 5.4697C11.7437 6.2897 12.4837 6.5597 14.0437 6.5597H20.8537C20.8737 5.2997 21.1337 4.1797 21.7137 3.0397H14.9937C13.9437 3.0397 13.3037 2.7897 12.4237 2.1197L11.7437 1.5697C10.6737 0.7397 9.9537 0.4697 8.3837 0.4697H4.5637C1.7337 0.4697 0.0037 2.1697 0.0037 5.2597V21.9297C0.0037 25.0297 1.7137 26.7297 4.8237 26.7297ZM29.9937 11.8497C29.3237 11.8497 28.9037 11.4197 28.9037 10.7697V8.2997H26.4437C25.8037 8.2997 25.3637 7.8597 25.3437 7.2097C25.3437 6.5497 25.7837 6.1097 26.4437 6.1097H28.9037V3.6597C28.9037 3.0197 29.3237 2.5797 29.9937 2.5697C30.6537 2.5597 31.0937 3.0097 31.0937 3.6597V6.1097H33.5537C34.1937 6.1097 34.6337 6.5497 34.6337 7.2097C34.6337 7.8597 34.1937 8.2997 33.5537 8.2997H31.0937V10.7697C31.0937 11.4197 30.6537 11.8497 29.9937 11.8497Z",
        "geometry": {
          "width": 37.1875,
          "height": 26.728515625
        }
      }
    },
    "paperplane": {
      "bold": {
        "path": "M17.5282 29.4764C18.6882 29.4764 19.4982 28.6064 19.9982 27.2764L29.1382 3.3764C29.3582 2.8064 29.4782 2.2864 29.4782 1.8364C29.4782 0.7264 28.7482 -0.0036 27.6482 -0.0036C27.1782 -0.0036 26.6582 0.1264 26.0982 0.3464L2.1282 9.5064C0.8982 9.9764 -0.0018 10.7764 -0.0018 11.9464C-0.0018 13.3264 0.9982 13.9464 2.4082 14.3564L12.2382 17.2364L15.0982 27.0064C15.5182 28.4364 16.1282 29.4764 17.5282 29.4764ZM13.2982 14.0564L6.2182 11.8764C6.0682 11.8364 6.0182 11.7764 6.0182 11.6864C6.0182 11.6064 6.0682 11.5364 6.2082 11.4864L19.0082 6.5264C20.2982 6.0064 21.5782 5.4164 23.1582 4.6864C22.0382 5.5964 20.7082 6.6964 19.7582 7.6464ZM17.7982 23.4764C17.7082 23.4764 17.6482 23.4064 17.6082 23.2464L15.4182 16.1764L21.8382 9.7364C22.7382 8.8064 23.9282 7.3964 24.7882 6.3064C24.0782 7.8864 23.4782 9.1764 22.9682 10.4764L17.9882 23.2664C17.9482 23.4064 17.8782 23.4764 17.7982 23.4764Z",
        "geometry": {
          "width": 29.4765625,
          "height": 29.4765625
        }
      }
    },
    "externaldrive": {
      "bold": {
        "path": "M0.0037 17.9341C0.0037 21.9141 2.8737 24.7741 7.0537 24.7741H26.9837C31.1737 24.7741 34.0437 21.9141 34.0437 17.9341C34.0437 16.6941 33.6837 15.5841 33.2637 14.6041L28.4537 3.6541C27.4237 1.2941 25.4437 0.0041 22.7237 0.0041H11.3337C8.6137 0.0041 6.6337 1.2941 5.6037 3.6541L0.8637 14.4641C0.4137 15.4941 0.0037 16.6241 0.0037 17.9341ZM5.7237 11.2941L8.6937 4.3441C9.0937 3.3541 10.0337 2.8141 11.2537 2.8141H22.8137C24.0237 2.8141 24.9637 3.3541 25.3737 4.3441L28.3237 11.2941C27.9037 11.1741 27.4637 11.1041 26.9837 11.1041H7.0537C6.5937 11.1041 6.1437 11.1741 5.7237 11.2941ZM3.2937 17.9341C3.2937 15.8741 4.7837 14.3841 7.0537 14.3841H26.9837C29.2537 14.3841 30.7637 15.8741 30.7637 17.9341C30.7637 20.1541 29.2537 21.4941 26.9837 21.4941H7.0537C4.7837 21.4941 3.2937 20.0041 3.2937 17.9341ZM24.9337 17.9341C24.9337 18.9941 25.7837 19.8241 26.8337 19.8241C27.8637 19.8241 28.7137 18.9941 28.7137 17.9341C28.7137 16.9241 27.8537 16.0541 26.8337 16.0541C25.8037 16.0541 24.9337 16.9241 24.9337 17.9341Z",
        "geometry": {
          "width": 34.04296875,
          "height": 24.7734375
        }
      }
    },
    "archivebox": {
      "bold": {
        "path": "M6.7237 26.1377H21.7137C24.7437 26.1377 26.4537 24.4577 26.4537 21.4377V8.7377C27.7137 8.2277 28.4537 7.0277 28.4537 5.4377V3.5777C28.4537 1.4377 27.1137 -0.0023 24.9337 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.0277 0.7337 8.2177 1.9937 8.7377V21.4377C1.9937 24.4577 3.7037 26.1377 6.7237 26.1377ZM3.9737 5.8377C3.4437 5.8377 3.1737 5.5677 3.1737 5.0277V3.9877C3.1737 3.4577 3.4437 3.1877 3.9737 3.1877H24.4737C25.0037 3.1877 25.2637 3.4577 25.2637 3.9877V5.0277C25.2637 5.5677 25.0037 5.8377 24.4737 5.8377ZM7.0837 22.6977C6.0537 22.6977 5.5237 22.1877 5.5237 21.1277V9.0277H22.9237V21.1277C22.9237 22.1877 22.3837 22.6977 21.3537 22.6977ZM9.9937 14.7077H18.4737C19.2337 14.7077 19.8137 14.1477 19.8137 13.3577V12.9177C19.8137 12.1277 19.2537 11.5677 18.4737 11.5677H9.9937C9.2137 11.5677 8.6537 12.1277 8.6537 12.9177V13.3577C8.6537 14.1477 9.2237 14.7077 9.9937 14.7077Z",
        "geometry": {
          "width": 28.451171875,
          "height": 26.140625
        }
      }
    },
    "arrow.up.bin": {
      "bold": {
        "path": "M9.8937 26.1377H24.7037C27.7237 26.1377 29.0537 24.5277 29.5137 21.5177L31.4637 9.0077C33.4037 8.8477 34.5937 7.4677 34.5937 5.4377V3.5777C34.5937 1.4377 33.2537 -0.0023 31.0937 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.4677 1.2037 8.8477 3.1337 9.0077L5.0737 21.5177C5.5537 24.5277 6.8637 26.1377 9.8937 26.1377ZM3.9737 5.9177C3.4437 5.9177 3.1737 5.6477 3.1737 5.1177V3.9077C3.1737 3.3777 3.4437 3.1077 3.9737 3.1077H30.6237C31.1537 3.1077 31.4137 3.3777 31.4137 3.9077V5.1177C31.4137 5.6477 31.1537 5.9177 30.6237 5.9177ZM10.2037 22.6977C9.1737 22.6977 8.6937 22.2577 8.5137 21.1277L6.5737 9.0277H28.0137L26.0837 21.1277C25.9037 22.2577 25.4137 22.6977 24.3937 22.6977ZM18.7737 19.6977V16.1377L18.6337 14.1877L19.4937 15.1077L20.1937 15.8477C20.3937 16.1077 20.7837 16.2977 21.1237 16.2977C21.8437 16.2977 22.4037 15.7777 22.4037 15.0677C22.4037 14.6677 22.2737 14.3877 21.9537 14.1077L18.4737 10.9477C18.1137 10.6277 17.7737 10.4277 17.3237 10.4277C16.8737 10.4277 16.5137 10.6277 16.1637 10.9477L12.6837 14.1077C12.3737 14.3877 12.2337 14.6677 12.2337 15.0677C12.2337 15.7777 12.7837 16.2977 13.5037 16.2977C13.8637 16.2977 14.2237 16.1077 14.4537 15.8477L15.1437 15.1077L15.9937 14.1877L15.8637 16.1377V19.6977C15.8637 20.5077 16.5337 21.0677 17.3237 21.0677C18.1137 21.0677 18.7737 20.5077 18.7737 19.6977Z",
        "geometry": {
          "width": 34.58984375,
          "height": 26.140625
        }
      }
    },
    "document": {
      "bold": {
        "path": "M4.8037 30.0902H19.4437C22.5437 30.0902 24.2437 28.3802 24.2437 25.2702V12.8802C24.2437 10.7502 23.9237 9.6802 22.5737 8.3102L16.0137 1.6802C14.6837 0.3402 13.5737 0.0002 11.5537 0.0002H4.8037C1.6937 0.0002 0.0037 1.7102 0.0037 4.8302V25.2702C0.0037 28.4002 1.6937 30.0902 4.8037 30.0902ZM5.2237 26.5602C4.0637 26.5602 3.5237 25.9802 3.5237 24.8802V5.2202C3.5237 4.1302 4.0637 3.5302 5.2237 3.5302H10.5937V10.2302C10.5937 12.6102 11.7337 13.7302 14.0937 13.7302H20.7137V24.8802C20.7137 25.9802 20.1837 26.5602 19.0137 26.5602ZM14.3537 10.8302C13.7637 10.8302 13.4937 10.5502 13.4937 9.9702V3.8102L20.4437 10.8302Z",
        "geometry": {
          "width": 24.240234375,
          "height": 30.091796875
        }
      }
    },
    "arrowshape.left": {
      "bold": {
        "path": "M0.0049 13.0304C0.0049 13.6204 0.2549 14.3104 0.8049 14.8304L11.6849 24.9804C12.5049 25.7304 13.1749 26.0704 14.0249 26.0704C15.3149 26.0704 16.2649 25.1004 16.2649 23.8304V19.4304H26.1849C28.7149 19.4304 30.1849 17.9504 30.1849 15.4504V10.7004C30.1849 8.1904 28.7149 6.7104 26.1849 6.7104H16.2649V2.2804C16.2649 1.0104 15.3149 0.0004 14.0149 0.0004C13.1949 0.0004 12.5949 0.3304 11.6849 1.1504L0.8049 11.2404C0.2449 11.7604 0.0049 12.4304 0.0049 13.0304ZM3.9349 13.0304C3.9349 12.9504 3.9749 12.8904 4.0849 12.7804L12.8149 4.4804C12.8749 4.4304 12.9649 4.3904 13.0249 4.3904C13.1649 4.3904 13.2649 4.4804 13.2649 4.6204V9.4104C13.2649 9.7204 13.3949 9.8404 13.6949 9.8404H25.8349C26.6349 9.8404 27.0549 10.2404 27.0549 11.0604V15.0804C27.0549 15.9004 26.6349 16.3004 25.8349 16.3004H13.6949C13.3949 16.3004 13.2649 16.4304 13.2649 16.7304V21.4004C13.2649 21.5304 13.1649 21.6304 13.0449 21.6304C12.9649 21.6304 12.8949 21.6004 12.8149 21.5204L4.0849 13.2704C3.9749 13.1804 3.9349 13.1104 3.9349 13.0304Z",
        "geometry": {
          "width": 30.1875,
          "height": 26.072265625
        }
      }
    },
    "arrowshape.forward": {
      "bold": {
        "path": "M30.1888 13.0304C30.1888 12.4304 29.9388 11.7604 29.3988 11.2404L18.4988 1.1504C17.5988 0.3304 16.9988 0.0004 16.1788 0.0004C14.8888 0.0004 13.9188 1.0104 13.9188 2.2804V6.7104H4.0088C1.4787 6.7104 -0.0013 8.1904 -0.0013 10.7004V15.4504C-0.0013 17.9504 1.4787 19.4304 4.0088 19.4304H13.9188V23.8304C13.9188 25.1004 14.8888 26.0704 16.1588 26.0704C17.0088 26.0704 17.6788 25.7304 18.4988 24.9804L29.3787 14.8304C29.9288 14.3104 30.1888 13.6204 30.1888 13.0304ZM26.2488 13.0304C26.2488 13.1104 26.2087 13.1804 26.1088 13.2704L17.3788 21.5204C17.2987 21.6004 17.2288 21.6304 17.1488 21.6304C17.0188 21.6304 16.9288 21.5304 16.9288 21.4004V16.7304C16.9288 16.4304 16.7888 16.3004 16.4888 16.3004H4.3488C3.5588 16.3004 3.1288 15.9004 3.1288 15.0804V11.0604C3.1288 10.2404 3.5588 9.8404 4.3488 9.8404H16.4888C16.7888 9.8404 16.9288 9.7204 16.9288 9.4104V4.6204C16.9288 4.4804 17.0188 4.3904 17.1588 4.3904C17.2288 4.3904 17.3088 4.4304 17.3788 4.4804L26.1088 12.7804C26.2087 12.8904 26.2488 12.9504 26.2488 13.0304Z",
        "geometry": {
          "width": 30.1875,
          "height": 26.072265625
        }
      }
    },
    "paperclip": {
      "bold": {
        "path": "M22.8357 15.8659L12.6757 26.0159C10.1757 28.5259 6.8357 28.3059 4.6857 26.1459C2.5157 23.9859 2.3157 20.6659 4.8157 18.1459L18.7857 4.2059C20.1757 2.7959 22.3157 2.4559 23.7257 3.8659C25.1457 5.2959 24.7857 7.4059 23.3957 8.7959L9.5957 22.6159C9.1057 23.1159 8.5357 22.9759 8.1857 22.6459C7.8657 22.3059 7.7257 21.7359 8.2157 21.2359L17.8157 11.6459C18.4057 11.0559 18.4257 10.1759 17.8557 9.6059C17.2857 9.0559 16.4057 9.0559 15.8157 9.6459L6.1757 19.2859C4.5957 20.8859 4.6657 23.3359 6.0857 24.7559C7.6157 26.2859 9.9557 26.2459 11.5357 24.6559L25.4157 10.7759C28.2057 7.9959 28.1257 4.3159 25.6457 1.8359C23.2157 -0.5841 19.4857 -0.7141 16.6957 2.0559L2.6257 16.1359C-0.9743 19.7459 -0.7543 24.9759 2.5457 28.2759C5.8657 31.5759 11.0857 31.8059 14.6957 28.2159L24.9257 17.9759C25.4857 17.4259 25.4857 16.3859 24.8957 15.8359C24.3457 15.2559 23.4057 15.3059 22.8357 15.8659Z",
        "geometry": {
          "width": 27.506760745330002,
          "height": 30.83056564117573
        }
      }
    },
    "link": {
      "bold": {
        "path": "M13.6938 21.0327L16.2238 18.5027C14.8838 18.3527 13.7538 17.8527 13.0138 17.1127C10.8138 14.9127 10.8138 11.8427 12.9838 9.6627L17.6638 4.9927C19.8538 2.8127 22.9138 2.8127 25.1138 4.9927C27.3138 7.2127 27.3138 10.2727 25.1238 12.4527L23.3738 14.2127C23.8938 15.4327 24.1338 16.9827 23.7338 18.3427L27.4938 14.6127C31.0038 11.1227 30.9938 6.1427 27.4838 2.6327C23.9538 -0.8773 19.0038 -0.8673 15.5138 2.6227L10.6238 7.5127C7.1338 11.0027 7.1238 15.9627 10.6338 19.4727C11.3338 20.1727 12.3838 20.7627 13.6938 21.0327ZM16.4338 9.0727L13.8938 11.6027C15.2438 11.7527 16.3638 12.2527 17.1038 12.9927C19.3038 15.1927 19.3138 18.2727 17.1338 20.4427L12.4538 25.1127C10.2638 27.2927 7.2038 27.2927 5.0138 25.1127C2.8038 22.8927 2.8038 19.8427 4.9838 17.6527L6.7338 15.9027C6.2238 14.6927 5.9838 13.1227 6.3838 11.7627L2.6238 15.5127C-0.8762 18.9827 -0.8762 23.9627 2.6338 27.4727C6.1638 30.9827 11.1138 30.9727 14.6038 27.4827L19.4938 22.5927C22.9838 19.1027 22.9938 14.1427 19.4838 10.6327C18.7838 9.9427 17.7338 9.3427 16.4338 9.0727Z",
        "geometry": {
          "width": 30.120862082483555,
          "height": 30.10546875
        }
      }
    },
    "personalhotspot": {
      "bold": {
        "path": "M8.4527 16.9379H9.2427C9.0927 15.8279 9.0327 14.6879 9.2327 13.7379H8.6127C5.5127 13.7379 3.3527 11.5779 3.3527 8.4579C3.3527 5.3579 5.5227 3.1879 8.6127 3.1879H20.6327C23.7027 3.1879 25.8927 5.3579 25.8927 8.4579C25.8927 11.5779 23.7227 13.7379 20.6327 13.7379H16.9527C16.2427 14.3579 16.2827 16.1879 17.1127 16.9379H20.7827C25.7327 16.9379 29.2327 13.4379 29.2327 8.4579C29.2327 3.4979 25.7327 -0.0021 20.7827 -0.0021H8.4527C3.5127 -0.0021 0.0027 3.4979 0.0027 8.4579C0.0027 13.4379 3.5127 16.9379 8.4527 16.9379ZM19.5527 23.5679H31.8827C36.8227 23.5679 40.3327 20.0679 40.3327 15.1079C40.3327 10.1279 36.8227 6.6279 31.8827 6.6279H31.0927C31.2527 7.7279 31.2927 8.8779 31.1027 9.8279H31.7227C34.8227 9.8279 36.9827 11.9879 36.9827 15.1079C36.9827 18.2079 34.8127 20.3879 31.7227 20.3879H19.7027C16.6227 20.3879 14.4327 18.2079 14.4327 15.1079C14.4327 11.9879 16.6127 9.8279 19.7027 9.8279H23.3827C24.0127 9.1279 23.9627 7.3779 23.2027 6.6279H19.5527C14.6027 6.6279 11.1027 10.1279 11.1027 15.1079C11.1027 20.0679 14.6027 23.5679 19.5527 23.5679Z",
        "geometry": {
          "width": 40.33203125,
          "height": 23.5703125
        }
      }
    },
    "person": {
      "bold": {
        "path": "M12.1537 13.0959C15.5437 13.0959 18.2837 10.1459 18.2837 6.4759C18.2837 2.8959 15.5337 -0.0041 12.1537 -0.0041C8.7937 -0.0041 6.0337 2.9159 6.0437 6.4959C6.0537 10.1459 8.7637 13.0959 12.1537 13.0959ZM12.1537 10.1959C10.4437 10.1959 9.0237 8.6559 9.0137 6.4759C8.9937 4.4059 10.4637 2.8859 12.1537 2.8859C13.8737 2.8859 15.3037 4.3859 15.3037 6.4759C15.3037 8.6359 13.8737 10.1959 12.1537 10.1959ZM3.7437 25.9059H20.5637C23.0637 25.9059 24.3037 25.0559 24.3037 23.2859C24.3037 19.2659 19.3437 14.5159 12.1537 14.5159C4.9537 14.5159 0.0037 19.2659 0.0037 23.2859C0.0037 25.0559 1.2437 25.9059 3.7437 25.9059ZM3.6337 23.0259C3.3737 23.0259 3.2937 22.9159 3.2937 22.7059C3.2937 20.8759 6.5237 17.4059 12.1537 17.4059C17.7837 17.4059 21.0137 20.8759 21.0137 22.7059C21.0137 22.9159 20.9337 23.0259 20.6537 23.0259Z",
        "geometry": {
          "width": 24.30859375,
          "height": 25.908203125
        }
      }
    },
    "person.2": {
      "bold": {
        "path": "M26.6037 13.0959C29.9937 13.0959 32.7337 10.1459 32.7337 6.4759C32.7337 2.8959 29.9837 -0.0041 26.6037 -0.0041C23.2437 -0.0041 20.4837 2.9159 20.4937 6.4959C20.5037 10.1459 23.2137 13.0959 26.6037 13.0959ZM10.6137 13.2859C13.5637 13.2859 15.9537 10.6959 15.9537 7.4659C15.9537 4.3359 13.5537 1.7659 10.6137 1.7659C7.6737 1.7659 5.2537 4.3659 5.2537 7.4759C5.2637 10.7059 7.6437 13.2859 10.6137 13.2859ZM26.6037 10.1959C24.8937 10.1959 23.4637 8.5959 23.4637 6.4759C23.4437 4.4659 24.9137 2.8859 26.6037 2.8859C28.3237 2.8859 29.7537 4.4559 29.7537 6.4759C29.7537 8.5759 28.3237 10.1959 26.6037 10.1959ZM10.6137 10.4459C9.2537 10.4459 8.1037 9.1459 8.1037 7.4759C8.0937 5.9059 9.2537 4.6059 10.6137 4.6059C11.9637 4.6059 13.1137 5.8759 13.1137 7.4659C13.1137 9.1459 11.9737 10.4459 10.6137 10.4459ZM3.2137 25.9259H13.6437C12.7537 25.3759 12.2537 24.1159 12.3637 23.0759H3.4037C3.1737 23.0759 3.0937 22.9559 3.0937 22.7759C3.0937 20.0559 6.4637 17.3359 10.5937 17.3359C11.8237 17.3359 13.3337 17.6659 14.3037 18.1459C14.7937 17.2959 15.4737 16.5659 16.4337 15.9859C14.7537 15.0559 12.5237 14.5059 10.5937 14.5059C4.7437 14.5059 0.0037 18.6059 0.0037 23.1459C0.0037 24.9559 1.0637 25.9259 3.2137 25.9259ZM18.1937 25.9059H35.0137C37.5137 25.9059 38.7637 25.0559 38.7637 23.2859C38.7637 19.2659 33.7937 14.5159 26.6037 14.5159C19.4037 14.5159 14.4537 19.2659 14.4537 23.2859C14.4537 25.0559 15.6937 25.9059 18.1937 25.9059ZM18.0837 23.0259C17.8237 23.0259 17.7437 22.9159 17.7437 22.7059C17.7437 20.8759 20.9737 17.4059 26.6037 17.4059C32.2337 17.4059 35.4637 20.8759 35.4637 22.7059C35.4637 22.9159 35.3837 23.0259 35.1137 23.0259Z",
        "geometry": {
          "width": 38.759765625,
          "height": 25.921875
        }
      }
    },
    "power": {
      "bold": {
        "path": "M14.4327 15.6636C15.5827 15.6636 16.3527 14.8436 16.3527 13.6336V2.0336C16.3527 0.8036 15.5827 0.0036 14.4327 0.0036C13.2927 0.0036 12.5227 0.8036 12.5227 2.0336V13.6336C12.5227 14.8436 13.2927 15.6636 14.4327 15.6636ZM14.4327 29.7636C22.3627 29.7636 28.8727 23.2436 28.8727 15.3136C28.8727 11.2936 27.1827 7.6936 24.7327 5.2736C22.9527 3.4436 20.2727 5.6836 22.1327 7.6936C24.0727 9.6436 25.2827 12.3336 25.2827 15.3136C25.2927 21.3236 20.4527 26.1636 14.4327 26.1636C8.4327 26.1636 3.6127 21.3236 3.6127 15.3136C3.6127 12.3136 4.8127 9.6436 6.7527 7.6836C8.6127 5.6736 5.9227 3.4436 4.1527 5.2636C1.6927 7.6936 0.0027 11.2936 0.0027 15.3136C0.0027 23.2436 6.5227 29.7636 14.4327 29.7636Z",
        "geometry": {
          "width": 28.875,
          "height": 29.763671875
        }
      }
    },
    "clear": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8737 18.7277C9.3237 18.7277 9.6837 18.5977 9.9637 18.2977L13.0837 15.1777L16.2137 18.2977C16.5037 18.5777 16.8537 18.7277 17.2937 18.7277C18.1337 18.7277 18.7737 18.0877 18.7737 17.2577C18.7737 16.8577 18.6037 16.4977 18.3237 16.2277L15.1937 13.0877L18.3337 9.9277C18.6237 9.6277 18.7737 9.2877 18.7737 8.8977C18.7737 8.0677 18.1337 7.4277 17.3037 7.4277C16.8737 7.4277 16.5337 7.5577 16.2237 7.8577L13.0837 10.9877L9.9537 7.8777C9.6637 7.5777 9.3237 7.4377 8.8737 7.4377C8.0537 7.4377 7.4137 8.0777 7.4137 8.9177C7.4137 9.2977 7.5637 9.6477 7.8437 9.9277L10.9937 13.0877L7.8437 16.2277C7.5637 16.4977 7.4137 16.8677 7.4137 17.2577C7.4137 18.0877 8.0537 18.7277 8.8737 18.7277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "delete.left": {
      "bold": {
        "path": "M25.3709 26.1377C28.4909 26.1377 30.2009 24.7477 30.2009 21.6377V4.7977C30.2009 1.6977 28.4909 -0.0023 25.3709 -0.0023H13.6309C11.3909 -0.0023 10.1209 0.5177 8.7109 2.1377L1.5209 10.1077C0.3409 11.4477 0.0009 12.1777 0.0009 13.0577C0.0009 13.9477 0.3509 14.7077 1.5209 16.0377L8.7109 23.9677C10.1409 25.5977 11.3909 26.1377 13.6309 26.1377ZM24.9809 22.6177H13.4009C12.5809 22.6177 12.0309 22.3777 11.4409 21.7377L4.2909 13.8777C3.9909 13.5577 3.9009 13.3177 3.9009 13.0577C3.9009 12.7977 3.9909 12.5777 4.2909 12.2477L11.4409 4.3477C12.0209 3.7077 12.5809 3.5277 13.3809 3.5277H24.9809C26.0909 3.5277 26.6709 4.0777 26.6709 5.2377V20.9177C26.6709 22.0777 26.0909 22.6177 24.9809 22.6177ZM13.4509 18.7577C13.9009 18.7577 14.2609 18.6077 14.5509 18.3177L17.6609 15.2077L20.7909 18.3177C21.0809 18.6077 21.4409 18.7577 21.8709 18.7577C22.7109 18.7577 23.3509 18.0977 23.3509 17.2677C23.3509 16.8877 23.1909 16.5277 22.9009 16.2377L19.7709 13.0977L22.9109 9.9377C23.2009 9.6477 23.3509 9.2977 23.3509 8.9277C23.3509 8.0777 22.7109 7.4377 21.8909 7.4377C21.4509 7.4377 21.1209 7.5777 20.8109 7.8877L17.6609 11.0177L14.5309 7.8877C14.2509 7.5977 13.9009 7.4677 13.4509 7.4677C12.6309 7.4677 11.9909 8.0977 11.9909 8.9277C11.9909 9.3077 12.1409 9.6677 12.4309 9.9577L15.5709 13.0977L12.4309 16.2577C12.1409 16.5277 11.9909 16.8877 11.9909 17.2677C11.9909 18.0977 12.6309 18.7577 13.4509 18.7577Z",
        "geometry": {
          "width": 30.201171875,
          "height": 26.140625
        }
      }
    },
    "progress.indicator": {
      "bold": {
        "path": "M0.0028 2.7202H25.2628V0.0002H0.0028ZM0.0028 8.8602H25.2628V6.1202H0.0028ZM0.0028 15.0002H25.2628V12.2802H0.0028ZM0.0028 21.1402H25.2628V18.4002H0.0028ZM0.0028 27.2802H25.2628V24.5502H0.0028ZM0.0028 33.4102H25.2628V30.6802H0.0028Z",
        "geometry": {
          "width": 25.265625,
          "height": 33.4140625
        }
      }
    },
    "sun.max": {
      "bold": {
        "path": "M15.9427 6.0325C16.8527 6.0325 17.6227 5.2625 17.6227 4.3525V1.6825C17.6227 0.7625 16.8527 0.0025 15.9427 0.0025C15.0227 0.0025 14.2627 0.7625 14.2627 1.6825V4.3525C14.2627 5.2625 15.0227 6.0325 15.9427 6.0325ZM22.9527 8.9825C23.5827 9.6125 24.6827 9.6125 25.3327 8.9525L27.2227 7.0725C27.8527 6.4225 27.8327 5.3325 27.1927 4.6725C26.5627 4.0425 25.4727 4.0625 24.8327 4.7025L22.9327 6.6025C22.3027 7.2425 22.3027 8.3425 22.9527 8.9825ZM8.9127 8.9825C9.5727 8.3425 9.5727 7.2325 8.9527 6.6025L7.0727 4.7025C6.4227 4.0725 5.3327 4.0425 4.6927 4.6725C4.0427 5.3325 4.0327 6.4225 4.6627 7.0525L6.5527 8.9525C7.1927 9.6125 8.2827 9.6125 8.9127 8.9825ZM15.9427 23.5025C20.0727 23.5025 23.4927 20.0825 23.4927 15.9425C23.4927 11.8025 20.0727 8.3825 15.9427 8.3825C11.8027 8.3825 8.3827 11.8025 8.3827 15.9425C8.3827 20.0825 11.8027 23.5025 15.9427 23.5025ZM15.9427 20.1625C13.6327 20.1625 11.7027 18.2525 11.7027 15.9425C11.7027 13.6325 13.6327 11.7025 15.9427 11.7025C18.2427 11.7025 20.1627 13.6325 20.1627 15.9425C20.1627 18.2525 18.2427 20.1625 15.9427 20.1625ZM25.8527 15.9425C25.8527 16.8525 26.6227 17.6225 27.5327 17.6225H30.2027C31.1127 17.6225 31.8827 16.8525 31.8827 15.9425C31.8827 15.0225 31.1127 14.2625 30.2027 14.2625H27.5327C26.6227 14.2625 25.8527 15.0225 25.8527 15.9425ZM6.0327 15.9425C6.0327 15.0225 5.2627 14.2625 4.3427 14.2625H1.6827C0.7627 14.2625 0.0027 15.0225 0.0027 15.9425C0.0027 16.8525 0.7627 17.6225 1.6827 17.6225H4.3427C5.2627 17.6225 6.0327 16.8525 6.0327 15.9425ZM22.9327 22.9325C22.3027 23.5725 22.3027 24.6525 22.9527 25.3025L24.8527 27.2025C25.4827 27.8325 26.5827 27.8225 27.2327 27.1625C27.8627 26.5325 27.8627 25.4425 27.2027 24.8025L25.3027 22.9125C24.6627 22.2825 23.5727 22.2825 22.9327 22.9325ZM8.9527 22.9325C8.3027 22.2825 7.2027 22.2825 6.5627 22.9125L4.6627 24.7825C4.0227 25.4325 4.0027 26.5225 4.6327 27.1625C5.2927 27.8125 6.3827 27.8225 7.0227 27.1925L8.9127 25.3025C9.5727 24.6525 9.5727 23.5725 8.9527 22.9325ZM15.9427 25.8425C15.0227 25.8425 14.2627 26.6025 14.2627 27.5225V30.2025C14.2627 31.1125 15.0227 31.8825 15.9427 31.8825C16.8527 31.8825 17.6227 31.1125 17.6227 30.2025V27.5225C17.6227 26.6025 16.8527 25.8425 15.9427 25.8425Z",
        "geometry": {
          "width": 31.8828125,
          "height": 31.8828125
        }
      }
    },
    "sparkles": {
      "bold": {
        "path": "M12.1109 6.8369C12.3309 6.8369 12.4709 6.6869 12.5109 6.4969C12.8809 4.3069 12.8409 4.2669 15.1909 3.8169C15.4109 3.7769 15.5409 3.6369 15.5409 3.4169C15.5409 3.2169 15.3909 3.0669 15.1909 3.0369C12.8409 2.6569 12.8609 2.5869 12.5109 0.3569C12.4709 0.1469 12.3309 -0.0031 12.1109 -0.0031C11.8909 -0.0031 11.7609 0.1469 11.7309 0.3669C11.3909 2.5269 11.4009 2.5869 9.0409 3.0369C8.8309 3.0769 8.6909 3.2169 8.6909 3.4169C8.6909 3.6369 8.8309 3.7769 9.0609 3.8169C11.3909 4.2269 11.3709 4.2769 11.7309 6.4769C11.7609 6.6869 11.8909 6.8369 12.1109 6.8369ZM5.4709 16.6569C5.7809 16.6569 6.0409 16.4169 6.0809 16.1069C6.5509 12.5269 6.6309 12.4969 10.3909 11.8169C10.7009 11.7569 10.9409 11.5269 10.9409 11.1969C10.9409 10.8669 10.7009 10.6269 10.3909 10.5869C6.6609 10.0769 6.5509 9.9769 6.0809 6.3169C6.0409 5.9769 5.8009 5.7469 5.4709 5.7469C5.1409 5.7469 4.8909 5.9769 4.8509 6.3269C4.4209 9.8869 4.2909 9.8969 0.5509 10.5869C0.2309 10.6369 0.0009 10.8669 0.0009 11.1969C0.0009 11.5369 0.2309 11.7569 0.6109 11.8169C4.2909 12.3769 4.4209 12.4969 4.8509 16.0669C4.8909 16.4169 5.1409 16.6569 5.4709 16.6569ZM15.2609 31.8669C15.7909 31.8669 16.2009 31.4869 16.3009 30.9269C17.2909 23.6669 18.3109 22.5969 25.4009 21.7969C25.9809 21.7369 26.3909 21.2869 26.3909 20.7369C26.3909 20.2069 25.9809 19.7669 25.4209 19.6869C18.3309 18.8169 17.3909 17.8169 16.3009 10.5669C16.2009 10.0069 15.7809 9.6269 15.2609 9.6269C14.7209 9.6269 14.3009 10.0069 14.2209 10.5669C13.2109 17.8169 12.1909 18.8969 5.1109 19.6869C4.5409 19.7569 4.1309 20.1969 4.1309 20.7369C4.1309 21.2869 4.5209 21.7069 5.1009 21.7969C12.1709 22.7669 13.0809 23.6669 14.2209 30.9269C14.3109 31.4869 14.7209 31.8669 15.2609 31.8669Z",
        "geometry": {
          "width": 26.38671875,
          "height": 31.869140625
        }
      }
    },
    "cloud.hail": {
      "bold": {
        "path": "M6.9727 21.8086H24.1327C28.8727 21.8086 32.4427 18.1986 32.4427 13.6586C32.4427 9.0186 28.7927 5.5086 23.9927 5.5086C22.3527 2.3386 19.3327 -0.0014 14.8427 -0.0014C9.4327 -0.0014 5.1527 4.0186 4.5427 9.1486C1.9527 9.9986 0.0027 12.2386 0.0027 15.2986C0.0027 18.9486 2.7027 21.8086 6.9727 21.8086ZM7.0427 18.5786C4.4827 18.5786 3.2127 17.2086 3.2127 15.3686C3.2127 13.7786 4.1827 12.4986 6.4127 11.9186C7.2627 11.6986 7.5027 11.3186 7.6127 10.4586C8.1327 5.9286 11.1527 3.2286 14.8427 3.2286C17.6627 3.2286 19.9627 4.7986 21.4527 7.7086C21.8227 8.4186 22.2427 8.6786 23.1227 8.6786C27.1927 8.6786 29.2327 10.9386 29.2327 13.7286C29.2327 16.4486 27.1227 18.5786 24.1327 18.5786ZM9.0327 26.7686L9.7727 25.4886C10.0627 24.9886 9.9227 24.3786 9.4227 24.0886C8.9127 23.7986 8.3427 23.9786 8.0427 24.4886L7.3027 25.7886C7.0227 26.2686 7.1527 26.8686 7.6527 27.1486C8.1627 27.4386 8.7527 27.2486 9.0327 26.7686ZM15.0027 28.8586L16.9427 25.4986C17.2227 25.0086 17.0927 24.3886 16.5827 24.0986C16.0827 23.8186 15.5127 23.9986 15.2127 24.5186L13.2727 27.8886C12.9927 28.3586 13.1127 28.9586 13.6127 29.2586C14.1227 29.5286 14.7227 29.3386 15.0027 28.8586ZM23.3627 26.8086L24.1027 25.5286C24.3927 25.0286 24.2527 24.4286 23.7527 24.1486C23.2427 23.8486 22.6727 24.0186 22.3627 24.5386L21.6327 25.8386C21.3527 26.3186 21.4627 26.9186 21.9827 27.2086C22.4927 27.4986 23.0827 27.2986 23.3627 26.8086ZM6.2227 31.2286C7.1227 31.2286 7.8627 30.4786 7.8627 29.5686C7.8627 28.6886 7.1227 27.9486 6.2227 27.9486C5.3327 27.9486 4.5827 28.6886 4.5827 29.5686C4.5827 30.4786 5.3327 31.2286 6.2227 31.2286ZM20.5527 31.2786C21.4527 31.2786 22.1927 30.5286 22.1927 29.6286C22.1927 28.7386 21.4527 27.9986 20.5527 27.9986C19.6627 27.9986 18.9127 28.7386 18.9127 29.6286C18.9127 30.5286 19.6627 31.2786 20.5527 31.2786ZM12.1927 33.3186C13.0827 33.3186 13.8327 32.5786 13.8327 31.6686C13.8327 30.7886 13.0827 30.0386 12.1927 30.0386C11.2927 30.0386 10.5527 30.7886 10.5527 31.6686C10.5527 32.5786 11.2927 33.3186 12.1927 33.3186Z",
        "geometry": {
          "width": 32.443359375,
          "height": 33.318359375
        }
      }
    },
    "humidity": {
      "bold": {
        "path": "M5.9575 8.2071C12.2875 8.2071 15.5275 3.0471 21.0875 3.0471C22.3875 3.0471 23.4975 3.3371 24.8075 4.0971C25.5475 4.5071 26.3375 4.2771 26.7775 3.6671C27.2875 2.9271 27.1075 1.9171 26.1575 1.3571C24.5775 0.4471 22.8975 -0.0029 21.0875 -0.0029C14.7075 -0.0029 11.4775 5.1671 5.9575 5.1671C4.6575 5.1671 3.5575 4.8671 2.2375 4.1171C1.4975 3.6871 0.6875 3.9371 0.2675 4.5671C-0.2225 5.3071 -0.0425 6.3071 0.8875 6.8471C2.4675 7.7471 4.1475 8.2071 5.9575 8.2071ZM23.9175 24.6471C27.4075 24.6471 30.1775 21.9271 30.1775 18.5271C30.1775 16.6671 29.2675 14.8471 28.5175 13.4371L25.4675 7.7671C25.0975 7.0971 24.6275 6.7671 23.9175 6.7671C23.2075 6.7671 22.7475 7.0971 22.3875 7.7671L19.3575 13.4371C18.5975 14.8471 17.6675 16.6671 17.6675 18.5271C17.6675 21.9271 20.4575 24.6471 23.9175 24.6471ZM5.9675 15.5471C11.0375 15.5471 14.2775 12.0071 18.3875 10.8871C18.9975 9.7071 19.6375 8.5471 20.2675 7.3671C14.3175 7.8171 11.2975 12.4971 5.9675 12.4971C4.6675 12.4971 3.5775 12.1971 2.2675 11.4471C1.5075 11.0171 0.7075 11.2671 0.2975 11.8971C-0.2125 12.6371 -0.0325 13.6271 0.8975 14.1771C2.4775 15.0771 4.1675 15.5471 5.9675 15.5471ZM23.9175 22.0671C21.8875 22.0671 20.2575 20.5071 20.2575 18.5271C20.2575 17.2671 20.8975 16.0471 21.6475 14.6471L23.7975 10.6371C23.8675 10.4971 23.9975 10.4971 24.0875 10.6371L26.2075 14.6471C26.9575 16.0471 27.6075 17.2671 27.6075 18.5271C27.6075 20.5071 25.9875 22.0671 23.9175 22.0671ZM5.9575 22.8771C9.9475 22.8771 12.7475 20.7271 15.7175 19.2471C15.5675 18.2071 15.7075 16.9371 16.0675 15.7871C12.5475 17.3071 9.8375 19.8271 5.9575 19.8271C4.6575 19.8271 3.5575 19.5271 2.2375 18.7671C1.4975 18.3471 0.6875 18.5971 0.2675 19.2271C-0.2225 19.9571 -0.0425 20.9571 0.8875 21.5071C2.4675 22.4071 4.1475 22.8771 5.9575 22.8771Z",
        "geometry": {
          "width": 30.18133278998727,
          "height": 24.650390625
        }
      }
    },
    "play": {
      "bold": {
        "path": "M2.3237 25.2229C2.9537 25.2229 3.5237 25.0229 4.2937 24.5829L20.7037 15.0629C21.9537 14.3429 22.5837 13.6729 22.5837 12.6029C22.5837 11.5529 21.9537 10.8829 20.7037 10.1429L4.2937 0.6329C3.5237 0.1929 2.9537 0.0029 2.3237 0.0029C1.0437 0.0029 0.0037 0.9729 0.0037 2.6129V22.6029C0.0037 24.2429 1.0437 25.2229 2.3237 25.2229ZM3.8237 20.6129C3.7637 20.6129 3.7237 20.5629 3.7237 20.4829V4.7329C3.7237 4.6329 3.7637 4.5829 3.8237 4.5829C3.8837 4.5829 3.9237 4.6029 3.9937 4.6329L17.5537 12.4729C17.6137 12.5129 17.6537 12.5529 17.6537 12.6029C17.6537 12.6729 17.6137 12.7029 17.5537 12.7429L3.9937 20.5629C3.9237 20.6029 3.8837 20.6129 3.8237 20.6129Z",
        "geometry": {
          "width": 22.5859375,
          "height": 25.224609375
        }
      }
    },
    "pause": {
      "bold": {
        "path": "M2.0737 23.792C3.2637 23.792 4.1537 22.932 4.1537 21.762V2.012C4.1537 0.862 3.2637 0.002 2.0737 0.002C0.8937 0.002 0.0037 0.862 0.0037 2.012V21.762C0.0037 22.932 0.8937 23.792 2.0737 23.792ZM12.4137 23.792C13.6037 23.792 14.4937 22.932 14.4937 21.762V2.012C14.4937 0.862 13.6037 0.002 12.4137 0.002C11.2237 0.002 10.3337 0.862 10.3337 2.012V21.762C10.3337 22.932 11.2237 23.792 12.4137 23.792Z",
        "geometry": {
          "width": 14.4921875,
          "height": 23.7890625
        }
      }
    },
    "stop": {
      "bold": {
        "path": "M0.0037 19.9652C0.0037 22.1452 1.3637 23.4852 3.6537 23.4852H19.8337C22.1337 23.4852 23.5037 22.1452 23.5037 19.9652V3.5252C23.5037 1.3552 22.1337 -0.0048 19.8337 -0.0048H3.6537C1.3637 -0.0048 0.0037 1.3552 0.0037 3.5252ZM3.5237 18.7552V4.7352C3.5237 3.9352 3.9937 3.4752 4.7837 3.4752H18.8437C19.6237 3.4752 20.0837 3.9352 20.0837 4.7352V18.7552C20.0837 19.5652 19.6237 20.0252 18.8437 20.0252H4.7837C3.9937 20.0252 3.5237 19.5652 3.5237 18.7552Z",
        "geometry": {
          "width": 23.501953125,
          "height": 23.48828125
        }
      }
    },
    "repeat": {
      "bold": {
        "path": "M1.8437 14.6578C2.8737 14.6578 3.6737 13.8478 3.6737 12.8078V11.7478C3.6737 9.3378 5.2737 7.8578 7.8737 7.8578H18.2837V10.9078C18.2837 11.7578 18.7837 12.2678 19.6237 12.2678C20.0137 12.2678 20.3337 12.1278 20.5937 11.9078L26.3037 7.0978C26.9337 6.5578 26.9437 5.6978 26.3037 5.1678L20.5937 0.3578C20.3337 0.1378 20.0137 -0.0022 19.6237 -0.0022C18.7837 -0.0022 18.2837 0.5178 18.2837 1.3678V4.2678H8.0637C3.0937 4.2678 0.0037 6.9178 0.0037 11.2778V12.8078C0.0037 13.8478 0.8237 14.6578 1.8437 14.6578ZM29.7937 12.7678C28.7637 12.7678 27.9637 13.5878 27.9637 14.6178V15.6778C27.9637 18.0878 26.3437 19.5678 23.7637 19.5678H13.3537V16.5178C13.3537 15.6678 12.8337 15.1478 12.0037 15.1478C11.6237 15.1478 11.2937 15.2878 11.0337 15.5078L5.3137 20.3178C4.6937 20.8678 4.6937 21.7078 5.3137 22.2478L11.0337 27.0578C11.2937 27.2778 11.6237 27.4078 12.0037 27.4078C12.8337 27.4078 13.3537 26.9078 13.3537 26.0578V23.1578H23.5537C28.5337 23.1578 31.6237 20.5078 31.6237 16.1478V14.6178C31.6237 13.5878 30.8137 12.7678 29.7937 12.7678Z",
        "geometry": {
          "width": 31.623046875,
          "height": 27.412109375
        }
      }
    },
    "arrow.trianglehead.clockwise": {
      "bold": {
        "path": "M0.0027 17.3644C0.0027 25.2944 6.5227 31.8044 14.4327 31.8044C22.3627 31.8044 28.8727 25.2944 28.8727 17.3644C28.8727 13.2344 26.8827 8.9444 23.8727 6.5644C22.9127 5.7444 21.8227 5.7944 21.1827 6.5644C20.4627 7.3944 20.7427 8.4444 21.5027 9.2244C23.8327 11.2544 25.2827 14.0844 25.2827 17.3644C25.2927 23.3744 20.4527 28.2044 14.4327 28.2044C8.4327 28.2044 3.6127 23.3744 3.6127 17.3644C3.6127 12.4244 6.8527 8.3144 11.3327 7.0044V8.9244C11.3327 10.0944 12.2927 10.4444 13.2927 9.7244L18.2927 6.0944C19.1027 5.5244 19.0827 4.5844 18.2927 4.0044L13.3027 0.3844C12.3027 -0.3456 11.3327 -0.0156 11.3327 1.1644V3.2844C4.8827 4.6944 0.0027 10.5044 0.0027 17.3644Z",
        "geometry": {
          "width": 28.875,
          "height": 31.80084709867549
        }
      }
    },
    "arrow.trianglehead.2.clockwise.rotate.90": {
      "bold": {
        "path": "M7.8465 3.9249C6.9465 4.7049 6.9365 5.7949 7.5065 6.4849C8.0965 7.2049 9.1465 7.4149 10.1865 6.5749C12.0765 4.7449 14.6665 3.5949 17.5265 3.5949C22.9965 3.5949 27.3565 7.5349 28.2165 12.4849H26.0865C24.9265 12.4849 24.5865 13.4549 25.3065 14.4549L28.9165 19.4449C29.5065 20.2449 30.4365 20.2349 31.0265 19.4449L34.6265 14.4549C35.3665 13.4549 35.0365 12.4849 33.8565 12.4849H31.8665C30.9665 5.5949 24.9065 0.0049 17.5265 0.0049C13.7365 0.0049 10.3065 1.5449 7.8465 3.9249ZM0.3865 14.4149C-0.3435 15.4049 -0.0135 16.3749 1.1665 16.3749H3.1865C4.0865 23.2649 10.1465 28.8749 17.5265 28.8749C21.3165 28.8749 24.7565 27.3149 27.2165 24.9249C28.1065 24.1549 28.1265 23.0649 27.5665 22.3849C26.9565 21.6449 25.9265 21.4549 24.8865 22.2849C23.0065 24.1149 20.3965 25.2749 17.5265 25.2749C12.0565 25.2749 7.6965 21.3449 6.8365 16.3749H8.9265C10.0865 16.3749 10.4465 15.4249 9.7165 14.4249L6.0965 9.4149C5.5265 8.6149 4.5965 8.6249 4.0065 9.4149Z",
        "geometry": {
          "width": 35.02322493761829,
          "height": 28.875
        }
      }
    },
    "circlebadge.2": {
      "bold": {
        "path": "M10.4727 20.9438C11.9627 20.9438 13.4027 20.6138 14.6927 20.0338C15.9527 20.6038 17.3327 20.9438 18.8027 20.9438C24.5027 20.9438 29.2727 16.1737 29.2727 10.4738C29.2727 4.7538 24.5027 0.0038 18.7827 0.0038C17.3227 0.0038 15.9427 0.3238 14.6927 0.9138C13.3827 0.3238 11.9527 0.0038 10.4627 0.0038C4.7427 0.0038 0.0027 4.7538 0.0027 10.4738C0.0027 16.1737 4.7627 20.9438 10.4727 20.9438ZM10.4727 17.4638C6.6827 17.4638 3.4727 14.2638 3.4727 10.4738C3.4727 6.6738 6.6727 3.4737 10.4627 3.4737C14.2627 3.4737 17.4627 6.6838 17.4627 10.4738C17.4627 14.2638 14.2627 17.4638 10.4727 17.4638ZM20.9427 10.4738C20.9427 7.8238 19.9027 5.3637 18.2227 3.5038C18.4127 3.4838 18.5927 3.4737 18.7827 3.4737C22.5827 3.4737 25.7827 6.6838 25.7827 10.4738C25.7827 14.2638 22.5827 17.4638 18.8027 17.4638C18.6027 17.4638 18.4127 17.4638 18.2427 17.4338C19.9027 15.5738 20.9427 13.1238 20.9427 10.4738Z",
        "geometry": {
          "width": 29.271484375,
          "height": 20.9453125
        }
      }
    },
    "circle.grid.2x1": {
      "bold": {
        "path": "M8.6127 17.2444C13.3527 17.2444 17.2227 13.3544 17.2227 8.6144C17.2227 3.8644 13.3527 0.0044 8.6127 0.0044C3.8527 0.0044 0.0027 3.8644 0.0027 8.6144C0.0027 13.3544 3.8527 17.2444 8.6127 17.2444ZM29.9527 17.2444C34.7027 17.2444 38.5827 13.3544 38.5827 8.6144C38.5827 3.8644 34.7027 0.0044 29.9527 0.0044C25.2127 0.0044 21.3427 3.8644 21.3427 8.6144C21.3427 13.3544 25.1927 17.2444 29.9527 17.2444ZM8.6127 13.8644C5.7327 13.8644 3.3627 11.5144 3.3627 8.6144C3.3627 5.7244 5.7327 3.3744 8.6127 3.3744C11.4827 3.3744 13.8627 5.7444 13.8627 8.6144C13.8627 11.4944 11.4827 13.8644 8.6127 13.8644ZM29.9527 13.8644C27.0727 13.8644 24.7227 11.5144 24.7227 8.6144C24.7227 5.7244 27.0727 3.3744 29.9527 3.3744C32.8427 3.3744 35.2027 5.7444 35.2027 8.6144C35.2027 11.4944 32.8427 13.8644 29.9527 13.8644Z",
        "geometry": {
          "width": 38.58203125,
          "height": 17.240234375
        }
      }
    },
    "heart": {
      "bold": {
        "path": "M0.0037 8.9843C0.0037 14.8443 4.9337 20.6943 12.4537 25.6043C13.0837 26.0143 13.7637 26.4143 14.2237 26.4143C14.6837 26.4143 15.3637 26.0143 15.9937 25.6043C23.5137 20.6943 28.4537 14.8443 28.4537 8.9843C28.4537 3.6143 24.7237 0.0043 20.1637 0.0043C17.4437 0.0043 15.4237 1.1943 14.2237 2.9143C13.0337 1.1943 11.0037 0.0043 8.2837 0.0043C3.7337 0.0043 0.0037 3.6143 0.0037 8.9843ZM3.7337 8.9443C3.7337 5.7843 5.8837 3.6143 8.7337 3.6143C11.0337 3.6143 12.2737 4.9243 13.1137 6.1143C13.4937 6.6743 13.8037 6.9043 14.2237 6.9043C14.6437 6.9043 14.9137 6.6743 15.3437 6.1143C16.2237 4.9243 17.4137 3.6143 19.7037 3.6143C22.5737 3.6143 24.7237 5.7843 24.7237 8.9443C24.7237 13.3543 20.2637 18.4543 14.4337 22.3243C14.3437 22.3843 14.2737 22.4343 14.2237 22.4343C14.1737 22.4343 14.1137 22.3843 14.0137 22.3243C8.1937 18.4543 3.7337 13.3543 3.7337 8.9443Z",
        "geometry": {
          "width": 28.451171875,
          "height": 26.4140625
        }
      }
    },
    "bell": {
      "bold": {
        "path": "M0.0007 21.8584C0.0007 23.2984 1.0207 24.2684 2.6707 24.2684H8.0407C8.1507 26.8684 10.4207 29.3984 13.9007 29.3984C17.3907 29.3984 19.6607 26.8784 19.7707 24.2684H25.1407C26.7707 24.2684 27.8107 23.2984 27.8107 21.8584C27.8107 20.2584 26.5807 18.9884 25.2507 17.8284C24.1707 16.8984 23.9707 15.1084 23.6807 12.6784C23.3507 7.8584 21.6607 4.4284 18.2007 3.1884C17.5707 1.3084 15.9807 -0.0016 13.9007 -0.0016C11.8307 -0.0016 10.2407 1.3084 9.6107 3.1884C6.1507 4.4284 4.4607 7.8584 4.1307 12.6784C3.8407 15.1084 3.6407 16.8984 2.5607 17.8284C1.2307 18.9884 0.0007 20.2584 0.0007 21.8584ZM4.3307 20.9884V20.8384C4.8807 20.4684 5.6307 19.8684 6.2307 19.1284C7.1007 18.0884 7.4907 15.7484 7.6707 13.2884C7.9207 8.4784 9.4907 6.7284 11.4607 6.1884C11.7707 6.1284 11.9607 5.9784 12.0007 5.5484C12.1107 4.2284 12.8107 3.4084 13.9007 3.4084C15.0007 3.4084 15.6907 4.2284 15.8007 5.5484C15.8507 5.9784 16.0407 6.1284 16.3507 6.1884C18.3207 6.7284 19.8907 8.4784 20.1207 13.2884C20.3007 15.7484 20.7307 18.0884 21.5707 19.1284C22.1807 19.8684 22.8507 20.4684 23.3907 20.8384V20.9884ZM11.4207 24.2684H16.3907C16.3007 25.7484 15.2807 26.7284 13.9007 26.7284C12.5207 26.7284 11.5107 25.7484 11.4207 24.2684Z",
        "geometry": {
          "width": 27.80859375,
          "height": 29.39453125
        }
      }
    },
    "gearshape": {
      "bold": {
        "path": "M13.8327 30.4616H16.6227C17.8927 30.4616 18.9227 29.6516 19.1927 28.4416L19.7027 26.2616L19.9327 26.1816L21.8327 27.3616C22.9027 28.0116 24.1827 27.8316 25.0727 26.9316L27.0027 25.0216C27.9027 24.0916 28.0527 22.8216 27.4027 21.7816L26.2327 19.8916L26.3027 19.6716L28.4627 19.1716C29.6727 18.8716 30.4627 17.8516 30.4627 16.6016V13.9216C30.4627 12.6616 29.6827 11.6316 28.4627 11.3316L26.3327 10.8116L26.2327 10.5916L27.4127 8.7116C28.0827 7.6716 27.9227 6.4016 27.0027 5.4516L25.0727 3.5416C24.2027 2.6416 22.9127 2.4616 21.8427 3.1216L19.9427 4.2816L19.7027 4.2016L19.1927 2.0216C18.9227 0.8116 17.8927 0.0016 16.6227 0.0016H13.8327C12.5627 0.0016 11.5527 0.8216 11.2627 2.0216L10.7627 4.2016L10.5127 4.2816L8.6127 3.1216C7.5427 2.4716 6.2627 2.6416 5.3827 3.5416L3.4627 5.4516C2.5527 6.4016 2.3927 7.6716 3.0527 8.7116L4.2227 10.5916L4.1427 10.8116L1.9927 11.3316C0.7827 11.6316 0.0027 12.6616 0.0027 13.9216V16.6016C0.0027 17.8516 0.7927 18.8716 1.9927 19.1716L4.1527 19.6716L4.2427 19.8916L3.0627 21.7816C2.3927 22.8216 2.5527 24.0916 3.4627 25.0216L5.3827 26.9316C6.2727 27.8316 7.5627 28.0116 8.6227 27.3616L10.5227 26.1816L10.7627 26.2616L11.2627 28.4416C11.5527 29.6516 12.5627 30.4616 13.8327 30.4616ZM14.3827 27.3716C14.1627 27.3716 14.0527 27.2616 14.0227 27.0716L13.2327 23.7316C12.3027 23.5616 11.3927 23.1716 10.5827 22.6416L7.6727 24.4416C7.5027 24.5516 7.3427 24.5416 7.1927 24.3916L6.0127 23.2116C5.8527 23.0616 5.8627 22.9016 5.9627 22.7316L7.7627 19.8216C7.2827 19.0316 6.9027 18.1416 6.7127 17.2116L3.3727 16.4316C3.1827 16.3916 3.0727 16.3016 3.0727 16.0616V14.4416C3.0727 14.1916 3.1827 14.0916 3.3727 14.0516L6.7127 13.2716C6.9227 12.3316 7.3027 11.4016 7.7527 10.6516L5.9627 7.7416C5.8527 7.5716 5.8427 7.4116 5.9927 7.2616L7.1827 6.1016C7.3427 5.9516 7.4827 5.9316 7.6727 6.0416L10.5727 7.8216C11.2427 7.3716 12.2627 6.9416 13.2327 6.7216L14.0227 3.3916C14.0527 3.2016 14.1627 3.0916 14.3827 3.0916H16.0827C16.3127 3.0916 16.4027 3.2016 16.4427 3.3916L17.2427 6.7416C18.2127 6.9416 19.1027 7.3416 19.8827 7.8216L22.7727 6.0616C22.9727 5.9516 23.1027 5.9616 23.2727 6.1116L24.4627 7.2716C24.6127 7.4416 24.5927 7.5916 24.4827 7.7616L22.7127 10.6516C23.1627 11.4016 23.5527 12.3316 23.7527 13.2616L27.0827 14.0516C27.2927 14.0916 27.3827 14.1916 27.3827 14.4416V16.0616C27.3827 16.3016 27.2727 16.3916 27.0827 16.4316L23.7527 17.2216C23.5527 18.1316 23.1727 19.0616 22.6927 19.8216L24.4827 22.7216C24.5827 22.8916 24.5927 23.0516 24.4327 23.2016L23.2527 24.3816C23.0927 24.5316 22.9427 24.5416 22.7727 24.4316L19.8827 22.6416C19.0627 23.1716 18.2527 23.5316 17.2427 23.7316L16.4427 27.0716C16.4027 27.2616 16.3127 27.3716 16.0827 27.3716ZM15.2327 20.3816C18.0627 20.3816 20.3727 18.0716 20.3727 15.2316C20.3727 12.4116 18.0627 10.1016 15.2327 10.1016C12.4027 10.1016 10.0727 12.4116 10.0727 15.2316C10.0727 18.0716 12.4027 20.3816 15.2327 20.3816ZM15.2327 17.6416C13.9227 17.6416 12.8427 16.5616 12.8427 15.2316C12.8427 13.9316 13.9227 12.8516 15.2327 12.8516C16.5127 12.8516 17.5927 13.9316 17.5927 15.2316C17.5927 16.5416 16.5127 17.6416 15.2327 17.6416Z",
        "geometry": {
          "width": 30.4609375,
          "height": 30.4609375
        }
      }
    },
    "ellipsis.circle": {
      "bold": {
        "path": "M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM8.1027 16.6286C9.3127 16.6286 10.2927 15.6386 10.2927 14.4386C10.2927 13.2386 9.3127 12.2486 8.1027 12.2486C6.9027 12.2486 5.9227 13.2386 5.9227 14.4386C5.9227 15.6386 6.9027 16.6286 8.1027 16.6286ZM14.4227 16.6286C15.6227 16.6286 16.5927 15.6386 16.5927 14.4386C16.5927 13.2386 15.6227 12.2486 14.4227 12.2486C13.2027 12.2486 12.2327 13.2386 12.2327 14.4386C12.2327 15.6386 13.2027 16.6286 14.4227 16.6286ZM20.7227 16.6286C21.9327 16.6286 22.9027 15.6386 22.9027 14.4386C22.9027 13.2386 21.9327 12.2486 20.7227 12.2486C19.5227 12.2486 18.5427 13.2386 18.5427 14.4386C18.5427 15.6386 19.5227 16.6286 20.7227 16.6286Z",
        "geometry": {
          "width": 28.875,
          "height": 28.888671875
        }
      }
    },
    "bag": {
      "bold": {
        "path": "M0.0037 24.9471C0.0037 28.0571 1.7137 29.7471 4.8237 29.7471H20.8937C23.7937 29.7471 25.4837 28.0571 25.4837 24.9471V10.8371C25.4837 7.7471 23.7737 6.0471 20.6537 6.0471H19.1137C19.0737 2.6771 16.2537 -0.0029 12.7437 -0.0029C9.2437 -0.0029 6.4237 2.6771 6.3737 6.0471H4.8237C1.7137 6.0471 0.0037 7.7371 0.0037 10.8371ZM9.6637 6.0471C9.7037 4.2971 10.9637 2.9271 12.7437 2.9271C14.5237 2.9271 15.7937 4.2971 15.8337 6.0471ZM3.5237 24.5271V11.2771C3.5237 10.1171 4.1137 9.5671 5.2137 9.5671H20.2737C21.3737 9.5671 21.9537 10.1171 21.9537 11.2771V24.5271C21.9537 25.6871 21.3737 26.2271 20.5037 26.2271H5.2137C4.1137 26.2271 3.5237 25.6871 3.5237 24.5271Z",
        "geometry": {
          "width": 25.484375,
          "height": 29.75
        }
      }
    },
    "party.popper": {
      "bold": {
        "path": "M13.2728 3.688C14.3028 3.688 15.1228 2.868 15.1228 1.858C15.1228 0.838 14.3028 -0.002 13.2728 -0.002C12.2328 -0.002 11.4328 0.838 11.4328 1.858C11.4328 2.868 12.2328 3.688 13.2728 3.688ZM21.9828 5.878C23.5928 5.878 24.8828 4.578 24.8828 2.968C24.8828 1.338 23.5928 0.068 21.9828 0.068C20.3528 0.068 19.0728 1.338 19.0728 2.968C19.0728 4.578 20.3528 5.878 21.9828 5.878ZM33.5128 4.078C34.3528 4.078 35.0428 3.388 35.0428 2.528C35.0428 1.668 34.3528 0.968 33.5128 0.968C32.6328 0.968 31.9528 1.668 31.9528 2.528C31.9528 3.388 32.6328 4.078 33.5128 4.078ZM29.1428 4.608L26.6028 7.148C26.1128 7.668 26.1128 8.488 26.6028 8.998C27.1128 9.498 27.9428 9.498 28.4528 9.008L30.9928 6.468C31.4828 5.958 31.4828 5.128 30.9928 4.608C30.4628 4.118 29.6428 4.128 29.1428 4.608ZM22.9728 27.128C25.0228 26.278 25.2328 24.368 24.5528 22.228C26.2328 22.208 27.9028 22.358 29.5828 22.668C30.3128 22.848 30.9628 22.148 30.9628 21.408C30.9628 20.698 30.3928 20.248 29.7328 20.098C27.6128 19.698 25.5128 19.568 23.3928 19.678C22.7228 18.528 21.9028 17.408 21.0628 16.448L25.6728 11.858C26.1228 11.378 26.1628 10.538 25.6728 10.038C25.1528 9.518 24.3228 9.558 23.8428 10.018L19.2328 14.598C18.2628 13.738 17.1528 12.888 16.0128 12.208C16.1228 10.128 15.9728 8.048 15.5828 5.958C15.4328 5.308 14.9928 4.748 14.2828 4.748C13.5628 4.748 12.8528 5.378 13.0128 6.128C13.3328 7.748 13.4828 9.388 13.4828 11.038C11.4328 10.388 9.5828 10.678 8.6128 12.798L0.3228 31.188C-0.8772 33.878 1.4328 36.148 4.0628 35.038ZM19.3828 10.388C20.2628 10.388 20.9428 9.698 20.9428 8.818C20.9428 7.988 20.2628 7.278 19.3828 7.278C18.5428 7.278 17.8428 7.968 17.8428 8.818C17.8428 9.698 18.5428 10.388 19.3828 10.388ZM28.7528 17.418C30.1428 17.418 31.2828 16.328 31.2828 14.928C31.2828 13.538 30.1628 12.398 28.7528 12.398C27.3528 12.398 26.2628 13.538 26.2628 14.928C26.2628 16.328 27.3528 17.418 28.7528 17.418ZM34.9028 16.858C35.9128 16.858 36.7528 16.048 36.7528 15.008C36.7528 13.988 35.9128 13.168 34.9028 13.168C33.8528 13.168 33.0428 13.988 33.0428 15.008C33.0428 16.048 33.8628 16.858 34.9028 16.858ZM11.2828 13.648C11.5928 13.318 12.3128 13.368 13.3028 13.808C13.2328 14.438 13.1428 15.078 13.0128 15.718C12.8528 16.478 13.5528 17.078 14.2728 17.088C14.9428 17.088 15.4328 16.588 15.5828 15.878C15.6128 15.668 15.6528 15.448 15.6928 15.248C16.2028 15.628 16.7228 16.068 17.2828 16.558L16.7028 17.128C16.2028 17.638 16.2128 18.468 16.7028 18.978C17.2128 19.468 18.0428 19.478 18.5528 18.978L19.1228 18.398C19.6328 18.948 20.0728 19.478 20.4528 19.988C20.2428 20.028 20.0428 20.068 19.8228 20.098C19.1228 20.258 18.6228 20.758 18.6228 21.408C18.6228 22.138 19.2328 22.828 19.9728 22.698C20.6328 22.568 21.2728 22.458 21.9328 22.398C22.3828 23.418 22.4328 24.168 22.1028 24.488C21.3728 25.248 18.4428 24.008 15.1028 20.658C11.7528 17.308 10.5128 14.378 11.2828 13.648ZM3.0928 31.728L9.4628 17.598C10.2428 19.238 11.5428 20.998 13.1528 22.618C14.7128 24.188 16.4328 25.448 18.0228 26.218L3.5528 32.228C3.1828 32.388 2.8928 32.138 3.0928 31.728ZM34.1528 24.018C35.1628 24.018 35.9828 23.198 35.9828 22.178C35.9828 21.148 35.1628 20.328 34.1528 20.328C33.1228 20.328 32.3028 21.148 32.3028 22.178C32.3028 23.198 33.1228 24.018 34.1528 24.018Z",
        "geometry": {
          "width": 36.749139892045925,
          "height": 35.328048033378394
        }
      }
    },
    "plus": {
      "bold": {
        "path": "M0.0037 11.7316C0.0037 12.8816 0.9337 13.8116 2.0737 13.8116H9.6637V21.3916C9.6637 22.5316 10.5837 23.4716 11.7337 23.4716C12.8837 23.4716 13.8037 22.5316 13.8037 21.3916V13.8116H21.3937C22.5337 13.8116 23.4637 12.8816 23.4637 11.7316C23.4637 10.5916 22.5337 9.6616 21.3937 9.6616H13.8037V2.0816C13.8037 0.9416 12.8837 0.0016 11.7337 0.0016C10.5837 0.0016 9.6637 0.9416 9.6637 2.0816V9.6616H2.0737C0.9337 9.6616 0.0037 10.5916 0.0037 11.7316Z",
        "geometry": {
          "width": 23.4609375,
          "height": 23.474609375
        }
      }
    },
    "minus": {
      "bold": {
        "path": "M2.0337 4.1419H21.3537C22.4537 4.1419 23.4037 3.2019 23.4037 2.0619C23.4037 0.9419 22.4537 0.0019 21.3537 0.0019H2.0337C0.9937 0.0019 0.0037 0.9419 0.0037 2.0619C0.0037 3.2019 0.9937 4.1419 2.0337 4.1419Z",
        "geometry": {
          "width": 23.40625,
          "height": 4.142578125
        }
      }
    },
    "checkmark.circle": {
      "bold": {
        "path": "M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM13.0027 20.9486C13.5627 20.9486 14.0727 20.6586 14.3927 20.1686L20.2627 11.0986C20.4827 10.7686 20.6327 10.4286 20.6327 10.0986C20.6327 9.2986 19.9227 8.7386 19.1527 8.7386C18.6527 8.7386 18.2127 9.0086 17.8827 9.5586L12.9727 17.4586L10.6927 14.6586C10.3527 14.2286 9.9827 14.0586 9.5327 14.0586C8.7327 14.0586 8.0927 14.6786 8.0927 15.4786C8.0927 15.8586 8.2127 16.1886 8.5027 16.5386L11.5627 20.1886C11.9627 20.6886 12.4327 20.9486 13.0027 20.9486Z",
        "geometry": {
          "width": 28.875,
          "height": 28.888671875
        }
      }
    },
    "chevron.left": {
      "bold": {
        "path": "M0.0041 12.5245C0.0041 13.1945 0.2441 13.7545 0.8041 14.3045L11.1441 24.4345C11.5641 24.8445 12.0541 25.0445 12.6641 25.0445C13.8641 25.0445 14.8641 24.0745 14.8641 22.8745C14.8641 22.2545 14.6041 21.7145 14.1541 21.2645L5.1441 12.5145L14.1541 3.7745C14.6041 3.3345 14.8641 2.7745 14.8641 2.1745C14.8641 0.9845 13.8641 0.0045 12.6641 0.0045C12.0541 0.0045 11.5641 0.2045 11.1441 0.6145L0.8041 10.7445C0.2441 11.2745 0.0141 11.8445 0.0041 12.5245Z",
        "geometry": {
          "width": 14.861328125,
          "height": 25.046875
        }
      }
    },
    "chevron.right": {
      "bold": {
        "path": "M14.8496 12.5245C14.8496 11.8445 14.5996 11.2745 14.0396 10.7445L3.7096 0.6145C3.2996 0.2045 2.7896 0.0045 2.1896 0.0045C0.9796 0.0045 -0.0004 0.9845 -0.0004 2.1745C-0.0004 2.7745 0.2496 3.3345 0.6996 3.7745L9.7096 12.5145L0.6996 21.2645C0.2496 21.7145 -0.0004 22.2545 -0.0004 22.8745C-0.0004 24.0745 0.9796 25.0445 2.1896 25.0445C2.7896 25.0445 3.2996 24.8445 3.7096 24.4345L14.0396 14.3045C14.6196 13.7545 14.8496 13.1945 14.8496 12.5245Z",
        "geometry": {
          "width": 14.84765625,
          "height": 25.046875
        }
      }
    },
    "chevron.up": {
      "bold": {
        "path": "M0.6137 11.1577C0.2037 11.5677 0.0037 12.0677 0.0037 12.6577C0.0037 13.8777 0.9737 14.8577 2.1737 14.8577C2.7737 14.8577 3.3337 14.6177 3.7837 14.1677L12.5337 5.1577L21.2737 14.1677C21.7137 14.6277 22.2837 14.8577 22.8737 14.8577C24.0737 14.8577 25.0437 13.8777 25.0437 12.6577C25.0437 12.0577 24.8437 11.5677 24.4337 11.1577L14.3137 0.8077C13.7837 0.2577 13.2037 -0.0023 12.5237 -0.0023C11.8537 -0.0023 11.2937 0.2477 10.7337 0.8077Z",
        "geometry": {
          "width": 25.046875,
          "height": 14.861328125
        }
      }
    },
    "chevron.down": {
      "bold": {
        "path": "M12.5237 14.8611C13.2037 14.8611 13.7837 14.6011 14.3137 14.0511L24.4337 3.7011C24.8437 3.2911 25.0437 2.8011 25.0437 2.2011C25.0437 0.9811 24.0737 0.0011 22.8737 0.0011C22.2837 0.0011 21.7237 0.2411 21.2737 0.7011L12.5337 9.7211L3.7837 0.7011C3.3337 0.2411 2.7737 0.0011 2.1737 0.0011C0.9737 0.0011 0.0037 0.9811 0.0037 2.2011C0.0037 2.7911 0.2037 3.2811 0.6137 3.7011L10.7337 14.0511C11.2937 14.6111 11.8537 14.8611 12.5237 14.8611Z",
        "geometry": {
          "width": 25.046875,
          "height": 14.861328125
        }
      }
    },
    "arrow.left": {
      "bold": {
        "path": "M0.0037 10.9806C0.0037 11.5106 0.2337 12.0706 0.6037 12.4406L9.5137 21.3306C9.9237 21.7406 10.4137 21.9406 10.8937 21.9406C12.0537 21.9406 12.8537 21.1406 12.8537 20.0706C12.8537 19.4806 12.5937 19.0006 12.2237 18.6506L9.1637 15.5906L6.1237 12.8006L9.1237 12.9606H24.5637C25.8037 12.9606 26.6237 12.1506 26.6237 10.9806C26.6237 9.7906 25.8037 9.0006 24.5637 9.0006H9.1237L6.1437 9.1606L9.1637 6.3706L12.2237 3.2906C12.5937 2.9406 12.8537 2.4706 12.8537 1.8706C12.8537 0.8106 12.0537 0.0006 10.8937 0.0006C10.4137 0.0006 9.9237 0.2006 9.5037 0.6306L0.6037 9.5106C0.2337 9.8806 0.0037 10.4406 0.0037 10.9806Z",
        "geometry": {
          "width": 26.619140625,
          "height": 21.943359375
        }
      }
    },
    "arrow.right": {
      "bold": {
        "path": "M26.6237 10.9806C26.6237 10.4406 26.3837 9.8806 26.0137 9.5106L17.1137 0.6306C16.6937 0.2006 16.2037 0.0006 15.7237 0.0006C14.5637 0.0006 13.7637 0.8106 13.7637 1.8706C13.7637 2.4706 14.0237 2.9406 14.3937 3.2906L17.4637 6.3706L20.4837 9.1606L17.5037 9.0006H2.0537C0.8237 9.0006 0.0037 9.7906 0.0037 10.9806C0.0037 12.1506 0.8237 12.9606 2.0537 12.9606H17.5037L20.4937 12.8006L17.4637 15.5906L14.3937 18.6506C14.0237 19.0006 13.7637 19.4806 13.7637 20.0706C13.7637 21.1406 14.5637 21.9406 15.7237 21.9406C16.2037 21.9406 16.6937 21.7406 17.1037 21.3306L26.0137 12.4406C26.3837 12.0706 26.6237 11.5106 26.6237 10.9806Z",
        "geometry": {
          "width": 26.619140625,
          "height": 21.943359375
        }
      }
    },
    "arrow.up": {
      "bold": {
        "path": "M10.9637 26.1851C12.1537 26.1851 12.9437 25.3651 12.9437 24.1351V8.9551L12.8237 5.9851L15.5737 9.1651L18.6437 12.2251C19.0137 12.5951 19.4837 12.8351 20.0737 12.8351C21.1337 12.8351 21.9437 12.0451 21.9437 10.9251C21.9437 10.4051 21.7337 9.9251 21.3237 9.5051L12.4237 0.6051C12.0537 0.2151 11.5137 -0.0049 10.9637 -0.0049C10.4337 -0.0049 9.8737 0.2151 9.5037 0.6051L0.6137 9.5051C0.2037 9.9251 0.0037 10.4051 0.0037 10.9251C0.0037 12.0451 0.8037 12.8351 1.8737 12.8351C2.4737 12.8351 2.9437 12.5951 3.2937 12.2251L6.3737 9.1651L9.1237 5.9851L8.9837 8.9551V24.1351C8.9837 25.3651 9.7937 26.1851 10.9637 26.1851Z",
        "geometry": {
          "width": 21.943359375,
          "height": 26.181640625
        }
      }
    },
    "arrow.down": {
      "bold": {
        "path": "M10.9637 -0.0049C9.7937 -0.0049 8.9837 0.8251 8.9837 2.0551V17.2251L9.1237 20.1951L6.3737 17.0251L3.2937 13.9551C2.9437 13.5851 2.4737 13.3451 1.8737 13.3451C0.8037 13.3451 0.0037 14.1351 0.0037 15.2551C0.0037 15.7751 0.2037 16.2551 0.6137 16.6751L9.5037 25.5851C9.8737 25.9651 10.4337 26.1851 10.9637 26.1851C11.5137 26.1851 12.0537 25.9651 12.4237 25.5851L21.3237 16.6751C21.7337 16.2551 21.9437 15.7751 21.9437 15.2551C21.9437 14.1351 21.1337 13.3451 20.0737 13.3451C19.4837 13.3451 19.0137 13.5851 18.6437 13.9551L15.5737 17.0251L12.8237 20.1951L12.9437 17.2251V2.0551C12.9437 0.8251 12.1537 -0.0049 10.9637 -0.0049Z",
        "geometry": {
          "width": 21.943359375,
          "height": 26.181640625
        }
      }
    },
    "arrow.up.backward.square": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8437 16.9277C9.6637 16.9277 10.1837 16.3477 10.1837 15.4377V13.5777L9.9837 11.8777L11.6037 13.7177L15.9437 18.0477C16.2837 18.3777 16.6637 18.5277 17.1137 18.5277C17.9637 18.5277 18.6337 17.9277 18.6337 17.0177C18.6337 16.6077 18.4537 16.1977 18.1537 15.9177L13.7937 11.5377L11.9337 9.9077L13.5537 10.1277H15.5437C16.4437 10.1277 17.0337 9.6077 17.0337 8.7877C17.0337 7.9677 16.4437 7.4677 15.5337 7.4677H9.2937C8.1937 7.4677 7.5037 8.0677 7.5037 9.2277V15.4377C7.5037 16.3277 8.0237 16.9277 8.8437 16.9277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "arrow.up.right.square": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM17.3037 16.9277C18.1337 16.9277 18.6337 16.3277 18.6337 15.4377V9.2277C18.6337 8.0677 17.9637 7.4677 16.8437 7.4677H10.6137C9.7037 7.4677 9.1237 7.9677 9.1237 8.7877C9.1237 9.6077 9.7037 10.1277 10.6137 10.1277H12.6037L14.2037 9.9077L12.3637 11.5377L7.9937 15.9177C7.6937 16.1977 7.5037 16.6077 7.5037 17.0177C7.5037 17.9277 8.1937 18.5277 9.0337 18.5277C9.4837 18.5277 9.8537 18.3777 10.2137 18.0477L14.5337 13.7177L16.1637 11.8777L15.9737 13.5777V15.4377C15.9737 16.3477 16.4837 16.9277 17.3037 16.9277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "arrow.left.arrow.right": {
      "bold": {
        "path": "M0.5854 7.4328C-0.2046 8.1928 -0.1946 9.3928 0.5854 10.1428L7.6454 17.0028C7.9854 17.3528 8.5054 17.5728 8.9754 17.5728C10.0354 17.5728 10.7754 16.8128 10.7754 15.7628C10.7754 15.2728 10.6154 14.8328 10.2554 14.4928L7.3754 11.7128L5.9854 10.5428L8.5054 10.6128H25.4554C26.4954 10.6128 27.2754 9.8328 27.2754 8.7928C27.2754 7.7428 26.4954 6.9628 25.4554 6.9628H8.5054L5.9854 7.0228L7.3754 5.8528L10.2554 3.0728C10.6154 2.7528 10.7754 2.3128 10.7754 1.8028C10.7754 0.7528 10.0354 0.0028 8.9754 0.0028C8.5054 0.0028 7.9854 0.2228 7.6454 0.5628ZM26.6854 26.1128C27.4854 25.3628 27.4654 24.1628 26.6854 23.4028L19.6354 16.5428C19.2954 16.2028 18.7754 15.9828 18.3054 15.9828C17.2454 15.9828 16.5054 16.7328 16.5054 17.7828C16.5054 18.2828 16.6654 18.7128 17.0254 19.0628L19.9054 21.8328L21.2854 23.0128L18.7754 22.9428H1.8354C0.7854 22.9428 0.0054 23.7228 0.0054 24.7628C0.0054 25.8128 0.7854 26.5928 1.8354 26.5928H18.7754L21.2854 26.5228L19.9054 27.7028L17.0254 30.4728C16.6654 30.8028 16.5054 31.2428 16.5054 31.7428C16.5054 32.8028 17.2454 33.5528 18.3054 33.5528C18.7754 33.5528 19.2954 33.3328 19.6354 32.9928Z",
        "geometry": {
          "width": 27.278830884007853,
          "height": 33.55078125
        }
      }
    },
    "arrow.uturn.left": {
      "bold": {
        "path": "M26.7837 17.3115C26.7837 11.5215 22.8837 7.5515 16.7337 7.5515H9.1037L6.0137 7.7015L8.0937 5.9915L10.8537 3.2915C11.2237 2.9415 11.4737 2.5015 11.4737 1.8915C11.4737 0.8115 10.7037 0.0015 9.5537 0.0015C9.0537 0.0015 8.5337 0.2215 8.1337 0.6115L0.5837 8.0615C0.2237 8.4315 0.0037 8.9915 0.0037 9.5315C0.0037 10.0715 0.2237 10.6215 0.5837 10.9915L8.1337 18.4415C8.5337 18.8415 9.0537 19.0615 9.5537 19.0615C10.7037 19.0615 11.4737 18.2515 11.4737 17.1715C11.4737 16.5615 11.2237 16.1215 10.8537 15.7615L8.0937 13.0815L6.0137 11.3715L9.1037 11.5115H16.5937C20.5537 11.5115 22.9037 13.8815 22.9037 17.2315C22.9037 20.5715 20.5537 22.9815 16.5937 22.9815H13.3537C12.1937 22.9815 11.3437 23.8615 11.3437 24.9515C11.3437 26.0615 12.2137 26.9315 13.3537 26.9315H16.8537C22.9437 26.9315 26.7837 23.1615 26.7837 17.3115Z",
        "geometry": {
          "width": 26.783203125,
          "height": 26.93359375
        }
      }
    }
  }
}
</file>

<file path="dieter/scripts/build-icons.mjs">
// AUTO-GENERATED BUILD SCRIPT PER SPEC
import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import url from 'url';

const __dirname = path.dirname(url.fileURLToPath(import.meta.url));
const ROOT = path.resolve(__dirname, '..');
const SRC_SVG_DIR = path.join(ROOT, 'icons', 'svg');
const DIST_DIR = path.join(ROOT, 'dist');
const DIST_ICONS_DIR = path.join(DIST_DIR, 'icons');
const DIST_INDEX_D_TS = path.join(DIST_DIR, 'icons.d.ts');
const DIST_INDEX_JS = path.join(DIST_DIR, 'icons.js');

fs.mkdirSync(DIST_ICONS_DIR, { recursive: true });

function optimizeOrCopy(inPath, outPath) {
  try {
    execSync(`npx --yes svgo -q -o "${outPath}" "${inPath}"`, { stdio: 'ignore' });
  } catch {
    fs.copyFileSync(inPath, outPath);
  }
}

function toIconName(file) {
  return path.basename(file).replace(/\.svg$/i, '').replace(/[_\s]+/g, '-').toLowerCase();
}

if (!fs.existsSync(SRC_SVG_DIR)) {
  console.error('[dieter:icons] Missing icons/svg folder.');
  process.exit(1);
}

const files = fs.readdirSync(SRC_SVG_DIR).filter(f => f.toLowerCase().endsWith('.svg'));
if (files.length === 0) {
  console.error('[dieter:icons] No SVGs found in icons/svg. Aborting.');
  process.exit(1);
}

const registry = [];
for (const f of files) {
  const name = toIconName(f);
  const src = path.join(SRC_SVG_DIR, f);
  const out = path.join(DIST_ICONS_DIR, `${name}.svg`);
  optimizeOrCopy(src, out);
  registry.push({ name, path: `/dieter/icons/${name}.svg` });
}

const union = registry.map(r => `'${r.name}'`).sort().join(' | ') || 'never';
const dts = `// AUTO-GENERATED. DO NOT EDIT.
export type IconName = ${union};
export type IconEntry = { name: IconName; path: string };
export declare const registry: ReadonlyArray<IconEntry>;
export declare function iconPath(name: IconName): string;
`;
fs.writeFileSync(DIST_INDEX_D_TS, dts, 'utf8');

const js = `// AUTO-GENERATED. DO NOT EDIT.
export const registry = ${JSON.stringify(registry)};
export function iconPath(name) {
  const hit = registry.find(r => r.name === name);
  if (!hit) throw new Error(` + "`" + `@ck/dieter: unknown icon "\${name}"` + "`" + `);
  return hit.path;
}
`;
fs.writeFileSync(DIST_INDEX_JS, js, 'utf8');

console.log(`[dieter:icons] Built ${registry.length} icons → ${DIST_ICONS_DIR}`);
</file>

<file path="dieter/tokens/tokens.css">
:root {
  /* typography (Inter first) */
  --font-ui: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, sans-serif;

  /* base sizes */
  --fs-body: 1rem;        /* 16px default body */
  --fs-ui: 0.9375rem;     /* 15px default UI */
  --lh-body: 1.5;

  /* size scale */
  --fs-10: 0.625rem;      /* 10px (labels only) */
  --fs-11: 0.6875rem;     /* 11px (labels only) */
  --fs-12: 0.75rem;       /* 12px */
  --fs-14: 0.875rem;      /* 14px */
  --fs-15: 0.9375rem;     /* 15px */
  --fs-16: 1rem;          /* 16px */
  --fs-18: 1.125rem;      /* 18px */
  --fs-20: 1.25rem;       /* 20px */
  --fs-24: 1.5rem;        /* 24px */
  --fs-32: 2rem;          /* 32px */
  --fs-fluid-title: clamp(1.5rem, 1.1rem + 1.6vw, 3rem);

  /* line-heights */
  --lh-tight: 1.25;
  --lh-normal: 1.5;
  --lh-loose: 1.75;

  /* spacing (4px grid) */
  --space-1: 0.25rem;   /* 4px */
  --space-2: 0.5rem;    /* 8px */
  --space-3: 0.75rem;   /* 12px */
  --space-4: 1rem;      /* 16px */
  --space-5: 1.25rem;   /* 20px */
  --space-6: 1.5rem;    /* 24px */
  --space-7: 1.75rem;   /* 28px */
  --space-8: 2rem;      /* 32px */
  --space-9: 2.25rem;   /* 36px */
  --space-10: 2.5rem;   /* 40px */

  /* base colors (Apple-like vibe) */
  --color-bg: #ffffff;
  --color-surface: #f6f7f9;
  --color-text: #0b0b0f;
  --color-text-muted: rgba(11,11,15,0.56);
  --color-border: rgba(10,10,12,0.16);
  --color-accent: #0a84ff;   /* primary accent */

  /* role colors (semantic) */
  --role-primary-bg: var(--color-accent);
  --role-primary-text: #ffffff;

  --role-success-bg: #34c759;
  --role-success-text: #0b0b0f;

  --role-warn-bg: #ff9f0a;
  --role-warn-text: #0b0b0f;

  --role-danger-bg: #ff3b30;
  --role-danger-text: #ffffff;

  --role-surface-bg: var(--color-surface);
  --role-surface-text: var(--color-text);
  --role-border: var(--color-border);

  /* state layers (opacity overlays) */
  --state-hover-alpha-on-surface: 0.06;
  --state-active-alpha-on-surface: 0.10;
  --state-hover-alpha-on-primary: 0.12;
  --state-active-alpha-on-primary: 0.18;

  /* accessibility tokens */
  --focus-ring-width: 2px;
  --focus-ring-color: var(--color-accent);
  --focus-ring-offset: 2px;
  --min-touch-target: 2.75rem;        /* 44px */
  --kbd-bg: #111;
  --kbd-text: #fff;

  /* high contrast helpers */
  --hc-focus-ring-color: #000;
  --hc-border: #000;
  --hc-link: #0042cc;

  /* radius */
  --radius-4: 0.5rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: #0e0f13;
    --color-surface: #14161b;
    --color-text: #f5f6f8;
    --color-text-muted: rgba(245,246,248,0.72);
    --color-border: rgba(250,250,255,0.18);

    --state-hover-alpha-on-surface: 0.08;
    --state-active-alpha-on-surface: 0.12;
    --state-hover-alpha-on-primary: 0.10;
    --state-active-alpha-on-primary: 0.16;

    --kbd-bg: #eee;
    --kbd-text: #111;
  }
}

:root[data-theme="hc"] {
  --color-bg: #ffffff;
  --color-surface: #ffffff;
  --color-text: #000000;
  --color-text-muted: #1a1a1a;
  --color-border: #1a1a1a;
  --color-accent: #0042cc;

  --role-primary-bg: var(--color-accent);
  --role-primary-text: #ffffff;
  --role-success-bg: #006e2a;
  --role-success-text: #ffffff;
  --role-warn-bg: #a65e00;
  --role-warn-text: #ffffff;
  --role-danger-bg: #8c0000;
  --role-danger-text: #ffffff;

  --state-hover-alpha-on-surface: 0.10;
  --state-active-alpha-on-surface: 0.16;
  --state-hover-alpha-on-primary: 0.14;
  --state-active-alpha-on-primary: 0.22;

  --focus-ring-color: var(--hc-focus-ring-color);
  --role-border: var(--hc-border);
}

/* Typography utilities */
.text-10 { font: 500 var(--fs-10)/var(--lh-tight) var(--font-ui); letter-spacing: 0.02em; }
.text-11 { font: 500 var(--fs-11)/var(--lh-tight) var(--font-ui); letter-spacing: 0.02em; }
.text-12 { font: 500 var(--fs-12)/var(--lh-tight) var(--font-ui); }
.text-14 { font: 400 var(--fs-14)/var(--lh-normal) var(--font-ui); }
.text-15 { font: 400 var(--fs-15)/var(--lh-normal) var(--font-ui); }
.text-16 { font: 400 var(--fs-16)/var(--lh-normal) var(--font-ui); }
.text-18 { font: 500 var(--fs-18)/var(--lh-normal) var(--font-ui); }
.text-20 { font: 600 var(--fs-20)/var(--lh-normal) var(--font-ui); }
.text-24 { font: 600 var(--fs-24)/var(--lh-tight) var(--font-ui); }
.text-32 { font: 700 var(--fs-32)/var(--lh-tight) var(--font-ui); }
.text-title-fluid { font: 700 var(--fs-fluid-title)/1.15 var(--font-ui); }

/* Spacing utilities */
.m-1{margin:var(--space-1)}.m-2{margin:var(--space-2)}.m-3{margin:var(--space-3)}.m-4{margin:var(--space-4)}.m-5{margin:var(--space-5)}.m-6{margin:var(--space-6)}.m-7{margin:var(--space-7)}.m-8{margin:var(--space-8)}.m-9{margin:var(--space-9)}.m-10{margin:var(--space-10)}
.p-1{padding:var(--space-1)}.p-2{padding:var(--space-2)}.p-3{padding:var(--space-3)}.p-4{padding:var(--space-4)}.p-5{padding:var(--space-5)}.p-6{padding:var(--space-6)}.p-7{padding:var(--space-7)}.p-8{padding:var(--space-8)}.p-9{padding:var(--space-9)}.p-10{padding:var(--space-10)}
.mx-1{margin-left:var(--space-1);margin-right:var(--space-1)}.mx-2{margin-left:var(--space-2);margin-right:var(--space-2)}.mx-3{margin-left:var(--space-3);margin-right:var(--space-3)}.mx-4{margin-left:var(--space-4);margin-right:var(--space-4)}.mx-5{margin-left:var(--space-5);margin-right:var(--space-5)}.mx-6{margin-left:var(--space-6);margin-right:var(--space-6)}.mx-7{margin-left:var(--space-7);margin-right:var(--space-7)}.mx-8{margin-left:var(--space-8);margin-right:var(--space-8)}.mx-9{margin-left:var(--space-9);margin-right:var(--space-9)}.mx-10{margin-left:var(--space-10);margin-right:var(--space-10)}
.my-1{margin-top:var(--space-1);margin-bottom:var(--space-1)}.my-2{margin-top:var(--space-2);margin-bottom:var(--space-2)}.my-3{margin-top:var(--space-3);margin-bottom:var(--space-3)}.my-4{margin-top:var(--space-4);margin-bottom:var(--space-4)}.my-5{margin-top:var(--space-5);margin-bottom:var(--space-5)}.my-6{margin-top:var(--space-6);margin-bottom:var(--space-6)}.my-7{margin-top:var(--space-7);margin-bottom:var(--space-7)}.my-8{margin-top:var(--space-8);margin-bottom:var(--space-8)}.my-9{margin-top:var(--space-9);margin-bottom:var(--space-9)}.my-10{margin-top:var(--space-10);margin-bottom:var(--space-10)}
.px-1{padding-left:var(--space-1);padding-right:var(--space-1)}.px-2{padding-left:var(--space-2);padding-right:var(--space-2)}.px-3{padding-left:var(--space-3);padding-right:var(--space-3)}.px-4{padding-left:var(--space-4);padding-right:var(--space-4)}.px-5{padding-left:var(--space-5);padding-right:var(--space-5)}.px-6{padding-left:var(--space-6);padding-right:var(--space-6)}.px-7{padding-left:var(--space-7);padding-right:var(--space-7)}.px-8{padding-left:var(--space-8);padding-right:var(--space-8)}.px-9{padding-left:var(--space-9);padding-right:var(--space-9)}.px-10{padding-left:var(--space-10);padding-right:var(--space-10)}
.py-1{padding-top:var(--space-1);padding-bottom:var(--space-1)}.py-2{padding-top:var(--space-2);padding-bottom:var(--space-2)}.py-3{padding-top:var(--space-3);padding-bottom:var(--space-3)}.py-4{padding-top:var(--space-4);padding-bottom:var(--space-4)}.py-5{padding-top:var(--space-5);padding-bottom:var(--space-5)}.py-6{padding-top:var(--space-6);padding-bottom:var(--space-6)}.py-7{padding-top:var(--space-7);padding-bottom:var(--space-7)}.py-8{padding-top:var(--space-8);padding-bottom:var(--space-8)}.py-9{padding-top:var(--space-9);padding-bottom:var(--space-9)}.py-10{padding-top:var(--space-10);padding-bottom:var(--space-10)}

.muted { color: var(--color-text-muted); }

/* Color role utilities */
.bg-surface { background: var(--role-surface-bg); color: var(--role-surface-text); }
.bg-primary { background: var(--role-primary-bg); color: var(--role-primary-text); }
.bg-success { background: var(--role-success-bg); color: var(--role-success-text); }
.bg-warn { background: var(--role-warn-bg); color: var(--role-warn-text); }
.bg-danger { background: var(--role-danger-bg); color: var(--role-danger-text); }
.border-default { border: 1px solid var(--role-border); }

/* State layer helpers */
.state-surface:hover { background: linear-gradient(0deg, rgba(0,0,0,var(--state-hover-alpha-on-surface)), rgba(0,0,0,var(--state-hover-alpha-on-surface))), var(--role-surface-bg); }
.state-surface:active { background: linear-gradient(0deg, rgba(0,0,0,var(--state-active-alpha-on-surface)), rgba(0,0,0,var(--state-active-alpha-on-surface))), var(--role-surface-bg); }
.state-primary:hover { background: linear-gradient(0deg, rgba(255,255,255,var(--state-hover-alpha-on-primary)), rgba(255,255,255,var(--state-hover-alpha-on-primary))), var(--role-primary-bg); }
.state-primary:active { background: linear-gradient(0deg, rgba(255,255,255,var(--state-active-alpha-on-primary)), rgba(255,255,255,var(--state-active-alpha-on-primary))), var(--role-primary-bg); }

/* Demo components */
.diet-surface { background: var(--color-surface); border: 1px solid var(--color-border); border-radius: var(--radius-4); padding: var(--space-6); }
.diet-btn {
  font: 500 var(--fs-ui)/1 var(--font-ui);
  color: #fff;
  background: var(--color-accent);
  border: 0;
  border-radius: var(--radius-4);
  padding: 0.625rem 1rem;
  min-height: var(--min-touch-target);
  cursor: pointer;
}
.diet-btn:focus-visible { outline: var(--focus-ring-width) solid var(--focus-ring-color); outline-offset: var(--focus-ring-offset); }
.diet-btn:hover { background: linear-gradient(0deg, rgba(255,255,255,var(--state-hover-alpha-on-primary)), rgba(255,255,255,var(--state-hover-alpha-on-primary))), var(--color-accent); }
.diet-btn:active { background: linear-gradient(0deg, rgba(255,255,255,var(--state-active-alpha-on-primary)), rgba(255,255,255,var(--state-active-alpha-on-primary))), var(--color-accent); }

.diet-link { color: var(--color-accent); text-decoration: none; }
.diet-link:hover { text-decoration: underline; }
.diet-link:focus-visible { outline: var(--focus-ring-width) solid var(--focus-ring-color); outline-offset: var(--focus-ring-offset); }

.kbd {
  display:inline-block; padding: 0.1rem 0.35rem; border-radius: 0.35rem;
  background: var(--kbd-bg); color: var(--kbd-text);
  font: 600 var(--fs-12)/1 var(--font-ui);
}

/* Visually hidden (screen-reader only) */
.sr-only {
  position:absolute !important; width:1px !important; height:1px !important;
  padding:0 !important; margin:-1px !important; overflow:hidden !important;
  clip:rect(0,0,0,0) !important; white-space:nowrap !important; border:0 !important;
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  * { animation-duration: 0.001ms !important; animation-iteration-count: 1 !important; transition-duration: 0.001ms !important; scroll-behavior: auto !important; }
}
</file>

<file path="dieter/design-system.md">
# Dieter Design System — Authoritative Rules (v0)

## Scope
Dieter is Clickeen’s presentation layer. It provides:
- Tokens (colors, typography, spacing, states, a11y)
- Theme contracts (light, dark, high-contrast via `data-theme="hc"`)
- Primitive components styled **only** with tokens
- Accessibility, performance, and responsiveness guardrails

## Non-Negotiables
1) **Tokens-Only**: No raw hex/px/hard-coded values in component CSS. Always use CSS variables from `dieter/tokens/tokens.css`.
2) **Font Source**: Inter must be loaded **only** from Google Fonts. No `rsms.me`, no Roboto/Ubuntu.
3) **Accessibility First**:
   - Visible `:focus-visible` rings using focus tokens.
   - 44px min touch targets for interactive controls.
   - Labels linked to controls; `aria-describedby` for help/error.
   - Inline errors + summary patterns for validation; use appropriate live regions.
4) **Theming Safety**:
   - Light/Dark auto with `prefers-color-scheme`.
   - High-contrast via `data-theme="hc"` on `<html>` or `<body>`.
   - No visible flash during theme changes; state layers use tokens.
5) **Performance & DX**:
   - Minimal CSS; no unused declarations.
   - REM-based sizing; no layout thrash.
   - Keep components dependency-free (tokens-only CSS).

## Tokens (Contract)
Source of truth: `dieter/tokens/tokens.css`

- **Typography**: REM scale with utilities (`.text-10` … `.text-32`, `.text-title-fluid`).
- **Spacing**: 4px grid via `--space-*` and utilities (`.p-*`, `.m-*`, `.px-*`, `.py-*`, `.mx-*`, `.my-*`).
- **Colors (Semantic Roles)**: `--color-text-*`, `--color-surface-*`, `--color-border-*`, `--color-primary-*`, `--color-success-*`, `--color-danger-*`, etc.
- **States / Layers**: hover/active/disabled overlays via tokens; no ad-hoc alpha hacks.
- **Focus / A11y**: `--focus-ring-width`, `--focus-ring-offset`, `--focus-ring-color`; reduced motion support.
- **Theming**: overrides for `:root`, `@media (prefers-color-scheme: dark)`, and `[data-theme="hc"]`.

If a needed value is missing, **add a new token** (with naming rationale) before using it.

## Components (v0, tokens-only)
- Button: sizes sm/md/lg; hover/active/focus states via tokens; min-height ≥ 44px.
- Input / Textarea: label/help/error wiring; `aria-invalid`; tokens for borders/backgrounds.
- Select (native): tokens-only; accessible focus; min-height ≥ 44px.
- Checkbox/Radio (native): labeled rows ≥ 44px; radiogroup via `<fieldset><legend>…`.
- Form Group & Validation: label/field layout; inline and summary patterns; live region semantics.

**Do not** introduce JS or third-party CSS here. Components remain CSS+HTML primitives using tokens.

## Playground & Verification
- `playground.html` demonstrates tokens, utilities, themes, and components.
- Theme toggles (Light/Dark/HC) and REM scaling control (14–20) are provided.
- Use the playground to verify regressions visually before committing.

## Contribution Rules
1) Never edit generated/third-party files (none today).
2) Only modify files listed in task prompts; no drive-by refactors.
3) Commit small and atomic; message explains **why** (`feat(dieter): …`).
4) Add an *Acceptance Note* in PRs: what changed, where, impact.

## Future Contracts (Placeholders, do not implement yet)
- `tokens.json` mirror + typed exports
- `components/index.ts` for prop contracts
- ESLint/Stylelint rules to enforce tokens-only usage
- Ladle/Docs site for internal browsing (post-foundation)

## Font Source (canonical)
Load Inter **only** from Google Fonts:
```html
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
</file>

<file path="dieter/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>Dieter — Components</title>
    <meta name="robots" content="noindex,nofollow"/>

    <!-- Inter (Google Fonts) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Dieter tokens (root-absolute) -->
    <link rel="stylesheet" href="/tokens/tokens.css">

    <!-- Studio chrome (cache-busted) -->
    <link rel="stylesheet" href="/studio/studio.css?v=3"/>
  </head>
  <body>
    <header class="studio-topbar">
      <div class="studio-topbar__title">Dieter — Components</div>
      <div class="studio-topbar__actions">
        <button class="studio-btn js-theme" data-theme="light" aria-pressed="false">Light</button>
        <button class="studio-btn js-theme" data-theme="dark" aria-pressed="false">Dark</button>
        <button class="studio-btn js-theme" data-theme="hc" aria-pressed="false">HC</button>
        <button id="js-theme-reset" class="studio-btn" aria-pressed="false">Reset</button>
      </div>
    </header>

    <main class="studio-layout">
      <!-- Left panel: component list -->
      <aside id="studio-left" class="studio-panel">
        <div class="studio-panel__header">
          <span>Components</span>
          <button id="studio-left-toggle" class="studio-btn" style="margin-left:auto">Collapse</button>
        </div>
        <div class="studio-panel__body">
          <div id="studio-list" class="studio-list"></div>
        </div>
      </aside>

      <!-- Center: preview canvas -->
      <section class="studio-panel studio-canvas">
        <div class="studio-panel__header">
          <span>Preview</span>
          <div class="studio-canvas__toolbar" style="margin-left:auto">
            <button id="js-view-desktop" class="studio-btn" aria-pressed="true">Desktop</button>
            <button id="js-view-mobile" class="studio-btn" aria-pressed="false">Mobile</button>
          </div>
        </div>
        <div class="studio-panel__body">
          <iframe id="studio-frame" class="studio-frame" src="/components.html" title="Dieter Components"></iframe>
        </div>
      </section>

      <!-- Right: CSS editor -->
      <aside id="studio-right" class="studio-panel">
        <div class="studio-panel__header">
          <span>CSS Editor</span>
          <button id="studio-copy" class="studio-iconbtn" aria-label="Copy CSS" title="Copy CSS">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><rect x="9" y="9" width="13" height="13" rx="2"/><path d="M5 15V5a2 2 0 0 1 2-2h10"/></svg>
          </button>
          <button id="studio-right-toggle" class="studio-btn" style="margin-left:8px">Collapse</button>
        </div>
        <div class="studio-panel__body">
          <textarea id="studio-css" class="studio-editor" placeholder="/* Type CSS to inject into the preview iframe */"></textarea>
          <div class="studio-help">Edits here are injected into the iframe for quick experimentation.</div>
        </div>
      </aside>
    </main>

    <script src="/studio/studio.js?v=3"></script>
  </body>
</html>
</file>

<file path="dieter/package.json">
{
  "name": "@ck/dieter",
  "version": "0.1.0",
  "private": true,
  "packageManager": "pnpm@10.15.1",
  "main": "index.html",
  "scripts": {
    "build": "node ../scripts/build-dieter.js && node ../scripts/copy-dieter-assets.js",
    "prepare": "pnpm run build"
  }
}
</file>

<file path="dieter/tokens.css">
@import './tokens/tokens.css';
</file>

<file path="dieter/tsconfig.json">
{
  "compilerOptions": {
    "strict": true,
    "noEmit": true,
    "skipLibCheck": true,
    "module": "esnext",
    "target": "es2022",
    "moduleResolution": "bundler",
    "verbatimModuleSyntax": true,
    "baseUrl": ".",
    "types": []
  },
  "include": ["components/index.ts"]
}
</file>

<file path="documentation/systems/_template.md">
# System: <Codename> — <Purpose>

## Identity
- Tier: Core|Supporting
- Owner: Platform
- Status: Active

## Interfaces
- Inputs:
- Outputs:

## Dependencies
- Depends on:
- Used by:

## Deployment
- Location:
- Notes:

## Rules
- Key constraints:

## Links
- Back: ../..

---
</file>

<file path="documentation/systems/atlas.md">
# System: Atlas — Config & Cache Layer
## Identity
- Tier: Core
- Purpose: Edge cache for widget configs, decouple Venice from Michael
## Interfaces
- KV lookups, cache invalidations
## Dependencies
- Depends on: Michael
- Used by: Venice
## Deployment
- c-keen-embed (edge functions + KV)
## Rules
- Stale-while-revalidate
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/berlin.md">
# System: Berlin — Observability & Security
## Identity
- Tier: Supporting
- Purpose: Logs, metrics, rate limiting, Sentry
## Interfaces
- Logging sinks, metrics exporters, rate limit middleware
## Dependencies
- Used by: All services
## Deployment
- c-keen-app, c-keen-embed
## Rules
- PII-safe logs, enforce rate limits at edge where possible
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/bob.md">
# System: Bob — Widget Builder (includes Studio)
## Identity
- Tier: Core
- Purpose: Configuration UI, live preview, inline editing
## Interfaces
- Builder UI; Studio host shell at /studio (iframe loads /dieter/components.html)
## Dependencies
- Depends on: Paris, Michael, Oslo, Copenhagen
## Deployment
- c-keen-app
## Rules
- Studio shell imports NO Dieter CSS directly; only the iframe does
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/cairo.md">
# System: Cairo — Custom Domains
## Identity
- Tier: Supporting
- Purpose: Custom domain management
## Interfaces
- Domain provisioning APIs
## Dependencies
- Used by: Site, Bob
## Deployment
- c-keen-app
## Rules
- Enforce HTTPS; auto-renew certificates
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/copenhagen.md">
# System: Copenhagen — AI Service
## Identity
- Tier: Core
- Purpose: Centralized AI orchestration for all systems
## Interfaces
- Edge functions; request brokering
## Dependencies
- Used by: Bob, Paris
## Deployment
- Supabase Edge Functions
## Rules
- All AI calls centralized here
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/denver.md">
# System: Denver — Asset Storage & CDN
## Identity
- Tier: Supporting
- Purpose: File and asset storage with CDN delivery
## Interfaces
- Upload APIs, signed URLs
## Dependencies
- Used by: Venice, Bob, Site
## Deployment
- Vercel Blob and/or Supabase Storage
## Rules
- Public assets cacheable; private assets signed, time-limited
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/Dieter.md">
# Dieter PRD (v1, Frozen)

**Last updated:** 2025-09-09  
**Owner:** Oslo/Dieter (Design System)  
**Status:** ✅ Frozen for v1 (implementation green-light)

---

## 1) Purpose

**Dieter** is Clickeen’s **design system** (tokens, icons, components, primitives, docs) and the **components manager** UX used internally to browse/inspect components. Dieter is delivered as a **workspace package** (`@ck/dieter`) and static assets served at `/dieter/*`. It is the single source of visual truth for **Studio**, **Bob**, **MiniBob**, and internal tools.

---

## 2) In/Out of Scope

**In scope (v1)**
- **Tokens:** color, typography, spacing, radii, shadow, motion, z-index, durations, easing, breakpoints.
- **Foundations:** reset/normalization, base typography scale, focus ring, state styles, density.
- **Components (foundational):** Button, Input, Select, Textarea, Checkbox, Radio, Switch, SegmentedControl, Tooltip, Tag/Badge, Card, Tabs, Table (essentials only), Icon primitives.
- **Icons:** curated set, consistent optical size, strokes, and naming.
- **CSS/JS exports:** CSS tokens and component styles; minimal JS helpers/types.
- **Docs:** usage guidelines, props, a11y notes, do/don’t, code samples.
- **Components Manager UI (internal):** list + variants browser (via Studio).

**Out of scope (v1)**
- App-specific components (billing forms, template-specific widgets).
- Runtime theme switching across host roots (Studio handles center-only toggles).
- i18n copy libraries.
- Shadow DOM encapsulation.

---

## 3) Consumers & Responsibilities

- **Studio Shell** (`@ck/studio-shell`): imports Dieter **tokens** and selected primitives for chrome; no tight coupling.  
- **Bob / MiniBob**: use Dieter components/tokens; templates render inside Studio’s center panel.  
- **Internal Dieter Manager**: embedded in Studio to browse components/variants and expose specs.

**Dieter owns:** tokens, icons, foundational components, styles, docs.  
**Hosts own:** business logic, persistence, preview engines, data fetching.

---

## 4) Distribution & Runtime

**Single source:** `dieter/` (repo root) → workspace package **`@ck/dieter`**  
**Build outputs:** `dieter/dist/**`  
**Static serving (CDN):** `/dieter/*` via **copy-on-build** per ADR-005:  
- `pnpm --filter @ck/dieter build` writes to `dieter/dist/**`  
- `scripts/copy-dieter-assets.js` copies to `apps/app/public/dieter/**` (never committed)

**Build order:** `apps/app` depends on `@ck/dieter` (`workspace:*`), and `dieter/package.json` has `prepare: pnpm run build` so fresh clones produce `dist/`.

**No routes, no symlinks:** We do **not** proxy through Next routes and we do not use symlinks. Static serving from copied assets only.

---

## 5) Package Layout (authoritative)
dieter/
package.json
src/
tokens/
index.ts             # token definitions (TS)
css/                 # source templates for CSS tokens
icons/
sources/*.svg        # raw normalized SVG sources
index.ts             # icon registry (optional JS export)
components/
button/
Button.tsx
button.css.ts      # CSS-in-JS or CSS module
docs.md
tests.spec.tsx
input/
…
foundations/
reset.css
focus.css
typography.css
docs/
overview.md
accessibility.md
dist/
tokens.css             # compiled CSS tokens (public)
foundations.css        # reset, focus, base styles
components.css         # aggregated component CSS
icons/
.svg                # optimized public icons
docs/
.html|.md|.json   # generated docs (optional, for serving)
---

## 6) Component Manager (Dieter UI in Studio)

- **Right panel:** lists all Dieter components.  
- **Center panel:** shows all variants of the selected component, rendered live.  
- **Right panel detail:** shows CSS variables, props, and implementation specs for that component.  
- **Toggles:** desktop vs. mobile viewport, light vs. dark theme (scoped to Studio center canvas).  

---

## 7) API / Exports

- **Tokens:**  
  - JS/TS: `import { colors, spacing } from '@ck/dieter/tokens'`  
  - CSS: `@import '@ck/dieter/dist/tokens.css';`  

- **Components:**  
  - `import { Button, Input } from '@ck/dieter/components'`  

- **Icons:**  
  - `import { IconPlus } from '@ck/dieter/icons'`  
  - Runtime path: `/dieter/icons/plus.svg`  

- **Foundations:**  
  - `@import '@ck/dieter/dist/foundations.css';`  

- **Docs:**  
  - Served at `/dieter/docs/*` (static HTML/MD/JSON from dist/docs).

---

## 8) Governance & Guardrails

- **Single source of truth:** `dieter/` at repo root.  
- **No symlinks:** copy-on-build only (ADR-005).  
- **CI checks:** block imports from `apps/app/dieter/`; assert `apps/app/public/dieter` has no tracked files and `dieter/dist/tokens.css` exists.  
- **Manual cleanup:** unused legacy folders will be deleted once symlink + builds are validated.  
- **Versioning:** Dieter package versions must follow SemVer; breaking changes require major bump and ADR update.  
- **Documentation generation:** optional; if generated, docs are served statically from `/dieter/docs/*`.  

## Distribution & Build Requirements (Frozen)
- **Copy-on-Build Only (ADR-005):** Publish artifacts (tokens.css, icons SVG, icons.json) to `dieter/dist/`; copy to `apps/app/public/dieter/`. No symlinks.  
- **SVG Normalization:** `scripts/process-svgs.js` enforces `fill="currentColor"`; `scripts/verify-svgs.js` asserts compliance; counts compared to `icons.json`.  
- **Tooling Consistency (ADR-004):** Canonical pnpm in root `package.json` (`pnpm@10.15.1`); CI uses `--frozen-lockfile`.  
- **Verification:** CI checks (a) no committed files under `apps/app/public/dieter/`, (b) presence of `dieter/dist`, (c) Dieter built before Studio/App.
</file>

<file path="documentation/systems/geneva.md">
# System: Geneva — Schema Registry
## Identity
- Tier: Supporting
- Purpose: Validation of template/config payloads
## Interfaces
- JSON schema registry and validation API
## Dependencies
- Used by: Paris, Michael
## Deployment
- c-keen-app (registry UI), Supabase (schemas)
## Rules
- Breaking schema changes require migrations
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/helsinki.md">
# System: Helsinki — Analytics Warehouse
## Identity
- Tier: Supporting
- Purpose: BI and analytics aggregates
## Interfaces
- ETL jobs, query endpoints
## Dependencies
- Depends on: Michael
- Used by: App, Site
## Deployment
- Supabase (warehouse)
## Rules
- Aggregates only; no PII persistence without approval
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/lisbon.md">
# System: Lisbon — Email/Notifications
## Identity
- Tier: Supporting
- Purpose: Transactional emails and notifications
## Interfaces
- Email send API, templates
## Dependencies
- Used by: Robert, Tokyo, Bob
## Deployment
- c-keen-app
## Rules
- DKIM/SPF required; unsubscribe headers for marketing
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/michael.md">
# System: Michael — Backend Data Plane
## Identity
- Tier: Core
- Purpose: Configs, submissions, operational data
## Interfaces
- CRUD for widget configs, submission ingestion
## Dependencies
- Depends on: Geneva
- Used by: Bob, Venice, Atlas, Helsinki
## Deployment
- Supabase
## Rules
- Operational data only (analytics aggregates → Helsinki)
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/milan.md">
# System: Milan — Localization
## Identity
- Tier: Supporting
- Purpose: i18n, language routing
## Interfaces
- Translation bundles, locale resolver
## Dependencies
- Used by: App, Site, Venice
## Deployment
- c-keen-app and c-keen-site
## Rules
- Default locale en-US, lazy-load others
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/oslo.md">
# System: Oslo — Design System
## Identity
- Tier: Core
- Purpose: Tokens, components, motion primitives (formerly "Dieter")
## Interfaces
- /dieter/tokens/tokens.css, /dieter/components/index.ts, /dieter/icons/*
## Dependencies
- Used by: Bob, Venice, Site
## Deployment
- Served by c-keen-app under /dieter/*
## Rules
- Pure CSS + TS contracts; no framework lock-in
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/paris.md">
# System: Paris — Templates

## Identity
- Tier: Core
- Purpose: Template catalog for widgets
- Owner: Platform

## Interfaces
- GET templates, GET template/:id (served via app UI; data in Supabase)
- Outputs TemplateConfig (validated by Geneva)

## Dependencies
- Depends on: Geneva
- Used by: Bob, Venice

## Deployment
- Data in Supabase; UI in c-keen-app

## Rules
- Template payloads small (<50KB)
- Must validate against Geneva

## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/phoenix.md">
# System: Phoenix — Event Bus
## Identity
- Tier: Supporting
- Purpose: Async messaging (V0 Redis/Vercel KV)
## Interfaces
- Publish/subscribe topics, event schemas
## Dependencies
- Used by: Bob, Michael, Atlas
## Deployment
- c-keen-embed (KV) and c-keen-app producers/consumers
## Rules
- At-least-once delivery; idempotent handlers
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/prague.md">
# System: Prague — Marketplace & Discovery
## Identity
- Tier: Supporting
- Purpose: SEO, gallery and discovery
## Interfaces
- Public gallery pages; search endpoints
## Dependencies
- Used by: Site
## Deployment
- c-keen-site
## Rules
- Fast, static-first pages
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/robert.md">
# System: Robert — User & Workspace Management
## Identity
- Tier: Core
- Purpose: Auth, roles, invites
## Interfaces
- Supabase Auth; REST endpoints via app
## Dependencies
- Used by: Bob, Tokyo
## Deployment
- Supabase + c-keen-app
## Rules
- Role-based access enforced at API
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/stockholm.md">
# System: Stockholm — Growth & Experimentation
## Identity
- Tier: Supporting
- Purpose: A/B tests, feature flags
## Interfaces
- Flag evaluation API, experiments dashboard
## Dependencies
- Used by: App, Site
## Deployment
- c-keen-app
## Rules
- Kill switches must be safe-by-default
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/Studio.md">
# Studio PRD (v1, Frozen)

**Last updated:** 2025-09-09  
**Owner:** Platform / CTO  
**Status:** ✅ Frozen for v1 (implementation green-light)

---

## Summary
Studio is a standalone shell reused by multiple products (Bob, MiniBob, Dieter). It provides chrome (topbar, template row), a 3-panel layout (left | center | right), theme + viewport toggles (affect center only), panel collapse, and a typed event bus. Studio does not own business logic, templates, preview rendering, persistence, or network calls. These are the responsibility of the host.

---

## Goals
- Provide a single reusable shell for all builders and internal tools  
- Guarantee consistent UX and behavior (theme/viewport toggles, panel chrome)  
- Define a tiny, stable API for hosts to inject content and react to shell events  
- Enforce correctness via explicit error throwing, typed events, and predictable lifecycle  

---

## Non-Goals
- Template system  
- Preview runtime (e.g. Venice integration)  
- Persistence or network calls  
- Resizing or panel width control in v1  
- Shadow DOM encapsulation  

---

## Primary Consumers

### Bob / MiniBob (Widget Builder & Editor)
- Display a template selector row directly under the topbar  
- Left panel: controls for features/edits derived from the selected template  
- Center panel: live preview of the template with edits (critical feature)  
- Right panel: editable fields/specs (flexible use)  
- Host owns: template data, preview engine (e.g., Venice), persistence, and network calls  

### Dieter (Components Manager)
- Right panel: list of components; clicking one updates the center panel  
- Center panel: preview of all variants of the selected component  
- Right panel: CSS and specs for the component  
- Host owns: component catalog, rendering logic, persistence  

**Common behavior across all hosts**: theme toggle (light/dark) and viewport toggle (desktop/mobile) that apply only to the center panel.

---

## Scope & Constraints
- Scope: layout shell, chrome, theme + viewport toggles, panel collapse, typed events, slot mounting API  
- Out of scope: resizing, shadow DOM, persistence, preview runtimes, templates  
- Monorepo & Deploy: must follow CTO Execution Checklist (pnpm workspaces, Node 20.x, integrations in `/apps/app` for Bob, `/site` for MiniBob, `/dieter` for Dieter; no new Vercel projects)  
- Design System: Studio shell uses Oslo/Dieter tokens and components where appropriate; no Shadow DOM  

---

## UI Structure (DOM & Accessibility)

**Required slots (element IDs):**
- `#slot-templateRow`: empty container under topbar (auto-hides when empty)  
- `#slot-left`: left panel  
- `#slot-center`: center panel body containing `#centerCanvas`  
  - Studio applies classes here: `.studio-theme-light` / `.studio-theme-dark`, `.studio-viewport-desktop` / `.studio-viewport-mobile`  
- `#slot-right`: right panel  

**Accessibility roles:**
- Topbar: `<header role="banner">`  
- Template row: `role="region" aria-label="Template selector"`  
- Panels: `role="region" aria-label="Left|Center|Right panel"`  
- Toggles: `role="tablist"` with `role="tab"` and `aria-selected`  

**Panel chrome:**
- Header (icon, title, actions), body (host content)  
- Collapse buttons for left/right panels  

---

## Behavior (v1)
- **Theme toggle**: updates classes on `#centerCanvas` only, never `<html>`  
- **Viewport toggle**: updates classes on `#centerCanvas` only  
- **Panel collapse**: visually hides/shows panel; mounted content remains  
- **Template row**: auto-hides when empty (CSS `display:none`), auto-shows on mount  
- **Lifecycle**:  
  - `studio:ready` event fires exactly once when DOM is ready  
  - `ready()` can be called multiple times and resolves with current state  

---

## Public API (Frozen)

### Types
type SlotType = 'left' | 'center' | 'right' | 'templateRow';

type StudioState = {
  theme: 'light' | 'dark';
  viewport: 'desktop' | 'mobile';
  panels: {
    left:  { collapsed: boolean };
    right: { collapsed: boolean };
  };
};

type StudioEventMap = {
  'studio:ready': StudioState;
  'studio:theme': { theme: 'light' | 'dark' };
  'studio:viewport': { viewport: 'desktop' | 'mobile' };
  'studio:panel': { side: 'left' | 'right'; collapsed: boolean; source: 'user' | 'host' };
};

### API
interface StudioAPI {
  // Lifecycle
  ready(): Promise<StudioState>; // resolves with current state, safe to call multiple times
  destroy(): void;

  // Slot management (throws on conflict)
  mount(slot: SlotType, element: HTMLElement): void;
  unmount(slot: SlotType): void;
  getSlot(slot: SlotType): HTMLElement | null;

  // State
  getState(): StudioState;
  setTheme(theme: 'light' | 'dark'): void;          // affects center canvas only
  setViewport(viewport: 'desktop' | 'mobile'): void; // affects center canvas only
  togglePanel(side: 'left' | 'right', source?: 'host'): void;

  // Events
  on<T extends keyof StudioEventMap>(
    event: T,
    handler: (detail: StudioEventMap[T]) => void
  ): () => void;
}

---

## Event Contracts
- `studio:ready`: fires once; payload = current state  
- `studio:theme`: payload = `{ theme }`  
- `studio:viewport`: payload = `{ viewport }`  
- `studio:panel`: payload = `{ side, collapsed, source }`  

---

## Implementation Checklist
1. Studio applies `.studio-theme-{light|dark}` to `#centerCanvas` only  
2. Studio applies `.studio-viewport-{desktop|mobile}` to `#centerCanvas` only  
3. Template row auto-hides when empty  
4. All mount/unmount conflicts throw errors  
5. `studio:ready` fires exactly once  
6. Panel events include `source` field  

---

## Deferred (Future Versions)
- Resize events (v1.1 when real stories exist)  
- Shadow DOM (never; use CSS containment instead)  
- Panel width control (not needed in v1)  

---

## Risks & Mitigations
- **Host misuse**: hosts might ignore thrown errors. Mitigation: document strict usage in API guide.  
- **Panel toggle feedback loops**: mitigated with `source` field on `studio:panel`.  
- **Style conflicts**: mitigated via CSS containment rules, not Shadow DOM.  
- **Performance**: hosts must mount once and update content, not repeatedly remount.  

---

## Engineering Constraints (Frozen)
- **Deterministic Build (ADR-004):** Studio consumes Dieter tokens/icons; builds require canonical pnpm & Node 20. CI uses `--frozen-lockfile`.  
- **Icons Rendering:** Inline SVG fetched from `/dieter/icons/svg/<kebab>.svg`, normalized to `fill="currentColor"`, hydration-safe, cached in memory with bounded LRU+TTL.  
- **Token Scoping:** Dieter `tokens.css` is transformed at build via `scripts/scope-tokens.js` to scope `:root` → `#centerCanvas` (no global bleed).  
- **Asset Flow (ADR-005):** Dieter builds to `dieter/dist/`; copy to `apps/app/public/dieter/`.  
- **Order:** `@ck/dieter` → copy assets → `@ck/studio-shell` → `@ck/app`.  
- **Accessibility:** Decorative icons are `aria-hidden`; action icons include `aria-label`.
</file>

<file path="documentation/systems/tokyo.md">
# System: Tokyo — Billing & Upsell
## Identity
- Tier: Core
- Purpose: Stripe billing, entitlements
## Interfaces
- Webhooks, customer portal
## Dependencies
- Depends on: Robert
- Used by: Bob
## Deployment
- Supabase functions + c-keen-app UI
## Rules
- Entitlements cached at edge via Atlas
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/venice.md">
# System: Venice — Embed Runtime & Delivery
## Identity
- Tier: Core
- Purpose: Shadow DOM runtime (<28KB gzipped) + preview
## Interfaces
- Embed JS, beacon analytics, preview rendering
## Dependencies
- Depends on: Atlas, Michael
- Used by: External sites
## Deployment
- c-keen-embed (edge)
## Rules
- Size budget <28KB gzipped; no framework deps
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/zurich.md">
# System: Zurich — Integrations
## Identity
- Tier: Supporting
- Purpose: Webhooks and third-party connectors (Zapier, etc.)
## Interfaces
- Incoming/outgoing webhooks, connector configs
## Dependencies
- Used by: Bob, Michael
## Deployment
- c-keen-app
## Rules
- Retries with backoff; signed webhooks
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/ADRdecisions.md">
# ADR-001 Monorepo on pnpm + Turbo

- Decision: single monorepo; pnpm workspaces; Turbo tasks  
- Status: Accepted  
- Consequence: Single root lockfile; installs must run at repo root

# ADR-002 Edge Cache via Atlas

- Decision: Edge KV-backed cache for configs  
- Status: Accepted  
- Consequence: Venice reads from Atlas first; Michael as fallback

# ADR-003 AI Centralization via Copenhagen

- Decision: Single AI gateway (Supabase Edge Functions)  
- Status: Accepted


## ADR-004 — Single Source of Truth for Tool Versions
**Status:** Accepted (September 11, 2025)  
**Context:** CI failed with `ERR_PNPM_BAD_PM_VERSION` due to pnpm version declared both in workflows and `package.json`.  
**Decision:** The **only** source of pnpm version is `package.json` `packageManager`. Workflows MUST NOT specify a pnpm version. All CI installs use `--frozen-lockfile`. Deployable packages pin Node via `"engines": { "node": "20.x" }`. Implemented at repo root: `pnpm@10.15.1`.
**Consequences:** Deterministic builds across local, CI, and Vercel. CI guardrails fail PRs on version drift.  

## ADR-005 — Dieter Assets: Copy-on-Build (No Symlinks)
**Status:** Accepted (September 11, 2025)  
**Context:** Symlinked assets behaved inconsistently across CI/Vercel and broke static caching.  
**Decision:** Dieter builds artifacts to `dieter/dist/`. A build step copies them to `apps/app/public/dieter/`. Symlinks are not supported. Implemented via `scripts/build-dieter.js` and `scripts/copy-dieter-assets.js`; CI guard ensures no tracked files under `apps/app/public/dieter/`.
**Consequences:** CDN-served static assets, predictable builds, no symlink fragility.

## ADR 06: Modular Monolith First

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
Early designs pushed for microservices from day one. This added unnecessary complexity for a team of two engineers.  

### Decision
We adopt a **modular monolith** for Phase 1. Split off embed as the first microservice only when scale demands it.  

### Consequences
- Simpler development and deployment in early phases.  
- Easier debugging and maintenance.  
- Provides a clean path to split services later without premature overhead.  

---

## ADR 07: Embed Loader Size Constraint

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
The embed loader must be lightweight to ensure adoption and reduce performance penalty.  

### Decision
Hard budget: **28 KB (gzipped)** for the embed loader including runtime and widget bootstrap.  

### Consequences
- Forces careful choice of dependencies.  
- Encourages performance discipline.  
- Excludes heavy frameworks or unused libraries.  

---

## ADR 08: Supabase as Primary Backend

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need a backend that is fast to adopt and provides auth, RLS, and Postgres compatibility without heavy ops burden.  

### Decision
Use **Supabase** as the primary backend for Phase 1.  

### Consequences
- Accelerates development.  
- Some vendor lock-in, mitigated by Postgres base.  
- Limits scalability at extreme scale but acceptable for Phase 1.  

---

## ADR 09: Vercel for Hosting

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need reliable, zero-maintenance hosting and deployment.  

### Decision
Use **Vercel** for hosting all frontend apps and the embed service in Phase 1.  

### Consequences
- Fast iteration with built-in CI/CD.  
- Higher cost at scale but acceptable trade-off for Phase 1.  
- Future option to self-host if margins require.  

---

## ADR 10: Token-Based Auth

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need secure, flexible authentication for widgets and services.  

### Decision
Use **JWT tokens with scoped claims** for widget instances and user access.  

### Consequences
- Enforces least-privilege by scoping tokens to resources.  
- Integrates with Supabase easily.  
- Requires careful key rotation and expiration handling.  

---

## ADR 11: Design Tokens with SF Symbols

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
Consistency in design system is critical. We extracted all 6950 SF Symbols into `/tools/sf-symbols/svgs/` and integrated them into Dieter tokens.  

### Decision
Adopt **system UI font stack** and **SF Symbols** as design token base.  

### Consequences
- Ensures consistency across widgets.  
- Zero-maintenance system icon integration.  
- No external dependency on icon libraries.  

## ADR 12: Scope Discipline and Role Separation

**Status:** Accepted  
**Date:** 2025-09-12  

### Context
Past cycles introduced instability because the principal engineer (GPT) drifted from the agreed scope. Extra scripts (ops/README, CI “house rules”), improper prompting (heredocs, zsh comments), and commits to temporary artifacts (SERVICES_INDEX.md) created noise and rework. Role boundaries also blurred between GPT (principal) and Cursor (execution).

### Decision
- Scope for principal changes is **strictly limited to documentation/** and direct tooling (.github/workflows/docs-check.yml, ).  
- `SERVICES_INDEX.md` is **temporary output only**. It must never be committed or diff-checked in CI.  
- Prompts for execution must be copy/pasteable bash commands only. No heredocs, no inline `#` comments.  
- Roles are explicit: **GPT = principal (process, design, decisions)**; **Cursor = execution (apply exact instructions)**.  

### Consequences
- Prevents scope drift and CI churn.  
- Keeps repo clean of temporary artifacts.  
- Reduces hours of rework by enforcing clarity on roles and scope.  
#### ADR-012 Edge Config writes model (stabilization note)
Implementation v1 permits Edge Config **writes from runtime** using `EDGE_CONFIG_ID` + `VERCEL_API_TOKEN` scoped to the `c-keen-api` project and gated by `INTERNAL_ADMIN_KEY`. Preferred long-term: move writes to CI and keep runtime **read-only**.
</file>

<file path="documentation/clickeen-platform-architecture.md">
# CLICKEEN Platform Architecture — Phase 1 (Frozen)

This document is the canonical P1 snapshot. It describes what is built, what is out of scope for P1, and the boundaries between surfaces. All AIs and humans must follow this document. Architecture changes require an ADR and doc updates in the same PR.

## System map (P1)

| System (Codename) | Repo Path            | Deploy Surface (Vercel) | Responsibility (P1)                                       | Status |
|---|---|---|---|---|
| **Prague — Marketing Site** | `apps/site`   | `c-keen-site`  | Marketing pages, gallery, static content                 | **Done (P1)** |
| **Studio — Dashboard App**  | `apps/app`    | `c-keen-app`   | Auth flows, basic workspace views, serving Dieter assets | **Done (P1)** |
| **Venice — Embed Runtime**  | `services/embed` | `c-keen-embed` | Public embed runtime (edge), ingest/preview endpoints    | **Done (P1)** |
| **Paris — HTTP API**        | `services/api`   | `c-keen-api`   | Server-secret surface, `GET /api/healthz`, future admin  | **Done (P1, minimal)** |
| **Atlas — Edge Config**     | *(Vercel store)* | N/A            | Config delivery to runtimes (reads only at runtime)      | **Done (P1)** |
| **Phoenix — Idempotency**   | *(policy)*       | N/A            | Option B discipline across mutating endpoints            | **Policy in place** |
| **Oslo**                    | —                | —              | **RETIRED**                                              | **Removed** |

### Phase intents
- **P2** (not in this doc’s scope): billing, richer RBAC, more admin endpoints in Paris, workflows.  
- **P3**: scale/perf features, analytics, extended automation.

## Deploy surfaces

- `apps/site` → **c-keen-site** (Next 14.2.5; static pages + minimal API routes)  
- `apps/app` → **c-keen-app** (Next 14.2.5; middleware for auth; Dieter assets copy-on-build per ADR-005)  
- `services/embed` → **c-keen-embed** (Next 14.2.5; **edge** runtime; public APIs only)  
- `services/api` → **c-keen-api** (Next 14.2.5; **nodejs** runtime; server-secrets boundary)

## Paris — health surface (P1)
- `GET /api/healthz` → `200` with `{ sha, env, up, deps: { supabase, edgeConfig } }`; returns `503` if critical deps fail.  
- Runtime: **nodejs**.  
- **Secrets live here** (server-only).  
- **Edge Config**: read-only at runtime; CI writes only (see ADR-012 note).

## Edge Config (Atlas)
- Reads from runtimes (Embed/App/Site/Api).  
- **Writes** happen in **CI** using `VERCEL_API_TOKEN` + `EDGE_CONFIG_ID`, gated by `INTERNAL_ADMIN_KEY`.  
- Never write from runtime.

## Security boundaries
- Public embed (Venice) never holds server secrets.  
- All privileged operations move to Paris (API).  
- Apps use public keys/anon tokens only in the client; server interactions cross to Paris when secrets are required.

## Observability (P1)
- Health surface in Paris.  
- CI checks: lockfile integrity, Dieter assets, basic doc validation.  
- Add platform logging/metrics in P2.

## Data & auth (P1)
- Supabase public URL + anon key in app/site where needed; JWKS health-probed in Paris.  
- Admin/auth secrets remain in **c-keen-api** only.

## Change control
- Any cross-surface change requires an ADR and doc updates in the same PR.  
- Documentation drift is a P0 incident; fix docs first.

## Appendix: ADR-012 summary (Paris separation)
- **Decision**: Paris is a separate Vercel project to contain secrets and server-only endpoints.  
- **Rationale**: strict boundary between public embeddable code and secret-bearing surfaces.  
- **Health**: dependency-aware healthz.  
- **Edge Config**: runtime read-only; CI-only writes.  
- **Risks**: cold starts, schema drift; mitigated via health checks and docs-as-code.
</file>

<file path="documentation/CONTEXT.md">
CRITICAL P0 — documentation/ is the single source of truth for all AI & human work. You MUST read and follow it. If you see discrepancies, STOP and ask for alignment.

# CONTEXT

This repo is the monorepo for **CLICKEEN (SaaS)**. The documentation in this folder governs how humans and AIs work. If any code, script, or comment conflicts with documentation/, the docs win. Ask for alignment before proceeding.

## Codename map (FROZEN for Phase 1)
- **Paris — HTTP API** (`services/api`, Vercel project **c-keen-api**)  
- **Venice — Embed Runtime** (`services/embed`, Vercel project **c-keen-embed**)  
- **Studio — Dashboard App** (`apps/app`, Vercel project **c-keen-app**)  
- **Prague — Marketing Site** (`apps/site`, Vercel project **c-keen-site**)  
- **Atlas — Edge Config** (Vercel Edge Config store, read from runtime; writes: **CI-only**)  
- **Phoenix — Idempotency** (Option B; enforced where applicable)  
- **Oslo — RETIRED** (do not reintroduce; remove stale references when found)

## Phase status (P1 frozen)
**Built in P1**
- `apps/site` (Prague) — marketing pages + gallery
- `apps/app` (Studio) — auth flows, basic workspace/views
- `services/embed` (Venice) — public embed runtime + preview and ingest endpoints
- `services/api` (Paris) — health surface; server-secret–bounded project for future admin/secure endpoints
- Atlas — Edge Config **read-only at runtime**; **writes only from CI** gated by `INTERNAL_ADMIN_KEY`

**Not built in P1 (do not start without ADR)**
- Billing & subscriptions
- Workflow automation
- Fine-grained RBAC beyond what exists
- Runtime Edge Config writes (must stay CI-only)

## Rules of engagement (for all AIs & humans)
1. **Read documentation/** first. If unclear, **ask**; do not guess.  
2. **No placeholders.** If a value is unknown, stop and request it.  
3. **Service boundaries are hard:** embed ≠ api ≠ app ≠ site.  
4. **Secrets live only** in **c-keen-api** (server surface).  
5. **CI-only** writes to Edge Config; runtime is **read-only**.  
6. When changing behavior or surface area, land an **ADR** and update docs in the same PR.

## Where things live
- **Monorepo**: pnpm workspaces + Turbo (root `package.json` is the SoT)  
- **Deploy projects (Vercel)**:  
  - `c-keen-site` → `apps/site`  
  - `c-keen-app` → `apps/app`  
  - `c-keen-embed` → `services/embed`  
  - `c-keen-api` → `services/api`  
- **Edge Config**: store = **Atlas** (reads at runtime; writes via CI)

## Canonical docs (start here)
- `documentation/Techphases.md` — frozen P1 scope & phase gates  
- `documentation/clickeen-platform-architecture.md` — system map & responsibilities  
- `documentation/ADRdecisions.md` — authoritative decisions (incl. ADR-012)  
- `documentation/verceldeployments.md` — env/keys per project

> If you encounter an **“Oslo”** reference, remove it and align the doc to the **Paris — HTTP API** model (ADR-012).
### Note on Claude Code (local CLI)
Claude Code is installed and authenticated on the CEO’s machine.  
It is **NOT part of the standard process**. Cursor AI remains the primary Full Stack Engineer for local repo operations.  
Claude Code may only be used if explicitly required to unblock Cursor or perform local edits.
</file>

<file path="documentation/FailuresRCAs-IMPORTANT.md">
# Failures & RCAs — Important

## RCA — pnpm Version Conflict in CI (ERR_PNPM_BAD_PM_VERSION)
**Date:** September 11, 2025  
**Summary:** CI failed due to pnpm version specified both in workflow and `package.json`, causing version drift and blocking installs.  
**Impact:** Multiple failed runs, delayed merges, repeated retries.  
**Root Cause:** Duplicate tool version declarations.  
**Resolution:** Single source of truth is `package.json` `packageManager`. Workflows must not pin pnpm. Enforce `--frozen-lockfile`.  
**Prevention:** ADR-004, ADR-005; Playbooks; CI guards to detect drift; copy-on-build for Dieter assets. Mitigations implemented: root `packageManager=pnpm@10.15.1`, `--frozen-lockfile` enforced, no nested lockfiles, Dieter assets copied (no symlinks), SVG normalization + verification, public assets untracked enforcement.

## RCA: P0 — Principal Engineer Scope Drift

**Date:** 2025-09-12  
**Severity:** P0  

### Symptoms
- CI failures and hangs from heredoc prompts (`command not found: #`, endless waiting).
- Rework from updating `SERVICES_INDEX.md` despite it being temporary.
- Repo churn with extra scripts and ops files not part of scope.
- Confusion about roles (GPT vs Cursor).

### Root Cause
- Principal engineer introduced scope drift beyond documentation/.
- Temporary artifacts treated as tracked deliverables.
- Prompts written with heredocs and zsh-incompatible syntax.
- Roles blurred, leading to mixed instructions.

### Corrective Actions
1. ADR 12: enforce scope discipline and role separation.  
2. Generator explicitly marked: outputs are temporary, not tracked.  
3. Prompts standardized to plain bash, no heredocs.  
4. Roles clarified: GPT = principal, Cursor = executor.  

### Preventive Measures
- All future changes must be reflected in ADRs or RCAs.  
- Principal must confirm alignment with documentation before introducing new elements.  
- CI workflows limited to documentation/ scope only.
</file>

<file path="documentation/migrations.md">
# Migrations

- Track breaking changes across versions.  
- Every breaking change requires an entry in `breaking-changes.md`.

# Migration: v0 → v1

- Consolidate Dieter into Oslo (served by c-keen-app)  
- Preview path standardized to `/dieter/components.html`


# Breaking Changes

- 2025-09-09: Lockfile enforcement in CI; subdir installs must `cd` to repo root and use `--filter`.

### Migration — Tooling Consistency & Asset Copying (September 11, 2025)
**Why:** Prevent pnpm/version drift and symlink fragility in CI/Vercel.  
**Steps:**
1. Declare pnpm only in root `package.json` (`"packageManager": "pnpm@10.15.1"` or current).  
2. Ensure deployable packages declare `"engines": { "node": "20.x" }`.  
3. Remove pnpm version from workflows; keep frozen installs.  
4. Replace Dieter symlink with **copy-on-build** step to `apps/app/public/dieter/`.  
**Rollback:** Revert workflow/manifest changes together; CI should fail on drift.
</file>

<file path="documentation/Playbooks.md">
<!-- =============================== -->
<!-- File: debugging.updated.md -->
<!-- =============================== -->

# Debugging Playbook

## General
1. Verify Node 20.x and pnpm are installed.
2. Run `pnpm install --frozen-lockfile` at repo root.
3. Confirm you are working in the correct Vercel project for the affected app.
4. Use `pnpm -r build` to ensure all packages compile before local runs.

## Studio Shell Issues

### Studio assets not loading
**Symptoms:** Builder screens are blank; console shows 404 for Studio files.  
**Checks:**
- Host serves:
  - `/vendor/studio/studio.css`
  - `/vendor/studio/studio.js`
- Verify 200 responses in DevTools → Network.
- Confirm build step was run: `pnpm --filter @ck/studio-shell build` and artifacts were copied to host `/public/vendor/studio/`.

**Fixes:**
- Rebuild Studio package and re-copy `dist/*` to the host’s `/public/vendor/studio/`.
- Redeploy the host app (push to main / trigger Vercel deployment).

---

### `studio:ready` never fires
**Symptoms:** Host code waiting on `Studio.ready()` hangs or events never appear.  
**Checks:**
- Ensure `<script src="/vendor/studio/studio.js"></script>` is included exactly once and after DOM (or use `defer`).
- Required slot IDs are present in the host DOM:
  - `#slot-templateRow` (optional: auto-hides when empty)
  - `#slot-left`
  - `#slot-center` (must contain `#centerCanvas`)
  - `#slot-right`
- From console: `await window.Studio?.ready()` — should resolve with current state.

**Fixes:**
- Load Studio script earlier (with `defer`) or call host init after `Studio.ready()`.
- Add missing slots; ensure `#centerCanvas` exists inside `#slot-center`.

---

### Theme / viewport not applying
**Symptoms:** Toggling light/dark or desktop/mobile has no visual effect.  
**Checks:**
- Preview content is nested inside **`#centerCanvas`** (not elsewhere).
- DevTools: `#centerCanvas` has classes:
  - `.studio-theme-light` or `.studio-theme-dark`
  - `.studio-viewport-desktop` or `.studio-viewport-mobile`

**Fixes:**
- Move preview container inside `#centerCanvas`.
- Ensure host did not override or remove Studio-applied classes.

---

### Mount / unmount errors
**Symptoms:** Exceptions like “Slot center already occupied” or “Cannot unmount empty slot”.  
**Why:** Studio **throws** on slot conflicts by design.  
**Fixes:**
- Always `unmount(slot)` before re-`mount(slot, el)`.
- Reuse a single root element per slot; update its children instead of remounting the slot root.

---

### Panel collapse feedback loops
**Symptoms:** Infinite toggling, UI flapping.  
**Checks:**
- Listen for `studio:panel` payload `{ side, collapsed, source }`.
- If you programmatically call `togglePanel(..., 'host')`, ignore subsequent `studio:panel` events where `source === 'host'`.

**Fixes:**
- Gate your handler on `source === 'user'` when reflecting UI state back into your store.

---

### CSS collisions (Studio vs host content)
**Symptoms:** Unexpected spacing/overflow or fonts.  
**Checks:**
- Studio avoids Shadow DOM; use **CSS containment** around host content.
- Confirm Oslo/Dieter tokens are loaded and not overridden downstream.

**Fixes:**
- Wrap host content in a container with `contain: layout style;` or similar.
- Scope host styles away from `.studio-*` classes.

---

### Asset caching / stale files
**Symptoms:** Changes to Studio don’t appear after deploy.  
**Checks:**
- Vercel cache for `/vendor/studio/*`.
- Service Worker (if any) on the host app.

**Fixes:**
- Invalidate Vercel cache or bump asset filename/version.
- Clear or update SW precache list; redeploy.

---

## Quick Console Recipes
- Await readiness:
  ```js
  await window.Studio.ready();

  # Playbook: Incident Response

- Identify failing deployment (app/site/embed)
- Check Vercel logs; validate install step uses root lockfile
- Roll back to previous green deploy if needed


# Playbook: Deployment

## Production
- Push to `main` triggers Vercel deploys (app/site/embed)
- Clear cache when lockfile or root install strategy changes

## Common Pitfalls (recently fixed)
- Frozen lockfile failures when running install from subdir (Root Directory set) → run installs at repo root with `--filter` and ensure `use-lockfile=true`.
- Missing Next routes manifest → ensure build runs in the subdir with `pnpm build` and correct Root Directory.

#### Playbook — pnpm Version Conflict (ERR_PNPM_BAD_PM_VERSION)
**Symptoms:** “Multiple versions of pnpm specified” in CI logs.  
**Fix:**  
1. Confirm root `package.json` `"packageManager"` (canonical).  
2. Remove any pnpm `version:` from workflows.  
3. Ensure deployable packages set `"engines": { "node": "20.x" }`.  
4. Re-run CI with `pnpm install --frozen-lockfile`.  
**Do Not:** Use `--no-frozen-lockfile` or pin a different pnpm in CI.

#### Playbook — Frozen Lockfile Failure
**Symptoms:** `pnpm install --frozen-lockfile` fails in CI.  
**Fix:**  
1. DO NOT bypass.  
2. Run `pnpm install` locally with the canonical pnpm, commit updated lockfile.  
3. Re-run CI.  
**Guardrail:** CI step fails if `--no-frozen-lockfile` is used.
</file>

<file path="documentation/supabase-schema-sync.yml">
name: Supabase Schema Sync

on:
  schedule:
    - cron: "0 2 * * *"   # every day at 2am UTC
  workflow_dispatch:       # allow manual runs

jobs:
  schema-dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Supabase CLI
        run: npm install -g supabase
      - name: Dump schema
        run: supabase db dump --db-url ${{ secrets.SUPABASE_DB_URL }} --schema public > supabase/schema.sql
      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add supabase/schema.sql
          git commit -m "chore: update schema [skip ci]" || echo "No changes to commit"
          git push
</file>

<file path="documentation/Techphases.md">
TXT
# TechPhases.md

**Purpose**  
Authoritative, first-level technical specification for Clickeen across 3 phases. Defines services required per phase, why they exist, what they include at that phase, and the concrete stack choices we’ve already aligned on. This doc is the starting point for roadmapping and scoping.

**Guiding principles**
- **Product-led, self-serve.** No sales-led dependencies in the stack or flows.
- **Modular from day one.** Start unified (modular monolith), split into services only when scale demands it.
- **Size + speed as features.** Embed script budget is hard (see budgets).
- **Security by default.** Postgres RLS, least privilege, token scope + rotation.
- **DX matters.** pnpm workspaces, strict linting, type-safe APIs, one-task-at-a-time execution.
- **No guessing.** If a dependency or design isn’t confirmed here, mark **TBD** and raise before implementation.

---

## Phase 1 — Widgets (Trojan Horse)

**Goal:** Ship first widgets + infra. Prove distribution, self-serve onboarding, and usage capture with a <28KB embed.

### Services in Phase 1 (what & why)

1) **Embed Service**
- **Why:** Core delivery of widgets to any website; single snippet integrates, auto-updates.
- **Scope (P1):**
  - Public **embed loader** (vanilla TS) served via CDN; budget **≤28KB gz** total (loader + minimal runtime).
  - Widget bootstrapper, DOM mounting, attribute/config parsing, feature flags.
  - Versioning (`/embed/v{semver}/loader.js`) and default alias (`/embed/latest/loader.js`).
  - Lightweight, **queue-safe event bus** for widget events (no external deps).
  - Minimal client metrics (load start/end, errors) with **fire-and-forget pixel** endpoint.
- **Tech:** TypeScript, small bundler (**esbuild** or **rollup**, pick smallest bundle), CDN (**Vercel Edge** or **Cloudflare** TBD), Sentry (errors).

2) **Auth & Workspace Service**
- **Why:** Needed to claim widgets, manage ownership, and secure admin UIs.
- **Scope (P1):**
  - Email/password + magic link via **Supabase Auth** (JWT).
  - **Workspaces** (orgs) with ownership; single role (Owner) initially.
  - Basic account settings; RLS enforced on all tenant data.
- **Tech:** Supabase (Postgres + Auth + RLS), Next.js (dashboard).

3) **Usage & Token Service** (**“Oslo” tokens**)
- **Why:** Enforce limits; instrument adoption funnel; secure embed calls.
- **Scope (P1):**
  - Token issuance (workspace-scoped, widget-scoped), rotation, revocation.
  - Rate-limit counters (simple per-token window).
  - Usage counters (views, loads, interactions) aggregated daily.
- **Tech:** Supabase (tables, SQL functions), Edge function(s) for write endpoints.

4) **Billing Service (stub)**
- **Why:** Turn on monetization path without full UI.
- **Scope (P1):**
  - **Stripe** products/prices created; webhook receiver that records customer + subscription rows.
  - No full paywall yet; gated flags available to enable per-workspace.
- **Tech:** Stripe + minimal serverless endpoint, Supabase tables to mirror subscription state.

5) **System UI / Design Tokens (“Dieter”)**
- **Why:** Shared design foundation across dashboard + widgets.
- **Scope (P1):**
  - **System UI font stack** (no Ubuntu/Roboto), light/dark tokens, spacing/typography scales.
  - **SF Symbols** integration (all 6,950 SVGs) under `/tools/sf-symbols/svgs/`.
  - Icon component + zero-maintenance pipeline (indexing by name, tree-shakeable).
- **Tech:** TS/React UI package, CSS vars tokens, PostCSS; icon build script.

6) **Widget(s)**
- **Why:** Real value + distribution.
- **Scope (P1):**
  - First widget(s): **Form widget** (per previous roadmap), plus minimal variants if time.
  - Client-only render with optional SSR stub, themeable via CSS vars from Dieter.
  - No heavy deps; size folded into overall loader budget if embedded, or code-split on demand.
- **Tech:** React (minimal), TS; **no** third-party UI libs.

7) **Drafts + Claim Flow (“Bob”)**
- **Why:** Convert public installs into accounts.
- **Scope (P1):**
  - Anonymous widget draft token created on first load; **claim** flow ties it to a workspace after signup.
  - Rate-limited claim attempts; audit trail (triggers already discussed).
- **Tech:** Supabase tables + triggers (claim audit), simple claim UI in dashboard.

8) **Observability & Health (seed)**
- **Why:** Find issues fast, keep uptime.
- **Scope (P1):**
  - Sentry client/server integration (embed + dashboard).
  - `/healthz` endpoints, uptime pings.
  - Product analytics baseline via **PostHog** in dashboard (not embed).
- **Tech:** Sentry SDKs, PostHog web snippet (dashboard only).

---

### Phase 1 Stack (confirmed + used)

- **Language:** TypeScript everywhere.
- **Frontend/Dashboard:** React + **Next.js** (already present), minimal server actions or API routes.
- **Embed Loader/Runtime:** Vanilla TS + minimal React (only where needed), esbuild/rollup bundling.
- **Package/Workspace:** **pnpm** workspaces (6 projects noted). Lockfile committed.
- **Database:** **Supabase Postgres** (+ Auth, Realtime optional later).
- **Auth:** Supabase Auth (JWT) with RLS for multi-tenant isolation.
- **Billing:** Stripe (webhook → Supabase).
- **Analytics:** PostHog (dashboard), tiny pixel endpoint for embed.
- **Error Monitoring:** Sentry (embed + dashboard).
- **Design System:** Dieter tokens + SF Symbols SVG set, system UI font stack.
- **Hosting/CDN:** **TBD** between Vercel and Cloudflare (cost tables evaluated). Current dev likely Vercel.
- **CI/CD:** Git provider **+ GitHub Actions** (TBD exact jobs); Supabase CLI for migrations.
- **Lint/Format/Test:** ESLint (strict), Prettier, **Vitest** (unit), **Playwright** (smoke) — adopt incrementally.

---

### Phase 1 Data Model (first cut)

Core tables (Supabase/Postgres):
- `users` (auth-linked profile)
- `workspaces` (tenant)
- `workspace_members` (P1 may be implicit Owner only)
- `widgets` (definition metadata)
- `widget_instances` (deployed unit; anonymous until claim)
- `widget_claim_audit` (attempts + triggers; **rate-limit trigger present**)
- `embed_tokens` (workspace/widget scoped; status, scopes, last_rotated_at)
- `usage_counters_daily` (per token/widget/day: views, loads, interactions)
- `stripe_customers`, `stripe_subscriptions` (mirror Stripe state; stub in P1)

**RLS:**  
- All tenant data is **workspace-scoped** with `workspace_id` FK.  
- Policies: `auth.uid()` must map to a member of the workspace (Owner role P1).

---

### Phase 1 Security Baseline

- **RLS enabled by default** on all tenant tables; deny-all + explicit allow policies.
- **Embed tokens**: random, 128-bit (min), scoped to widget/workspace; rotate via dashboard.
- **Rate limiting**: per token for write endpoints; exponential backoff after failures.
- **CSP**: strict in dashboard (`script-src 'self'` + Sentry/PostHog domains). Embed publishes a safe list in docs.
- **PII**: avoid storing in embed events; only aggregate counters.
- **Secrets**: .env via Vercel/Cloudflare secrets; never in repo.

---

### Phase 1 Performance/Size Budgets

- **Embed loader total** (loader + minimal runtime): **≤28KB gz** (Venice target).
- **Per-widget incremental** (lazy chunk): **≤10KB gz** initial render.
- **Load time**: first byte ≤100ms at edge; TTI < 1s on 4G for simple widget.
- **Third-party deps**: zero unless absolutely necessary; no UI frameworks.

**CI enforcement:**  
- `size-limit`/bundlesize checks on embed output.  
- Lint rule preventing accidental imports (e.g., lodash full).  
- PR fails if budgets exceeded.

---

## Phase 2 — Low-Cost SaaS for SMBs

**Goal:** Layer broader SaaS capabilities on top of widget footprint. Multi-user, integrations, real billing. Keep self-serve simplicity.

### Services in Phase 2 (evolutions/new)

1) **Embed Service (evolve)**
- Advanced analytics (CTR, conversion events), A/B hooks, perf tuning per widget.
- Cached config manifests at edge; per-workspace feature flags.

2) **Auth & Workspace (evolve)**
- Roles & permissions (Owner, Admin, Member).
- Multiple workspaces per user; invitations; basic audit log.

3) **Usage & Token (evolve)**
- Event-level logs (append-only table) with rollups to daily aggregates.
- Tiered quotas; soft-then-hard limit behavior; usage UI.

4) **Billing (full)**
- Self-serve subscriptions in-app, upgrade/downgrade, proration, dunning.
- Per-workspace plan entitlements → feature gating via server flags.
- Invoices + receipts via Stripe Customer Portal.

5) **Integration Service (new)**
- First-party connectors: Google (OAuth), Slack (webhooks), Stripe (billing already), email (TBD: Resend/Sendgrid).
- Webhooks for outbound events (workspace-scoped signing secret).

6) **Workflow/Orchestration (new)**
- Lightweight automations: triggers (usage thresholds, form submission), actions (email, Slack, webhook).
- Rate-limited, retried delivery; dead-letter logging.

7) **Observability & Health (expand) – “Berlin”**
- SLOs + error budgets; alerting (PagerDuty **TBD**).
- Centralized logs (supabase logs + dashboard viewer); Sentry release health.

8) **Docs/Dev Portal (new)**
- Public docs for embed, tokens, webhooks, API keys; examples.

---

### Phase 2 Stack Additions

- **OAuth** (Google) via NextAuth **TBD** or Supabase OAuth providers.
- **Email** provider **TBD** (Resend/SendGrid) with domain auth.
- **Job/Queue**: lightweight queue **TBD** (Cloudflare Queues or simple cron + table outbox).
- **API Keys** for server-to-server integrations (separate from embed tokens).
- **Docs site**: Docusaurus or Next.js app route; lives in `apps/docs`.

---

### Phase 2 Data Model (additions)

- `roles` / `workspace_members` (role column)
- `events_raw` (append-only usage stream), `usage_rollups_daily`
- `api_keys` (hashed), `webhook_endpoints`, `webhook_deliveries`
- `integrations` (per provider), `oauth_connections`
- `workflows`, `workflow_triggers`, `workflow_runs`
- `audit_logs`

**RLS:**  
- Extended to role checks. Webhook deliveries exposed via signed URL, not public.

---

### Phase 2 Security

- **API keys** hashed + prefix displayed once; rotate/revoke.
- **Webhook signatures** (HMAC-SHA256 with per-endpoint secret).
- **Audit log** of security events (role changes, token rotations).
- **Secrets**: per-env isolation; least-privileged service keys.

---

### Phase 2 Performance

- Keep embed budgets; offload heavy analytics to event stream/rollups.
- Edge config manifests served from KV/edge cache (**TBD**: Vercel Edge Config or Cloudflare KV).

---

## Phase 3 — Enterprise Platform

**Goal:** Enterprise-grade features at a fraction of legacy cost while preserving product-led simplicity.

### Services in Phase 3 (evolutions/new)

1) **Embed Service (enterprise)**
- Per-tenant isolation toggles; SLA monitoring dashboards; signed config manifests.
- Region routing / data residency **TBD** (if required).

2) **Auth & Workspace (enterprise)**
- **SSO/SAML**, **SCIM** provisioning, granular permissions, full audit trails.
- Suspensions, legal holds, export tooling.

3) **Usage & Token (enterprise)**
- Cross-service metering + consolidated enterprise reporting.
- Contractual quota enforcement; overage reporting.

4) **Billing (enterprise)**
- Custom contracts (manual adjustments), seat-based pricing support.
- Invoicing net terms; tax/VAT compliance (Stripe Tax).

5) **Integration Service (deep)**
- Salesforce/HubSpot connectors, advanced mapping + backfill jobs.
- Signed inbound API for partners.

6) **Workflow/Orchestration (advanced)**
- Multi-step, conditional automations; replay; idempotency keys.
- Visual run history with redelivery.

7) **Observability & Health (mature)**
- Error budgets per tier, tenant-level dashboards, synthetic tests per region.
- Incident playbooks.

8) **Compliance & Security (new)**
- SOC 2 readiness controls, DPA/GPDR features (export/delete), data retention policies.
- KMS/At-Rest encryption posture documentation (Supabase/PG native).

---

### Phase 3 Stack Additions (TBD until contracted)

- **SSO/SAML** (WorkOS or custom SAML), **SCIM** (WorkOS or custom).
- **Data residency** options (multi-project Supabase, region pinning).
- **Advanced queue** if needed (e.g., Cloudflare Queues, Upstash Kafka **TBD**).

---

### Phase 3 Data Model (additions)

- `enterprise_accounts`, `contracts`, `seats`
- `saml_connections`, `scim_provisioning`
- `compliance_artifacts`, `retention_policies`
- `incident_reports`

**RLS:**  
- Auditable admin overrides with justification logs.

---

## Repository & Workspace Structure (baseline)

/apps
  /dashboard           # Next.js app (admin UI)
  /embed-service       # Embed endpoints + static loader builds
  /docs                # Public docs (P2+)
/packages
  /ui-dieter           # Design tokens, primitives, theme
  /embed-runtime       # Loader + runtime (vanilla TS + tiny React where needed)
  /icons               # SF Symbols wrapper components + build scripts
  /analytics-client    # Tiny client for pixel posting (used by embed)
/services              # (optional) splitouts post-P1 if needed
/tools
  /sf-symbols/svgs     # 6,950 SVGs (extracted)
  /scripts             # repo scripts (release, size checks, etc.)

**pnpm**  
- Commit `pnpm-lock.yaml`.  
- Install policy:
  - First time: `pnpm install --no-frozen-lockfile` → commit lockfile
  - CI/local thereafter: `pnpm install --frozen-lockfile`

**NPM scripts (examples)**  
- `build`: typecheck + build all packages/apps  
- `lint`, `format`, `test`, `test:e2e`  
- `sizecheck`: run bundle size checks on embed output

---

## CI/CD (minimum viable)

**P1 pipelines**
- **PR:** typecheck, lint, unit tests, **sizecheck** (embed budgets), preview deploy.
- **Main merge:** build + deploy; run supabase migrations using **Supabase CLI**; smoke checks.
- **Keys/Secrets:** stored per-env (no repo).

**Release/versioning**
- Semantic versions for **embed runtime**.  
- `latest` alias always points to most recent stable; pin via `vX.Y.Z` when needed.  
- Release notes auto-posted to `documentation/CHANGELOG.md`.

---

## Acceptance criteria per Phase

**Phase 1**
- Embed loader ≤28KB gz; first widget ships and renders across 3 test CMSs.
- Anonymous draft → claim flow works; workspace created and owns widget.
- Usage counters increment; basic dashboard view shows last 7 days.
- Sentry shows errors; health checks green; PostHog events flowing (dashboard only).
- Stripe webhooks create subscription rows (behind feature flags).

**Phase 2**
- Multi-user roles; invitations; audit log for role changes.
- Billing fully self-serve; plan entitlements gate features.
- Integrations: Google OAuth + Slack webhook live; webhook signatures verified.
- Workflows: one trigger → one action with retries + run history.
- Docs site live with token/API/webhook sections.

**Phase 3**
- SSO/SAML + SCIM for at least one IdP; audit log meets enterprise bar.
- Consolidated usage & contract quotas; enterprise invoices.
- Deep CRM integration (Salesforce/HubSpot) with backfill job and mapping UI.
- Compliance controls: data export/delete, retention policies, incident report templates.

---

## Open decisions (raise before implementation)

- **Hosting target** for prod: Vercel vs Cloudflare (cost vs DX).  
- **Edge config store** for per-workspace manifests: Vercel Edge Config vs Cloudflare KV.  
- **Job/Queue** provider (P2): Cloudflare Queues vs DB-backed outbox.  
- **Email** provider (P2): Resend vs SendGrid.  
- **SSO/SAML/SCIM** vendor (P3): WorkOS vs custom.

---

## Non-goals (for now)

- On-prem deployments.  
- Native mobile SDKs.  
- Heavy analytics in the embed (keep it lean; aggregate server-side).

---

## Appendix — Table & Policy Sketches (P1)

**Example: `embed_tokens`**
- `id (uuid)`, `workspace_id`, `widget_id`, `token (hashed)`, `scopes text[]`, `status enum(active,revoked)`, `created_at`, `last_rotated_at`
- **Policy:** token readable only via server; embed receives opaque public token not stored in DB as plaintext.

**Example: `usage_counters_daily`**
- `(date, workspace_id, widget_id, token_id) → views, loads, interactions`
- **Policy:** select restricted to workspace members.

**RLS default**
```sql
-- deny all
alter table ... enable row level security;
create policy deny_all on ... for all using (false);

-- allow workspace members
create policy tenant_read on ... for select using (
  exists (
    select 1 from workspace_members m
    where m.workspace_id = ...workspace_id and m.user
### Phase 1 Deployments (FROZEN)

- **Vercel projects (4):**
  - `c-keen-app` — Studio/Console (Next.js)
  - `c-keen-site` — Marketing site (Next.js)
  - `c-keen-embed` — Embed service at edge (Next.js / edge routes)
  - `c-keen-api` — **Paris — HTTP API** (Next.js / node runtime)
- **Rule:** No additional projects in P1 (frozen).
- **Edge Config:** **Vercel Edge Config** in P1 (runtime read-only). Any writes are performed in CI using a scoped `VERCEL_API_TOKEN` with `EDGE_CONFIG_ID`.

#### Health endpoint spec (all services)

Each service must expose `/api/healthz` returning 200 on pass and 503 if a critical dependency fails. The response MUST include the following shape:

```json
{
  "sha": "<short-sha|unknown>",
  "env": "production|preview|development",
  "up": true,
  "deps": { "supabase": true, "edgeConfig": true }
}
</file>

<file path="documentation/verceldeployments.md">
# Deployment: c-keen-site

- Stack: Next.js on Vercel  
- Hosts: Marketing site and Prague gallery  
- Root Directory: apps/site  
- Build Command: pnpm build

# Deployment: c-keen-embed

- Stack: Edge Functions on Vercel  
- Hosts: Venice runtime, Atlas cache (KV)  
- Root Directory: services/embed  
- Build Command: pnpm build  
- Notes: Strict size budget; preview belongs here.

# Deployment: c-keen-app

- Stack: Next.js on Vercel  
- Hosts: Bob (Builder & Studio), Robert UI, Tokyo UI  
- Serves: Oslo assets at /dieter/* (components.html, icons, tokens)  
- Root Directory: apps/app  
- Build Command: pnpm build  
- Install Command: (Vercel default) pnpm install  
- Notes: Push to main → production deploy via Vercel Git integration.




### Runtime & Assets (Frozen)
- Vercel uses Node 20 as declared by `"engines": { "node": "20.x" }`.  
- Dieter assets are served as static files from `apps/app/public/dieter/` produced by **copy-on-build**. Symlinks are forbidden.
### Additional server env (c-keen-api)
- `INTERNAL_ADMIN_KEY` — header `x-ckeen-admin` guard for admin endpoints
- `EDGE_CONFIG` — provisioned by Vercel Edge Config Integration
- `EDGE_CONFIG_ID` — Edge Config store id (only needed if runtime writes enabled)
- `VERCEL_API_TOKEN` — Vercel API token (only needed if runtime writes enabled; rotate regularly)
</file>

<file path="documentation/WhyClickeen.md">
# WhyClickeen.md

## Problem
Software for businesses is fundamentally broken. 
- **Economic:** Companies spend 50-70% of revenue on sales and marketing, making customers pay for salespeople instead of product value. This sales-led model creates a vicious cycle where growth requires more sales costs which requires higher prices.  
- **Experience:** The products themselves are poorly designed and overly complex. Small businesses can't afford the tools they need, and enterprises pay massive premiums for marginal features.

## Opportunity
AI has transformed the economics of software creation. More importantly, AI enables rapid iteration and rebuilding at speeds that established companies can't match - they're stuck with legacy code and massive sales organizations. The companies that invested in S&M instead of R&D can't pivot. This creates a window for a new model: pure self-serve software that passes the savings to customers.

## Solution: Clickeen
Clickeen is building the next generation of SaaS: pure product-led, no sales team, no inflated prices, just great products distributed through self-serve channels. We start with widgets as our trojan horse - they get us onto thousands of websites. Phase 2 builds low-cost SaaS software for SMBs. Phase 3 delivers a full powerful SaaS platform for enterprises at a fraction of the cost of their current solutions. Each phase proves that self-serve can beat sales-led, and AI-powered iteration can beat legacy codebases.

## How We Win
1. Self-serve beats sales-led - No sales team means dramatically lower costs passed to customers
2. Widgets as high-velocity PLG - Works for every business size, gets distribution, guides to bigger products
3. Beautiful design is function - Not just how it looks but how it works. Intuitive enough that onboarding is instant, scaling is automatic, and complexity disappears. Lower churn because people actually enjoy using it
4. Modular architecture from day one - Start unified, split into services when scale demands it. Scale infinitely without rebuilding
5. AI-native architecture - Not retrofitting, every feature assumes AI exists

## The Three Phases of Clickeen

### Phase 1: Widgets as Trojan Horse
We start with widgets — lightweight, embeddable tools that work for any business size. They are simple, high-value, and instantly distributable through self-serve channels. This gives Clickeen immediate reach: every widget placed on a website becomes both a value driver for the customer and a distribution channel for us. Widgets prove that product-led growth can generate adoption at scale without a sales team.  
**What we’re building now:** The first set of widgets and the supporting infrastructure (embed service, tokens, usage metering, billing hooks, system icons). This phase is about shipping fast, proving distribution, and validating that self-serve onboarding works.

### Phase 2: Low-Cost SaaS for SMBs
Once distribution is established, we layer on broader SaaS software for small and medium businesses. This software is priced accessibly — solving the economic problem that SMBs face with overpriced, sales-led tools. By leveraging the widget footprint, we already have trust and awareness in place. Phase 2 proves that AI-powered iteration and self-serve design can deliver powerful SaaS functionality at a fraction of the cost.  
**What this means for development:** Extend the platform beyond widgets, build modular but cohesive features, and ensure the architecture scales for more complex SaaS workflows while maintaining self-serve simplicity.

### Phase 3: Enterprise-Grade SaaS Platform
With the foundation in place, Clickeen evolves into a full SaaS platform for enterprises. The economics are radically different: because we never carried the burden of a sales-led model, we can deliver enterprise-grade features at a fraction of incumbent prices. By this stage, Clickeen is not just a widget company — it is a full platform that demonstrates how AI-native, product-led SaaS can disrupt both SMB and enterprise markets.  
**What this means for development:** Mature the architecture for enterprise scale (observability, compliance, integrations), while keeping the product intuitive. The goal is to prove that even the largest companies prefer product-led SaaS when it is powerful, affordable, and beautifully designed.

**Git:**  
- Stage the file.  
- Commit with message: `docs: add WhyClickeen.md with expanded Three Phases`  
- Push to the current branch.  

Confirm completion.
---

### Phase-1 Implementation Snapshot (FROZEN)

- **Services & Deployments:** Four Vercel projects — `c-keen-app` (Studio/Console), `c-keen-site` (Marketing), `c-keen-embed` (Edge Embed), `c-keen-api` (**Paris — HTTP API**).
- **Data plane:** Supabase (Postgres + Auth + RLS).
- **Edge config:** **Vercel Edge Config** (runtime read-only; any writes happen in CI with a scoped token).
- **Health:** `/api/healthz` returns `{ sha, env, up, deps: { supabase, edgeConfig } }` with 200 on pass and 503 on dependency failure.
- **Embed budget:** ≤28KB gz (loader + minimal runtime); per-widget ≤10KB gz initial render.

> Historical sections below are retained for context; the snapshot above reflects the current, frozen Phase-1 state.
</file>

<file path="packages/embed-core/index.ts">
export function mountShadow(host, html, cssText){const root=host.shadowRoot||host.attachShadow({mode:'open'});const st=document.createElement('style');st.textContent=cssText;root.append(st);const wrap=document.createElement('div');wrap.innerHTML=html;root.append(wrap);return root;}
export function beacon(type, meta={}){try{navigator.sendBeacon?.('/api/ingest', JSON.stringify({type,meta,ts:Date.now()}));}catch{}}
</file>

<file path="packages/embed-core/package.json">
{ "name": "@ck/embed-core", "version": "0.0.0", "type": "module", "main": "dist/index.js", "types": "dist/index.d.ts", "exports": "./dist/index.js", "files": ["dist"] }
</file>

<file path="packages/studio-shell/src/ui/Icon.tsx">
import React, { useEffect, useState } from 'react';

type IconSize = 'sm' | 'md' | 'lg';
type CacheEntry = { svg: string; ts: number };

const MAX_CACHE_SIZE = 120;
const TARGET_SIZE = 80;
const CACHE_TTL_MS = 10 * 60 * 1000; // 10 minutes

const cache = new Map<string, CacheEntry>();

function prune() {
  if (cache.size <= MAX_CACHE_SIZE) return;
  const entries = Array.from(cache.entries()).sort((a, b) => a[1].ts - b[1].ts);
  const toRemove = Math.max(0, cache.size - TARGET_SIZE);
  for (const [key] of entries.slice(0, toRemove)) cache.delete(key);
}

function toKebab(name: string) {
  return name.replace(/\./g, '-');
}

function pathFor(name: string) {
  return `/dieter/icons/svg/${toKebab(name)}.svg`;
}

async function fetchIcon(name: string): Promise<string> {
  const hit = cache.get(name);
  if (hit) {
    const isFresh = Date.now() - hit.ts < CACHE_TTL_MS;
    if (isFresh) return hit.svg;
    // stale -> treat as miss; update timestamp after re-fetch
    cache.delete(name);
  }
  try {
    const res = await fetch(pathFor(name));
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const svg = await res.text();
    cache.set(name, { svg, ts: Date.now() });
    prune();
    return svg;
  } catch (e) {
    console.warn(`[studio] Icon load failed: ${name}`, e);
    const fallback = '⚠️';
    cache.set(name, { svg: fallback, ts: Date.now() });
    prune();
    return fallback;
  }
}

export function Icon({
  name,
  size = 'md',
  ariaLabel,
  className,
}: {
  name: string;
  size?: IconSize;
  ariaLabel?: string;
  className?: string;
}) {
  const [svg, setSvg] = useState<string | null>(null);

  useEffect(() => {
    let cancelled = false;
    setSvg(null);
    fetchIcon(name).then(result => {
      if (!cancelled) setSvg(result);
    });
    return () => { cancelled = true; };
  }, [name]);

  // Loading placeholder
  if (svg === null) {
    return <span className={`studio-icon studio-icon--loading ${className ?? ''}`} data-size={size} aria-hidden="true" />;
  }

  // Missing fallback
  if (svg === '⚠️') {
    return <span className={`studio-icon studio-icon--missing ${className ?? ''}`} data-size={size} aria-hidden="true">⚠️</span>;
  }

  // Inline SVG (color via currentColor)
  return (
    <span
      className={`studio-icon ${className ?? ''}`}
      data-size={size}
      role={ariaLabel ? 'img' : undefined}
      aria-label={ariaLabel}
      aria-hidden={ariaLabel ? undefined : true}
      dangerouslySetInnerHTML={{ __html: svg }}
    />
  );
}
</file>

<file path="packages/studio-shell/src/index.js">
(function() {
  const listeners = new Map();
  const slots = new Map();
  const validSlots = new Set([
    'slot-templateRow',
    'slot-left',
    'slot-center',
    'slot-right'
  ]);

  let state = Object.freeze({
    theme: 'light',
    viewport: 'desktop',
    leftCollapsed: false,
    rightCollapsed: false,
    panel: null
  });

  let readyResolve;
  const readyPromise = new Promise((resolve) => { readyResolve = resolve; });
  let readyFired = false;

  function freeze(obj) { return Object.freeze({ ...obj }); }

  function emit(event, payload) {
    const frozen = freeze(payload || {});
    const cbs = listeners.get(event);
    if (cbs) {
      cbs.forEach(cb => { try { cb(frozen); } catch (e) { setTimeout(() => { throw e; }); } });
    }
  }

  const validEvents = new Set(['studio:ready','studio:theme','studio:viewport','studio:panel']);

  function on(event, handler) {
    if (!validEvents.has(event)) throw new Error(`Unknown event: ${event}`);
    if (!listeners.has(event)) listeners.set(event, new Set());
    listeners.get(event).add(handler);
    return () => listeners.get(event)?.delete(handler);
  }

  function ensureSlotId(slotId) {
    if (!validSlots.has(slotId)) throw new Error(`Unknown slot: ${slotId}`);
    const el = document.getElementById(slotId);
    if (!el) throw new Error(`Slot element not found: ${slotId}`);
    return el;
  }

  function getSlot(slotId) {
    ensureSlotId(slotId);
    return slots.get(slotId) || null;
  }

  function mount(slotId, node) {
    const slotEl = ensureSlotId(slotId);
    if (slots.has(slotId)) throw new Error(`Slot already mounted: ${slotId}`);
    if (!(node instanceof Node)) throw new Error('mount expects a DOM Node');
    // Clear existing children before mount
    slotEl.replaceChildren(node);
    slots.set(slotId, node);
    return node;
  }

  function unmount(slotId) {
    ensureSlotId(slotId);
    if (!slots.has(slotId)) throw new Error(`Slot not mounted: ${slotId}`);
    const slotEl = document.getElementById(slotId);
    slotEl.replaceChildren();
    slots.delete(slotId);
  }

  function applyThemeViewport() {
    const center = document.getElementById('centerCanvas');
    if (!center) return;
    // remove previous classes
    center.classList.remove('studio-theme-light','studio-theme-dark','studio-viewport-desktop','studio-viewport-mobile');
    center.classList.add(`studio-theme-${state.theme}`);
    center.classList.add(`studio-viewport-${state.viewport}`);
  }

  function setTheme(theme, source = 'host') {
    if (!['light','dark'].includes(theme)) throw new Error('Invalid theme');
    state = freeze({ ...state, theme });
    applyThemeViewport();
    emit('studio:theme', { theme, source });
    return theme;
  }

  function setViewport(viewport, source = 'host') {
    if (!['desktop','mobile'].includes(viewport)) throw new Error('Invalid viewport');
    state = freeze({ ...state, viewport });
    applyThemeViewport();
    emit('studio:viewport', { viewport, source });
    return viewport;
  }

  function togglePanel(which, collapsed, source = 'host') {
    if (!['left','right'].includes(which)) throw new Error('Invalid panel');
    const key = which === 'left' ? 'leftCollapsed' : 'rightCollapsed';
    const value = typeof collapsed === 'boolean' ? collapsed : !state[key];
    state = freeze({ ...state, [key]: value, panel: which });
    const el = document.getElementById(which === 'left' ? 'slot-left' : 'slot-right');
    if (el) el.classList.toggle('collapsed', value);
    emit('studio:panel', { panel: which, collapsed: value, source });
    return value;
  }

  function getState() { return state; }

  function destroy() {
    // remove listeners
    listeners.clear();
    // unmount slots
    Array.from(slots.keys()).forEach(unmount);
  }

  function ready() {
    if (!readyFired) {
      readyFired = true;
      applyThemeViewport();
      const s = getState();
      const payload = { state: s };
      emit('studio:ready', payload);
      readyResolve(s);
    }
    return readyPromise;
  }

  // Expose global
  const api = {
    ready,
    destroy,
    on,
    getSlot,
    mount,
    unmount,
    getState,
    setTheme,
    setViewport,
    togglePanel
  };

  // Attach to window.Studio (UMD iife global-name will also set this)
  if (typeof window !== 'undefined') {
    window.Studio = api;
  }
})();
</file>

<file path="packages/studio-shell/src/index.ts">
import React from 'react';

// Minimal StudioRoot component
const StudioRoot: React.FC<{ children?: React.ReactNode }> = ({ children }) => {
  return React.createElement('div', { id: 'studio-root', className: 'studio-shell' }, children);
};

// Minimal event bus stub (no-ops for V0)
export const studioBus = {
  emit: (_evt?: unknown) => {},
  on: (_listener?: unknown) => () => {}
};

// API stubs for V0
export function setTheme(_theme: 'light' | 'dark') {}
export function setViewport(_vp: 'desktop' | 'mobile') {}

// Exports
export const StudioShell = StudioRoot;
export default StudioRoot;
</file>

<file path="packages/studio-shell/src/studio.css">
/* Studio Shell CSS - scoped to center canvas for theme and viewport */
/* Import Dieter tokens but scope them under #centerCanvas to prevent global bleed */
@import url("tokens.css");

#centerCanvas {
  --studio-topbar-height: 48px;
  --studio-template-row-height: 36px;
  --studio-panel-width: 280px;
}

.studio-topbar {
  height: var(--studio-topbar-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 12px;
  border-bottom: 1px solid var(--ck-color-border, #e5e7eb);
  background: var(--ck-color-bg, #ffffff);
}

.studio-grid {
  display: grid;
  grid-template-rows: var(--studio-topbar-height) var(--studio-template-row-height) 1fr;
  grid-template-columns: var(--studio-panel-width) 1fr var(--studio-panel-width);
  grid-template-areas:
    "topbar topbar topbar"
    "template template template"
    "left center right";
  min-height: 100vh;
}

.studio-topbar { grid-area: topbar; }
.studio-template-row { grid-area: template; }
.panel-left { grid-area: left; }
.panel-center { grid-area: center; }
.panel-right { grid-area: right; }

.studio-template-row:empty { display: none; }

.panel {
  border-right: 1px solid var(--ck-color-border, #e5e7eb);
  background: var(--ck-color-bg-subtle, #fafafa);
}
.panel-right { border-right: none; border-left: 1px solid var(--ck-color-border, #e5e7eb); }

#centerCanvas {
  height: 100%;
  width: 100%;
  overflow: auto;
  background: var(--ck-canvas-bg, #ffffff);
}

/* Theme and viewport are applied ONLY to centerCanvas */
#centerCanvas.studio-theme-light { --ck-canvas-bg: #ffffff; color: #111827; }
#centerCanvas.studio-theme-dark { --ck-canvas-bg: #0b0f1a; color: #e5e7eb; }

#centerCanvas.studio-viewport-desktop { padding: 24px; }
#centerCanvas.studio-viewport-mobile {
  padding: 16px;
  max-width: 420px;
  margin: 0 auto;
}

/* Collapsible panels */
.panel.collapsed { display: none; }

.studio-controls {
  display: flex;
  gap: 8px;
}

.segmented {
  display: inline-flex;
  border: 1px solid var(--ck-color-border, #e5e7eb);
  border-radius: 8px;
  overflow: hidden;
}
.segmented button {
  padding: 6px 10px;
  background: transparent;
  border: 0;
  cursor: pointer;
}
.segmented button[aria-pressed="true"] {
  background: var(--ck-color-bg-muted, #f3f4f6);
}
</file>

<file path="packages/studio-shell/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Studio Shell Demo</title>
    <link rel="stylesheet" href="dist/tokens.css" />
    <link rel="stylesheet" href="dist/studio.css" />
    <style>
      html, body { height: 100%; margin: 0; }
    </style>
  </head>
  <body>
    <div class="studio-grid">
      <div class="studio-topbar">
        <strong>Studio</strong>
        <div class="studio-controls">
          <div class="segmented" id="themeCtl">
            <button data-theme="light" aria-pressed="true">Light</button>
            <button data-theme="dark">Dark</button>
          </div>
          <div class="segmented" id="viewportCtl">
            <button data-viewport="desktop" aria-pressed="true">Desktop</button>
            <button data-viewport="mobile">Mobile</button>
          </div>
        </div>
      </div>
      <div id="slot-templateRow" class="studio-template-row"></div>
      <div id="slot-left" class="panel panel-left">
        <div style="padding:12px">Left panel<br/>Lorem ipsum dolor sit amet.</div>
        <button id="toggleLeft" style="margin:12px">Toggle Left</button>
      </div>
      <div id="slot-center" class="panel panel-center">
        <div id="centerCanvas" class="studio-theme-light studio-viewport-desktop">
          <div style="padding:24px">
            <h2>Center Canvas</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.</p>
          </div>
        </div>
      </div>
      <div id="slot-right" class="panel panel-right">
        <div style="padding:12px">Right panel<br/>Duis aute irure dolor in reprehenderit.</div>
        <button id="toggleRight" style="margin:12px">Toggle Right</button>
      </div>
    </div>

    <script src="dist/studio.js"></script>
    <script>
      Studio.ready().then(() => {
        // Controls
        const themeCtl = document.getElementById('themeCtl');
        const viewportCtl = document.getElementById('viewportCtl');
        themeCtl.addEventListener('click', (e) => {
          const btn = e.target.closest('button'); if (!btn) return;
          themeCtl.querySelectorAll('button').forEach(b => b.setAttribute('aria-pressed','false'));
          btn.setAttribute('aria-pressed','true');
          Studio.setTheme(btn.dataset.theme, 'user');
        });
        viewportCtl.addEventListener('click', (e) => {
          const btn = e.target.closest('button'); if (!btn) return;
          viewportCtl.querySelectorAll('button').forEach(b => b.setAttribute('aria-pressed','false'));
          btn.setAttribute('aria-pressed','true');
          Studio.setViewport(btn.dataset.viewport, 'user');
        });
        document.getElementById('toggleLeft').onclick = () => Studio.togglePanel('left', undefined, 'user');
        document.getElementById('toggleRight').onclick = () => Studio.togglePanel('right', undefined, 'user');

        // Demo: mount template row content then unmount to show auto-hide
        const tmp = document.createElement('div');
        tmp.textContent = 'Template Row Content';
        Studio.mount('slot-templateRow', tmp);
        setTimeout(() => Studio.unmount('slot-templateRow'), 1500);
      });

      Studio.on('studio:theme', (p) => console.log('theme', p));
      Studio.on('studio:viewport', (p) => console.log('viewport', p));
      Studio.on('studio:panel', (p) => console.log('panel', p));
      Studio.on('studio:ready', (p) => console.log('ready', p));
    </script>
  </body>
  </html>
</file>

<file path="packages/studio-shell/package.json">
{
  "name": "@ck/studio-shell",
  "version": "0.1.0",
  "private": false,
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": "./dist/index.js",
  "files": ["dist"],
  "sideEffects": false,
  "scripts": {
    "build": "tsc"
  },
  "dependencies": {
    "react": "^18.2.0"
  },
  "peerDependencies": {
    "react": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.0",
    "typescript": "^5.0.0"
  }
}
</file>

<file path="packages/studio-shell/tsconfig.json">
{
  "compilerOptions": {
    "target": "es2019",
    "module": "commonjs",
    "moduleResolution": "node",
    "jsx": "react-jsx",
    "declaration": true,
    "outDir": "dist",
    "rootDir": "src",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "strict": false
  },
  "include": ["src"]
}
</file>

<file path="packages/widgets/contact-form.ts">
import { mountShadow, beacon } from '@ck/embed-core';

interface WidgetConfig {
  title?: string;
  successText?: string;
  theme?: 'light' | 'dark';
  fields?: {
    name?: boolean;
    email?: boolean;
    message?: boolean;
  };
}

class ContactFormWidget {
  private host: HTMLElement;
  private config: WidgetConfig;
  private root: ShadowRoot | null = null;

  constructor(host: HTMLElement, config: WidgetConfig = {}) {
    this.host = host;
    this.config = this.validateConfig(config);
    this.mount();
  }

  private validateConfig(config: WidgetConfig): WidgetConfig {
    return {
      title: config.title || 'Contact us',
      successText: config.successText || 'Thanks! We received your message.',
      theme: config.theme || 'light',
      fields: {
        name: config.fields?.name !== false,
        email: true, // Always required
        message: config.fields?.message !== false,
        ...config.fields
      }
    };
  }

  private getLabels() {
    return {
      name: this.config.fields?.name ? 'Name' : '',
      email: 'Email',
      message: this.config.fields?.message ? 'Message' : '',
      submit: 'Send',
      success: this.config.successText || 'Thanks! We received your message.'
    };
  }

  private getCSS() {
    const isDark = this.config.theme === 'dark';
    return `
      :host{all:initial}
      *{font-family:ui-sans-serif,system-ui,-apple-system;box-sizing:border-box}
      .ck{display:grid;gap:10px;padding:16px;border-radius:10px;border:1px solid ${isDark ? '#444' : '#ddd'};background:${isDark ? '#1a1a1a' : '#fff'};color:${isDark ? '#fff' : '#000'}}
      input,textarea{padding:10px 12px;border:1px solid ${isDark ? '#555' : '#ccc'};border-radius:8px;background:${isDark ? '#2a2a2a' : '#fff'};color:${isDark ? '#fff' : '#000'}}
      button{padding:10px 14px;border-radius:8px;border:0;background:#2F80ED;color:#fff;cursor:pointer}
      label{display:block;margin-bottom:4px;font-weight:500}
    `;
  }

  private getHTML() {
    const L = this.getLabels();
    const title = this.config.title ? `<h3 style="margin:0 0 16px 0;font-size:1.2rem">${this.config.title}</h3>` : '';
    
    const fields = [];
    if (L.name) fields.push(`<label>${L.name}<input name="name" required/></label>`);
    if (L.email) fields.push(`<label>${L.email}<input type="email" name="email" required/></label>`);
    if (L.message) fields.push(`<label>${L.message}<textarea name="message" rows="4" required></textarea></label>`);
    
    return `
      <form class="ck" aria-label="Contact form">
        ${title}
        ${fields.join('')}
        <button type="submit">${L.submit}</button>
        <p id="ck-success" style="display:none">${L.success}</p>
      </form>
    `;
  }

  private mount(reuse = false) {
    if (reuse && this.root) {
      // Update existing shadow root
      const newHTML = this.getHTML();
      const newCSS = this.getCSS();
      
      // Update styles
      const styleEl = this.root.querySelector('style');
      if (styleEl) styleEl.textContent = newCSS;
      
      // Update content
      const wrap = this.root.querySelector('div');
      if (wrap) wrap.innerHTML = newHTML;
      
      // Re-attach event listeners
      this.attachEventListeners();
    } else {
      // Create new shadow root
      this.root = mountShadow(this.host, this.getHTML(), this.getCSS());
      this.attachEventListeners();
    }
  }

  private attachEventListeners() {
    if (!this.root) return;
    
    const form = this.root.querySelector('form');
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const data = Object.fromEntries(new FormData(form as HTMLFormElement).entries());
      
      try {
        await fetch('/api/form/DEMO_PUBLIC_ID', {
          method: 'POST',
          headers: { 'content-type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const successEl = this.root?.getElementById('ck-success');
        if (successEl) successEl.style.display = 'block';
        
        beacon('submit', { ok: true });
      } catch (error) {
        console.error('Form submission failed:', error);
        beacon('submit', { ok: false, error: error.message });
      }
    });
    
    beacon('impression', {});
  }

  update(newConfig: WidgetConfig) {
    this.config = this.validateConfig({ ...this.config, ...newConfig });
    this.mount(true);
  }
}

export function renderContactForm(host: HTMLElement, config: WidgetConfig = {}) {
  return new ContactFormWidget(host, config);
}
</file>

<file path="packages/widgets/package.json">
{ "name": "@ck/widgets", "version": "0.0.0", "type": "module", "main": "dist/index.js", "types": "dist/index.d.ts", "exports": "./dist/index.js", "files": ["dist"] }
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="scripts/build-dieter.js">
#!/usr/bin/env node
/*
 Build @ck/dieter artifacts to dieter/dist using a deterministic, cross-platform flow:
 - Normalize SVGs to fill="currentColor" (scripts/process-svgs.js)
 - Verify SVGs (scripts/verify-svgs.js)
 - Copy tokens/tokens.css -> dist/tokens.css
 - Copy icons/icons.json -> dist/icons/icons.json
 - Copy icons/svg/* -> dist/icons/svg/*
*/

const fs = require('node:fs');
const path = require('node:path');
const { spawnSync } = require('node:child_process');

function copyRecursiveSync(source, destination) {
  const stat = fs.statSync(source);
  if (stat.isDirectory()) {
    if (!fs.existsSync(destination)) fs.mkdirSync(destination, { recursive: true });
    for (const entry of fs.readdirSync(source)) {
      const src = path.join(source, entry);
      const dst = path.join(destination, entry);
      copyRecursiveSync(src, dst);
    }
  } else {
    const dir = path.dirname(destination);
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
    fs.copyFileSync(source, destination);
  }
}

function runNodeScript(scriptRelPath) {
  const p = path.resolve(__dirname, scriptRelPath);
  const res = spawnSync(process.execPath, [p], { stdio: 'inherit' });
  if (res.status !== 0) {
    console.error(`[build-dieter] Subprocess failed: ${scriptRelPath} (exit ${res.status})`);
    process.exit(res.status || 1);
  }
}

function main() {
  const repoRoot = path.resolve(__dirname, '..');
  const dieterRoot = path.resolve(repoRoot, 'dieter');
  const dist = path.join(dieterRoot, 'dist');

  // 1) Normalize and verify SVGs in-place under dieter/icons/svg
  runNodeScript('process-svgs.js');
  runNodeScript('verify-svgs.js');

  // 2) Recreate dist
  fs.rmSync(dist, { recursive: true, force: true });
  fs.mkdirSync(dist, { recursive: true });

  // 3) Copy tokens
  const tokensSrc = path.join(dieterRoot, 'tokens', 'tokens.css');
  const tokensDst = path.join(dist, 'tokens.css');
  if (!fs.existsSync(tokensSrc)) {
    console.error('[build-dieter] Missing tokens source:', tokensSrc);
    process.exit(1);
  }
  copyRecursiveSync(tokensSrc, tokensDst);

  // 4) Copy icons manifest and svgs
  const iconsJsonSrc = path.join(dieterRoot, 'icons', 'icons.json');
  const iconsJsonDst = path.join(dist, 'icons', 'icons.json');
  const svgsSrc = path.join(dieterRoot, 'icons', 'svg');
  const svgsDst = path.join(dist, 'icons', 'svg');
  if (!fs.existsSync(svgsSrc)) {
    console.error('[build-dieter] Missing icons svg directory:', svgsSrc);
    process.exit(1);
  }
  if (fs.existsSync(iconsJsonSrc)) copyRecursiveSync(iconsJsonSrc, iconsJsonDst);
  copyRecursiveSync(svgsSrc, svgsDst);

  console.log(`[build-dieter] Built Dieter assets into ${dist}`);
}

main();
</file>

<file path="scripts/copy-dieter-assets.js">
#!/usr/bin/env node
/*
 Cross-platform build-time copy of Dieter assets into apps/app/public/dieter.
 This replaces the symlink approach to ensure CI/Vercel reliability.
*/

const fs = require('node:fs');
const path = require('node:path');

function copyRecursiveSync(source, destination) {
  const stat = fs.statSync(source);
  if (stat.isDirectory()) {
    if (!fs.existsSync(destination)) {
      fs.mkdirSync(destination, { recursive: true });
    }
    for (const entry of fs.readdirSync(source)) {
      const src = path.join(source, entry);
      const dst = path.join(destination, entry);
      copyRecursiveSync(src, dst);
    }
  } else {
    fs.copyFileSync(source, destination);
  }
}

function main() {
  const src = path.resolve(__dirname, '..', 'dieter', 'dist');
  const dst = path.resolve(__dirname, '..', 'apps', 'app', 'public', 'dieter');

  if (!fs.existsSync(src)) {
    console.error(`[copy-dieter-assets] Source not found: ${src}. Did you run pnpm --filter @ck/dieter build?`);
    process.exit(1);
  }

  // If destination is a symlink, remove it first
  try {
    const st = fs.lstatSync(dst);
    if (st.isSymbolicLink()) {
      fs.unlinkSync(dst);
    }
  } catch (_) {}

  // Clean destination then copy
  fs.rmSync(dst, { recursive: true, force: true });
  fs.mkdirSync(dst, { recursive: true });
  copyRecursiveSync(src, dst);
  // Ensure README exists to keep directory in repo but prevent asset commits
  const readmePath = path.join(dst, 'README.md');
  if (!fs.existsSync(readmePath)) {
    fs.writeFileSync(readmePath, '# Generated assets\n\nThis folder is populated by the Dieter copy step. Do not commit files here.');
  }
  console.log(`[copy-dieter-assets] Copied assets from ${src} to ${dst}`);
}

main();
</file>

<file path="scripts/e2e-prod-smoke.sh">
#!/usr/bin/env bash
set -euo pipefail

# Config: defaults to prod URLs; allow override via env.
SITE_URL="${SITE_URL:-https://c-keen-site.vercel.app}"
EMBED_URL="${EMBED_URL:-https://c-keen-embed.vercel.app}"

command -v jq >/dev/null 2>&1 || { echo "jq is required"; exit 1; }

echo "1) Create anonymous widget on SITE..."
CREATE_RES="$(curl -sS -X POST "$SITE_URL/api/widgets/anonymous" \
  -H 'content-type: application/json' \
  --data '{"email":"smoke@clickeen.test","type":"contact-form","config":{}}')"

echo "Create response: $CREATE_RES"

PUBLIC_KEY="$(echo "$CREATE_RES" | jq -r '.publicKey // empty')"
PUBLIC_ID="$(echo "$CREATE_RES" | jq -r '.publicId // empty')"

if [[ -z "$PUBLIC_KEY" || -z "$PUBLIC_ID" ]]; then
  echo "✗ Missing keys from anon create"; exit 1
fi
echo "✓ Keys: publicKey=$PUBLIC_KEY  publicId=$PUBLIC_ID"

echo
echo "2) Check prod embed headers for $PUBLIC_ID..."
curl -sS -I "$EMBED_URL/api/e/$PUBLIC_ID?v=1" \
| tr -d '\r' \
| grep -Ei '^(cache-control|x-cache-ttl|x-cache-fresh|x-template-version):' \
|| { echo "✗ Missing expected headers"; exit 1; }
echo "✓ Headers OK"

echo
echo "3) Submit a form via the embed endpoint (expects { ok: true })..."
SUBMIT_RES="$(curl -sS -X POST "$EMBED_URL/api/form/$PUBLIC_ID" \
  -H 'content-type: application/json' \
  -d '{"test":"data"}')"
echo "Submit response: $SUBMIT_RES"

echo "$SUBMIT_RES" | jq -e '.ok == true' >/dev/null \
  && echo "✓ E2E smoke passed" \
  || { echo "✗ Submission failed"; exit 1; }

# End of script
</file>

<file path="scripts/gen-icon-types.mjs">
import fs from 'node:fs';

const symbolSetPath = '/Users/piero_macpro/tools/sf-symbols/src/symbolSet.json';
const outDir = '/Users/piero_macpro/code/CKeen/apps/app/dieter/tokens';
const outPath = `${outDir}/icon.types.ts`;

const raw = fs.readFileSync(symbolSetPath, 'utf8');
const data = JSON.parse(raw);

const iconNames = [];
for (const [symbolName, styles] of Object.entries(data.symbols)) {
  for (const styleName of Object.keys(styles)) {
    iconNames.push(`${symbolName}--${styleName}`);
  }
}

iconNames.sort((a, b) => (a < b ? -1 : a > b ? 1 : 0));

const tsContent = 'export type IconName =\n' + iconNames.map(name => `  | "${name}"`).join('\n') + '\n';

fs.mkdirSync(outDir, { recursive: true });
fs.writeFileSync(outPath, tsContent);
console.log(`Generated IconName type with ${iconNames.length} icons -> ${outPath}`);
</file>

<file path="scripts/link-dieter.js">
const fs = require('fs');
const path = require('path');
const cp = require('child_process');

function findRoot(startDir = __dirname) {
  let dir = startDir;
  while (!fs.existsSync(path.join(dir, 'pnpm-workspace.yaml'))) {
    const parent = path.dirname(dir);
    if (parent === dir) throw new Error('Not inside monorepo root (pnpm-workspace.yaml not found)');
    dir = parent;
  }
  return dir;
}

function removeTarget(target) {
  if (!fs.existsSync(target)) return;
  try { fs.unlinkSync(target); } catch {
    try { fs.rmSync(target, { recursive: true, force: true }); }
    catch (e) { console.error('Failed to remove existing link/folder:', target, e.message); process.exit(1); }
  }
}

(function main() {
  try {
    const root = findRoot();
    const source = path.join(root, 'dieter', 'dist');
    const target = path.join(root, 'apps', 'app', 'public', 'dieter');

    if (!fs.existsSync(source)) {
      console.warn('[link-dieter] dist folder not found, attempting to create placeholder...');
      try { fs.mkdirSync(source, { recursive: true }); } catch {}
      try { fs.writeFileSync(path.join(source, 'tokens.css'), '/* placeholder */'); } catch {}
    }

    removeTarget(target);

    try {
      fs.symlinkSync(source, target, 'dir');
      console.log('[link-dieter] Created symlink:', target, '→', source);
      process.exit(0);
    } catch (e) {
      console.warn('[link-dieter] Symlink failed, attempting Windows junction fallback...', e.message);
      try {
        cp.execSync(`mklink /J "${target}" "${source}"`, { stdio: 'inherit', shell: 'cmd.exe' });
        console.log('[link-dieter] Created junction (Windows fallback):', target, '→', source);
        process.exit(0);
      } catch (err) {
        console.error('[link-dieter] Failed to create junction:', err.message);
        process.exit(1);
      }
    }
  } catch (fatal) {
    console.error('[link-dieter] Fatal error:', fatal.message);
    process.exit(1);
  }
})();
</file>

<file path="scripts/process-svgs.js">
const fs = require('fs');
const path = require('path');

const svgDir = path.join(__dirname, '../dieter/icons/svg');
const manifestPath = path.join(__dirname, '../dieter/icons/icons.json');

let processed = 0;
for (const file of fs.readdirSync(svgDir)) {
  if (!file.endsWith('.svg')) continue;
  const filePath = path.join(svgDir, file);
  let content = fs.readFileSync(filePath, 'utf8');

  // Normalize quotes
  content = content.replace(/fill='([^']*)'/g, 'fill="$1"');

  // Replace any explicit fill with currentColor (attribute form)
  content = content.replace(/fill="(?!currentColor)[^"]*"/g, 'fill="currentColor"');

  // Replace inline style fill declarations to currentColor
  content = content.replace(/style="([^"]*)"/g, (m, styles) => {
    const updated = styles.replace(/fill\s*:\s*[^;\"]+/gi, 'fill: currentColor');
    return `style="${updated}"`;
  });

  // If no fill anywhere, add to root <svg>
  if (!/fill=/.test(content)) {
    content = content.replace(/<svg([^>]*)>/, '<svg$1 fill="currentColor">');
  }

  fs.writeFileSync(filePath, content);
  processed++;
}

// Manifest count check
try {
  const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
  const manifestCount = manifest && manifest.symbols ? Object.keys(manifest.symbols).length : 0;
  const svgCount = fs.readdirSync(svgDir).filter(f => f.endsWith('.svg')).length;
  if (manifestCount && manifestCount !== svgCount) {
    console.warn(`[process-svgs] Count mismatch: manifest=${manifestCount} svgFiles=${svgCount}`);
  } else {
    console.log(`[process-svgs] Count OK: ${svgCount} SVGs match manifest (${manifestCount}).`);
  }
} catch (e) {
  console.warn('[process-svgs] Unable to read icons.json for count verification:', String(e && e.message ? e.message : e));
}

console.log(`Processed ${processed} SVG files in ${svgDir}`);
</file>

<file path="scripts/scope-tokens.js">
#!/usr/bin/env node
/*
 Read a tokens.css file and rewrite :root selectors to be scoped under #centerCanvas
 to avoid global cascade bleed in Studio chrome.

 Usage: node scripts/scope-tokens.js <sourceTokensCss> <scopedOutputCss>
*/
const fs = require('node:fs');
const path = require('node:path');

function main() {
  const [src, dst] = process.argv.slice(2);
  if (!src || !dst) {
    console.error('Usage: node scripts/scope-tokens.js <sourceTokensCss> <scopedOutputCss>');
    process.exit(1);
  }
  const absSrc = path.resolve(process.cwd(), src);
  const absDst = path.resolve(process.cwd(), dst);
  if (!fs.existsSync(absSrc)) {
    console.error('[scope-tokens] Source not found:', absSrc);
    process.exit(1);
  }
  let css = fs.readFileSync(absSrc, 'utf8');
  // Replace standalone :root selectors with #centerCanvas
  css = css.replace(/(^|\s):root(\s*\{)/g, '$1#centerCanvas$2');
  // Handle :root[...] blocks as well
  css = css.replace(/:root(\s*\[[^\]]+\])/g, '#centerCanvas$1');
  fs.mkdirSync(path.dirname(absDst), { recursive: true });
  fs.writeFileSync(absDst, css);
  console.log(`[scope-tokens] Wrote scoped tokens to ${absDst}`);
}

main();
</file>

<file path="scripts/stability-integrity-scan.zsh">
#!/usr/bin/env zsh
set -u
echo "== INTEGRITY SCAN =="
# List code files that contain literal '...' (possible truncations)
grep -RIn --include='*.{ts,tsx,js,mjs,cjs}' --exclude-dir='node_modules' --exclude-dir='.next' --exclude-dir='.turbo' --exclude-dir='.vercel' '^\s*\.\.\.$|\.\.\.[^a-zA-Z]' apps services packages dieter 2>/dev/null | sed 's/^/SUSPECT: /' || true
echo "== END SCAN =="
</file>

<file path="scripts/verify-svgs.js">
const fs = require('fs');
const path = require('path');
const svgDir = path.join(__dirname, '../dieter/icons/svg');
const manifestPath = path.join(__dirname, '../dieter/icons/icons.json');

const violations = [];
let count = 0;
for (const file of fs.readdirSync(svgDir)) {
  if (!file.endsWith('.svg')) continue;
  count++;
  const content = fs.readFileSync(path.join(svgDir, file), 'utf8');
  // Any fill attribute that is not currentColor is a violation
  const attrFills = content.match(/fill="([^"]*)"/g) || [];
  for (const attr of attrFills) {
    if (!/fill="currentColor"/.test(attr)) violations.push(`${file}: attr ${attr}`);
  }
  // Inline style fill declaration must be currentColor if present
  const styleFills = content.match(/fill\s*:\s*([^;\"]+)/gi) || [];
  for (const s of styleFills) {
    if (!/fill\s*:\s*currentColor/i.test(s)) violations.push(`${file}: style ${s}`);
  }
}

if (violations.length) {
  console.error('[verify-svgs] Found non-currentColor fills:');
  console.error(violations.slice(0, 50).join('\n'));
  console.error(`Total violations: ${violations.length}`);
  process.exit(1);
}

// Count check against manifest
try {
  const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
  const manifestCount = manifest && manifest.symbols ? Object.keys(manifest.symbols).length : 0;
  if (manifestCount && manifestCount !== count) {
    console.warn(`[verify-svgs] Count mismatch: manifest=${manifestCount} svgFiles=${count}`);
  }
} catch (e) {
  console.warn('[verify-svgs] Unable to read icons.json for count verification:', String(e && e.message ? e.message : e));
}

console.log(`[verify-svgs] OK: ${count} SVG files verified (currentColor only)`);
</file>

<file path="services/api/app/api/healthz/route.ts">
import { NextResponse } from 'next/server';
import { getAll } from '@vercel/edge-config';

export const runtime = 'nodejs';
export const dynamic = 'force-dynamic';
export const revalidate = 0;

const SUPABASE_JWKS = process.env.SUPABASE_URL
  ? `${process.env.SUPABASE_URL.replace(/\/+$/,'')}/auth/v1/.well-known/jwks.json`
  : undefined;

async function checkSupabase(timeoutMs = 1000) {
  if (!SUPABASE_JWKS) return false;
  const ctl = new AbortController();
  const t = setTimeout(() => ctl.abort(), timeoutMs);
  try {
    const res = await fetch(SUPABASE_JWKS, { method: 'GET', cache: 'no-store', signal: ctl.signal });
    return res.ok;
  } catch {
    return false;
  } finally {
    clearTimeout(t);
  }
}

async function checkEdgeConfig(timeoutMs = 1000) {
  try {
    await new Promise<void>((resolve, reject) => {
      const t = setTimeout(() => reject(new Error('timeout')), timeoutMs);
      getAll()
        .then(() => {
          clearTimeout(t);
          resolve();
        })
        .catch((err) => {
          clearTimeout(t);
          reject(err);
        });
    });
    return true;
  } catch {
    return false;
  }
}

export async function GET() {
  const [supabaseOk, edgeConfigOk] = await Promise.all([checkSupabase(), checkEdgeConfig()]);
  const body = {
    sha: process.env.VERCEL_GIT_COMMIT_SHA ?? 'unknown',
    env: process.env.VERCEL_ENV ?? process.env.NODE_ENV ?? 'unknown',
    up: true,
    deps: { supabase: supabaseOk, edgeConfig: edgeConfigOk }
  };
  const status = (supabaseOk && edgeConfigOk) ? 200 : 503;
  return NextResponse.json(body, { status });
}
</file>

<file path="services/api/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="services/api/next.config.mjs">
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true
};
export default nextConfig;
</file>

<file path="services/api/package.json">
{
  "name": "@ck/services-api",
  "private": true,
  "version": "0.1.0",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start"
  },
  "dependencies": {
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "@vercel/edge-config": "^1.1.0"
  },
  "devDependencies": {
    "typescript": "^5.5.4",
    "@types/node": "^20.14.12"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="services/api/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "allowJs": true,
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="services/embed/app/api/cfg/[publicId]/route.ts">
export const runtime = 'edge';
export async function GET(_: Request, { params }: { params: { publicId: string }}) {
  const cfg = { publicId: params.publicId, theme: 'light', accent: '#2F80ED' };
  return new Response(JSON.stringify(cfg), { headers: {
    'content-type':'application/json; charset=utf-8',
    'cache-control':'public, max-age=60, stale-while-revalidate=300',
    'etag': '"demo-'+params.publicId+'"'
  }});
}
</file>

<file path="services/embed/app/api/e/[publicId]/route.ts">
export const runtime = 'edge';
export async function GET(request: Request, { params }: { params: { publicId: string }}) {
  const url = new URL(request.url);
  const isPreview = url.searchParams.has('preview') || url.searchParams.has('cfg');
  const cacheControl = isPreview
    ? 'no-store'
    : 'public, max-age=60, stale-while-revalidate=300';
  const templateVersion = url.searchParams.get('v') || '1';
  
  const js = `
(()=> {
  var id = 'ckeen-${params.publicId}';
  var host = document.getElementById(id) || document.querySelector('[data-ckeen="${params.publicId}"]');
  if (!host) { host = document.createElement('div'); host.id = id; (document.currentScript?.parentElement || document.body).appendChild(host); }
  // Compute the origin of this script (the embed service), then import from that origin
  var embedOrigin = (function(){ try { return new URL(document.currentScript.src).origin } catch { return '' } })();
  var s = document.createElement('script');
  s.type = 'module';
  s.textContent = \`
    const ORIGIN = \${embedOrigin};
    import { renderContactForm } from \${ORIGIN ? \`\${ORIGIN}/embed-bundle.js\` : '/embed-bundle.js'};
    
    // Initialize widget with config
    const initialConfig = ${url.searchParams.get('cfg') ? `JSON.parse(atob('${url.searchParams.get('cfg')}'))` : '{}'};
    const widget = renderContactForm(host, initialConfig);
    
    ${isPreview ? `
    // Preview mode: add postMessage listener for live updates
    window.addEventListener('message', (ev) => {
      const allowed = ['http://localhost:3000', 'https://c-keen-site.vercel.app'];
      if (!allowed.includes(ev.origin)) return;
      
      const msg = ev.data;
      if (!msg || msg.type !== 'ckeen:preview:update') return;
      
      try {
        // Validate and update config
        const next = { ...initialConfig, ...msg.config };
        if (widget && typeof widget.update === 'function') {
          widget.update(next);
        }
      } catch (e) {
        console.warn('Preview update failed:', e);
      }
    });
    
    // Signal ready to parent
    window.parent?.postMessage({ type: 'ckeen:preview:ready' }, '*');
    ` : ''}
  \`;
  document.currentScript?.after(s);
})();`;
  
  return new Response(js, {
    headers: {
      'content-type': 'application/javascript; charset=utf-8',
      'Cache-Control': cacheControl,
      'X-Cache-TTL': '60',
      'X-Cache-Fresh': isPreview ? 'false' : 'true',
      'X-Template-Version': templateVersion
    }
  });
}
</file>

<file path="services/embed/app/api/form/[publicId]/route.ts">
export const runtime = 'edge';

/* PHASE1-GUARD: service-role must not run in Edge. Temporarily blocked for security. */
export async function GET() {
  return new Response('Service unavailable on edge (Phase1 guard)', { status: 503 });
}

export async function POST() {
  return new Response('Service unavailable on edge (Phase1 guard)', { status: 503 });
}
</file>

<file path="services/embed/app/api/ingest/route.ts">
export const runtime = 'edge';
export async function POST(req: Request) {
  const evt = await req.json().catch(()=> ({}));
  return new Response(JSON.stringify({ ok: true }), { headers: { 'content-type': 'application/json' } });
}
</file>

<file path="services/embed/public/embed-bundle.js">
export { renderContactForm } from '../../packages/widgets/contact-form';
</file>

<file path="services/embed/scripts/atlas-smoke.mjs">
// Minimal Atlas header smoke test
// - Verifies production headers and preview no-store behavior

const PROD_URL = 'https://c-keen-embed.vercel.app/api/e/DEMO?v=1';
const PREVIEW_URL = 'https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=eyJ0aXRsZSI6IkNPTkZJRyJ9';

async function fetchHeaders(url) {
  const res = await fetch(url, { method: 'GET' });
  return { status: res.status, headers: res.headers };
}

function isIntegerString(value) {
  if (typeof value !== 'string' || value.trim() === '') return false;
  const num = Number(value);
  return Number.isInteger(num);
}

async function run() {
  const failures = [];

  // Production checks
  try {
    const { status, headers } = await fetchHeaders(PROD_URL);
    if (status !== 200) failures.push(`prod status ${status}`);

    const ct = headers.get('content-type') || '';
    if (!ct.includes('application/javascript')) failures.push('prod content-type not application/javascript');

    const cc = headers.get('cache-control') || '';
    if (!cc.includes('public')) failures.push('prod cache-control missing public');

    const ttl = headers.get('x-cache-ttl');
    if (!ttl || !isIntegerString(ttl)) failures.push('prod x-cache-ttl missing or not integer');

    const fresh = headers.get('x-cache-fresh');
    if (fresh !== 'true') failures.push('prod x-cache-fresh not true');

    const tmpl = headers.get('x-template-version');
    if (!tmpl) failures.push('prod x-template-version missing');
  } catch (e) {
    failures.push(`prod fetch error: ${e.message}`);
  }

  // Preview check
  try {
    const { status, headers } = await fetchHeaders(PREVIEW_URL);
    if (status !== 200) failures.push(`preview status ${status}`);
    const cc = headers.get('cache-control');
    if (cc !== 'no-store') failures.push('preview cache-control not no-store');
  } catch (e) {
    failures.push(`preview fetch error: ${e.message}`);
  }

  if (failures.length > 0) {
    console.log(`SMOKE FAIL: ${failures.join('; ')}`);
    process.exit(1);
  } else {
    console.log('SMOKE PASS: Atlas headers OK');
  }
}

run();
</file>

<file path="services/embed/scripts/e2e-real-widget.mjs">
// E2E smoke test: site → atlas → embed
// node:18, ESM only

const SITE_URL = 'https://c-keen-site.vercel.app';
const EMBED_URL = 'https://c-keen-embed.vercel.app';

async function postJson(url, body) {
  const res = await fetch(url, {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify(body),
  });
  let data;
  try { data = await res.json(); } catch { data = null; }
  return { res, data };
}

async function getWithBody(url) {
  const res = await fetch(url, { method: 'GET' });
  const text = await res.text();
  return { res, text };
}

function fail(reason) {
  console.log(`[E2E] FAIL ${reason}`);
  process.exit(1);
}

function normalizePublicKey(obj) {
  if (!obj || typeof obj !== 'object') return undefined;
  return obj.publicKey || obj.public_key || obj.public_id || obj.publicId;
}

function isPositiveIntegerString(value) {
  if (typeof value !== 'string' || value.trim() === '') return false;
  const n = Number(value);
  return Number.isInteger(n) && n > 0;
}

async function run() {
  try {
    // 1) Create real widget on site anonymous API
    const createPayload = {
      email: 'test+cicd@clickeen.com',
      type: 'contact-form',
      config: {
        title: 'E2E',
        successText: 'OK',
        theme: 'light',
        fields: { name: true, email: true, message: true },
      },
    };
    const { res: createRes, data: createData } = await postJson(
      `${SITE_URL}/api/widgets/anonymous`,
      createPayload
    );
    if (createRes.status !== 200) fail(`create status ${createRes.status}`);
    const publicKey = normalizePublicKey(createData);
    if (!publicKey || typeof publicKey !== 'string') fail('missing publicKey from create response');
    console.log(`[E2E] created publicKey=${publicKey}`);

    // 2) Hit embed endpoint for that key
    const { res: embedRes, text: js } = await getWithBody(
      `${EMBED_URL}/api/e/${encodeURIComponent(publicKey)}?v=1`
    );
    if (embedRes.status !== 200) fail(`embed status ${embedRes.status}`);

    const headers = embedRes.headers;
    const cacheControl = headers.get('cache-control') || '';
    const ttl = headers.get('x-cache-ttl');
    const fresh = headers.get('x-cache-fresh');
    const tmplVer = headers.get('x-template-version');
    const contentType = headers.get('content-type') || '';

    if (!contentType.includes('application/javascript')) fail('content-type not application/javascript');
    if (!cacheControl.includes('public')) fail('cache-control missing public');
    if (!isPositiveIntegerString(ttl)) fail('x-cache-ttl missing or not positive integer');
    if (!(fresh === 'true' || fresh === 'false')) fail('x-cache-fresh not true/false');
    if (!tmplVer) fail('x-template-version missing');
    if (!(typeof js === 'string' && js.length > 200 && js.includes('document'))) fail('embed js payload too small/invalid');

    // 3) Log concise summary
    console.log(
      `[E2E] embed status=${embedRes.status} ttl=${ttl} fresh=${fresh} tmplVer=${tmplVer} jsBytes=${js.length}`
    );
    console.log('[E2E] PASS');
  } catch (e) {
    fail(e && e.message ? e.message : String(e));
  }
}

run();
</file>

<file path="services/embed/scripts/smoke-form.mjs">
// End-to-end form submission smoke test
// 1) Create anonymous widget -> expect { publicKey, publicId }
// 2) Submit to embed form endpoint using publicId -> expect ok:true

const SITE_ANON_URL = 'https://c-keen-site.vercel.app/api/widgets/anonymous';
const EMBED_FORM_URL = (publicId) => `https://c-keen-embed.vercel.app/api/form/${publicId}`;

async function createAnonWidget() {
  const res = await fetch(SITE_ANON_URL, {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify({ email: 'qa+smoke@ckeen.dev', type: 'contact-form', config: { title: 'Smoke' } })
  });
  const json = await res.json().catch(() => ({}));
  if (!res.ok) throw new Error(`anon create failed: ${res.status} ${json.error || ''}`);
  const { publicKey, publicId } = json || {};
  if (!publicKey || !publicId) throw new Error('anon create missing publicKey/publicId');
  return { publicKey, publicId };
}

async function submitForm(publicId) {
  const res = await fetch(EMBED_FORM_URL(publicId), {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify({ name: 'E2E', email: 'qa+contact@ckeen.dev', message: 'smoke' })
  });
  const json = await res.json().catch(() => ({}));
  if (!res.ok || !json.ok) throw new Error(`form submit failed: ${res.status} ${JSON.stringify(json)}`);
  return json;
}

async function run() {
  try {
    const { publicId } = await createAnonWidget();
    const res = await submitForm(publicId);
    console.log('SMOKE PASS: form submission ok', res);
  } catch (e) {
    console.error('SMOKE FAIL:', e.message);
    process.exit(1);
  }
}

run();
</file>

<file path="services/embed/.gitignore">
.vercel
</file>

<file path="services/embed/.redeploy.txt">
2025-09-03T21:32:48Z
</file>

<file path="services/embed/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="services/embed/next.config.mjs">
export default { experimental: { serverActions: { allowedOrigins: ['*'] } } };
</file>

<file path="services/embed/package.json">
{
  "name": "@ck/embed-service",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3002",
    "build": "next build",
    "start": "next start -p 3002",
    "smoke:atlas": "node ./scripts/atlas-smoke.mjs",
    "smoke:e2e": "NODE_OPTIONS=--no-warnings node ./scripts/e2e-real-widget.mjs",
    "smoke:form": "NODE_OPTIONS=--no-warnings node ./scripts/smoke-form.mjs"
  },
  "dependencies": {
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "^20.14.12",
    "@types/react": "^18.3.3",
    "typescript": "^5.5.4"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="services/embed/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="tools/ci/check-lockfile.cjs">
/* tools/ci/check-lockfile.cjs */
// Node cjs script to enforce lockfile presence/readability in CI/headless contexts.
// Exits non-zero if pnpm-lock.yaml is missing or unreadable.
const fs = require('fs');
const path = require('path');

const lockPath = path.resolve(process.cwd(), 'pnpm-lock.yaml');
try {
  const stat = fs.statSync(lockPath);
  if (!stat.isFile()) {
    console.error('[lockfile-check] pnpm-lock.yaml exists but is not a regular file:', lockPath);
    process.exit(2);
  }
  const fd = fs.openSync(lockPath, 'r');
  const buf = Buffer.alloc(64);
  fs.readSync(fd, buf, 0, 64, 0);
  fs.closeSync(fd);
  console.log('[lockfile-check] pnpm-lock.yaml present and readable:', lockPath);
} catch (e) {
  console.error('[lockfile-check] pnpm-lock.yaml missing or not readable at repo root:', lockPath);
  console.error(String(e && e.message ? e.message : e));
  process.exit(1);
}
</file>

<file path="tools/ci/verify-pnpm-config.cjs">
/* tools/ci/verify-pnpm-config.cjs */
const fs = require('fs');
const path = require('path');

const roots = ['apps/site','services/embed','dieter'];
const bad = [];
for (const p of roots) {
  for (const f of ['.npmrc','pnpm-lock.yaml']) {
    const fp = path.join(p, f);
    if (fs.existsSync(fp)) bad.push(fp);
  }
}
if (bad.length) {
  console.error('[verify-pnpm-config] Remove nested files:', bad.join(', '));
  process.exit(1);
}

// Enforce packageManager pin at repo root
const pkgPath = path.resolve(process.cwd(), 'package.json');
const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
const pm = pkg.packageManager || '';
const required = 'pnpm@10.15.1';
if (!/^pnpm@/.test(pm)) {
  console.error('[verify-pnpm] packageManager must pin pnpm version in package.json');
  process.exit(1);
}
if (pm !== required) {
  console.error(`[verify-pnpm] Expected ${required}, found ${pm}`);
  process.exit(1);
}

console.log('[verify-pnpm-config] OK: no nested .npmrc/lockfiles and packageManager pinned to', pm);
</file>

<file path="tools/ci/verify-public-dieter-clean.cjs">
#!/usr/bin/env node
/* Fail CI if any files under apps/app/public/dieter (except README.md) are tracked by git */
const { spawnSync } = require('node:child_process');

// List tracked files under the directory (not the directory itself)
const res = spawnSync('git', ['ls-files', '--', 'apps/app/public/dieter/**'], { encoding: 'utf8' });
if (res.status !== 0) {
  console.error('[verify-public-dieter-clean] git ls-files failed');
  process.exit(res.status || 1);
}
const tracked = res.stdout
  .split('\n')
  .map(s => s.trim())
  .filter(Boolean)
  .filter(p => p !== 'apps/app/public/dieter/README.md');
if (tracked.length) {
  console.error('[verify-public-dieter-clean] The following files are tracked but must not be committed:');
  console.error(tracked.join('\n'));
  process.exit(1);
}
console.log('[verify-public-dieter-clean] OK: no tracked files under apps/app/public/dieter');
</file>

<file path="tools/ci/verify-vercel-config.cjs">
/* tools/ci/verify-vercel-config.cjs */
const fs = require('fs');
const path = require('path');
const p = path.join(process.cwd(), 'vercel.json');
if (!fs.existsSync(p)) {
  console.error('[verify-vercel-config] vercel.json missing at repo root');
  process.exit(1);
}
let cfg;
try {
  cfg = JSON.parse(fs.readFileSync(p, 'utf8'));
} catch (e) {
  console.error('[verify-vercel-config] vercel.json is not valid JSON');
  process.exit(1);
}
if ('buildCommand' in cfg && String(cfg.buildCommand || '').trim() !== '') {
  console.error('[verify-vercel-config] REMOVE repo-level "buildCommand" from vercel.json — it overrides per-project builds on Vercel.');
  process.exit(1);
}
const ic = String(cfg.installCommand || '');
if (!ic.includes('--frozen-lockfile')) {
  console.error('[verify-vercel-config] installCommand must enforce "--frozen-lockfile".');
  process.exit(1);
}
console.log('[verify-vercel-config] OK');
</file>

<file path="tools/studioV0_stability.sh">
#!/usr/bin/env bash
set -euo pipefail

# Resolve repo root regardless of where the script is launched from
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"
cd "$ROOT"

echo "== 0) Repo root: $ROOT =="
echo "== 1) Ensure feature branch =="
git switch feat/studio-v0-shell >/dev/null 2>&1 || {
  echo "[FAIL] missing branch feat/studio-v0-shell"; exit 1; }

echo "== 2) Preconditions =="
test -f pnpm-workspace.yaml || { echo "[FAIL] pnpm-workspace.yaml missing"; exit 1; }
test -f tools/verify-studio-shell.cjs || { echo "[FAIL] tools/verify-studio-shell.cjs missing"; exit 1; }
test -f packages/studio-shell/tsconfig.json || { echo "[FAIL] packages/studio-shell/tsconfig.json missing"; exit 1; }

echo "== 3) Hard clean caches (deterministic) =="
rm -rf apps/app/.next .turbo node_modules/.cache \
       packages/studio-shell/dist \
       packages/*/node_modules || true

echo "== 4) Frozen install =="
pnpm install --frozen-lockfile

echo "== 5) Build Dieter (icons/assets) =="
pnpm --filter @ck/dieter build

echo "== 5.1) Verify Dieter assets copied to app public =="
if [[ ! -d "apps/app/public/dieter" ]]; then
  echo "[FAIL] Dieter assets not found in apps/app/public/dieter"; exit 2;
fi

echo "== 6) Build StudioShell (CJS) =="
pnpm --filter @ck/studio-shell build

echo "== 7) Consumer-context smoke (apps/app) =="
node tools/verify-studio-shell.cjs

echo "== 8) Build App (Next) =="
pnpm --filter @ck/app run build

echo "== OK == Stability gates passed (Dieter assets, StudioShell CJS build, smoke verify, App build)"
</file>

<file path="tools/verify-studio-shell.cjs">
const path = require("path");
const { createRequire } = require("module");

const rootDir = path.resolve(__dirname, "..");
const appPkg = path.join(rootDir, "apps", "app", "package.json");
const requireApp = createRequire(appPkg);

try {
  console.log("[verify] Resolving @ck/studio-shell from apps/app…");
  const resolved = requireApp.resolve("@ck/studio-shell");
  console.log("[verify] RESOLVED:", resolved);

  const m = requireApp("@ck/studio-shell");
  const keys = Object.keys(m);
  console.log("[verify] keys:", keys);
  console.log("[verify] default type:", typeof m.default);
  console.log("[verify] StudioShell type:", typeof m.StudioShell);

  if (typeof m.default !== "function" || typeof m.StudioShell !== "function") {
    throw new Error("Expected function exports: default and StudioShell");
  }
  console.log("[verify] OK");
} catch (err) {
  console.error("[verify] FAIL:", err && err.message ? err.message : err);
  process.exit(1);
}
</file>

<file path=".gitignore">
node_modules
.next
dist
out
.env*
*.local
coverage
*.log
.DS_Store
playwright-report
test-results
.vercel
infra/supabase/migrations/
tsconfig.tsbuildinfo
.vercel/project.json

# Prevent accidental legacy Dieter (app-local) resurrection
apps/app/dieter/
!apps/app/public/dieter

/dieter.zip
/packages/studio-shell.zip
*.log
apps/app/public/dieter/**
!apps/app/public/dieter/README.md

.turbo

# Clickeen stabilization (Paris artifacts)
services/api/.next/
services/api/node_modules/
</file>

<file path=".npmrc">
use-lockfile=true
shared-workspace-lockfile=true
</file>

<file path=".prettierrc.json">
{ "printWidth": 100, "singleQuote": true, "trailingComma": "all" }
</file>

<file path=".stylelintignore">
node_modules
dist
build
</file>

<file path="cleanup-verify-4-5-6.txt">
=== CLICKEEN | Verify 4/5/6 (no deletes) ===
Generated: Tue Sep 16 10:50:42 PDT 2025

[VERIFY] infra/: PRESENT & NOT EMPTY -> KEEP (or migrate contents)
[VERIFY] studio-shell/node_modules: PRESENT (tracked=0)
         -> SAFE TO DELETE LOCALLY (cache), NOT IN GIT
[VERIFY] root next.config.ts present; workspace configs -> apps:2 services:2
         -> Likely REDUNDANT if each Next.js project has its own config; recommend delete in next cleanup batch
</file>

<file path="components.json">
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "iconLibrary": "lucide",
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  }
}
</file>

<file path="eslint.config.mjs">
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
  {
    ignores: [
      "node_modules/**",
      ".next/**",
      "out/**",
      "build/**",
      "next-env.d.ts",
    ],
  },
];

export default eslintConfig;
</file>

<file path="package.json">
{
  "name": "clickeen",
  "private": true,
  "packageManager": "pnpm@10.15.1",
  "scripts": {
    "ci:install": "pnpm install --frozen-lockfile",
    "ci:lockfile-check": "node tools/ci/check-lockfile.cjs",
    "ci:verify-pnpm": "node tools/ci/verify-pnpm-config.cjs",
    "ci:verify-vercel-config": "node tools/ci/verify-vercel-config.cjs",
    "lint:css": "stylelint \"**/*.css\"",
    "lint:css:fix": "stylelint \"**/*.css\" --fix",
    "build": "turbo build",
    "build:ci": "pnpm --filter @ck/dieter build && node scripts/copy-dieter-assets.js && pnpm --filter @ck/studio-shell build && pnpm --filter @ck/app build",
    "build:assets": "node scripts/copy-dieter-assets.js",
    "dev": "concurrently -n site,app,embed -c blue,green,yellow \"pnpm dev:site\" \"pnpm dev:app\" \"pnpm dev:embed\"",
    "lint": "turbo lint",
    "test": "turbo test",
    "typecheck": "turbo typecheck",
    "e2e": "turbo run e2e",
    "size-check": "turbo run size-check",
    "dev:site": "pnpm --filter @ck/site dev",
    "dev:app": "pnpm --filter @ck/app dev",
    "dev:embed": "pnpm --filter @ck/embed-service dev",
    "smoke:prod": "bash scripts/e2e-prod-smoke.sh",
    "verify:studio-shell": "pnpm --filter @ck/studio-shell build && node tools/verify-studio-shell.cjs"
  },
  "devDependencies": {
    "@radix-ui/react-dialog": "latest",
    "@radix-ui/react-dropdown-menu": "latest",
    "@radix-ui/react-slot": "latest",
    "@radix-ui/react-tabs": "latest",
    "clsx": "latest",
    "lucide-react": "latest",
    "tailwind-merge": "latest",
    "stylelint": "16.8.1",
    "stylelint-config-standard": "36.0.1",
    "stylelint-order": "6.0.4",
    "stylelint-declaration-strict-value": "1.10.6",
    "turbo": "^2.0.6",
    "typescript": "^5.4.5",
    "eslint": "^9.5.0",
    "prettier": "^3.3.2",
    "@size-limit/preset-app": "^11.1.4",
    "size-limit": "^11.1.4",
    "playwright": "^1.45.0",
    "axe-core": "^4.9.1",
    "concurrently": "^8.2.2"
  }
}
</file>

<file path="playground.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Dieter Playground</title>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>

    <!-- Inter from Google Fonts (approved source) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Dieter tokens -->
    <link rel="stylesheet" href="dieter/tokens/tokens.css">
    <link rel="stylesheet" href="dieter/components/button.css">
    <link rel="stylesheet" href="dieter/components/input.css">
    <link rel="stylesheet" href="dieter/components/select.css">
    <link rel="stylesheet" href="dieter/components/form.css">
    <link rel="stylesheet" href="dieter/components/choice.css">
    <link rel="stylesheet" href="dieter/components/textarea.css">
    <link rel="stylesheet" href="dieter/components/form-validation.css">
    <link rel="stylesheet" href="dieter/components/alert.css">
    <link rel="stylesheet" href="dieter/components/skeleton.css">
    <link rel="stylesheet" href="dieter/components/progress.css">
    <link rel="stylesheet" href="dieter/components/badge.css">
    <link rel="stylesheet" href="dieter/components/card.css">
    <link rel="stylesheet" href="dieter/components/divider.css">
    <link rel="stylesheet" href="dieter/components/container.css">
    <link rel="stylesheet" href="dieter/components/table.css">
    <link rel="stylesheet" href="dieter/components/pagination.css">
    <link rel="stylesheet" href="dieter/components/breadcrumb.css">
    <link rel="stylesheet" href="dieter/components/modal.css">
    <link rel="stylesheet" href="dieter/components/toast.css">
    <link rel="stylesheet" href="dieter/components/tabs.css">
    <link rel="stylesheet" href="dieter/components/accordion.css">
    <link rel="stylesheet" href="dieter/components/tooltip.css">
    <link rel="stylesheet" href="dieter/components/popover.css">
    <link rel="stylesheet" href="dieter/components/drawer.css">
    <link rel="stylesheet" href="dieter/components/banner.css">
    <link rel="stylesheet" href="dieter/components/navbar.css">
    <link rel="stylesheet" href="dieter/components/sidebar.css">
    <link rel="stylesheet" href="dieter/components/stepper.css">
    <link rel="stylesheet" href="dieter/components/status.css">
    <link rel="stylesheet" href="dieter/components/empty-state.css">
    <link rel="stylesheet" href="dieter/components/chip.css">
    <link rel="stylesheet" href="dieter/components/avatar.css">
    <link rel="stylesheet" href="dieter/components/icon.css">
    <link rel="stylesheet" href="dieter/components/icon-helpers.css">
    <link rel="stylesheet" href="dieter/components/utilities.css">
    <link rel="stylesheet" href="dieter/components/switch.css">
    <link rel="stylesheet" href="dieter/components/toggle.css">
    <link rel="stylesheet" href="dieter/components/button-group.css">
    <link rel="stylesheet" href="dieter/components/segmented.css">

    <style>
      body { font: var(--fs-body)/var(--lh-body) var(--font-ui); background: var(--color-bg); color: var(--color-text); margin: 0; }
      main { padding: var(--space-6); max-width: 72rem; margin: 0 auto; }
      h1 { margin: 0 0 var(--space-4); }
      p { color: var(--color-text-muted); }
      .row { display: flex; gap: var(--space-4); align-items: center; flex-wrap: wrap; }
      .grid { display: grid; gap: var(--space-4); grid-template-columns: repeat(auto-fit,minmax(240px,1fr)); }
      .k { width: 12rem; display:inline-block; color: var(--color-text-muted); }
      .card { border-radius: var(--radius-4); padding: var(--space-4); }
      .divider { height:1px; background: var(--color-border); margin: var(--space-6) 0; }
      .badge { display:inline-block; border-radius: 999px; padding: 0.25rem 0.6rem; font: 600 var(--fs-12)/1 var(--font-ui); }

      /* skip link */
      .skip-link {
        position:absolute; left:-9999px; top:auto; width:1px; height:1px; overflow:hidden;
      }
      .skip-link:focus { position:static; width:auto; height:auto; padding: var(--space-2); background: var(--role-primary-bg); color: var(--role-primary-text); border-radius: var(--radius-4); }
    </style>
  </head>
  <body>
    <a href="#main" class="skip-link">Skip to content</a>
    <main id="main">
      <div class="text-title-fluid m-4">Dieter Tokens Playground</div>
      <p>Toggle OS dark mode; set <code>data-theme="hc"</code> on &lt;html&gt; to test high-contrast. Press <span class="kbd">Tab</span> to see focus rings.</p>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Buttons & Links (with focus ring)</h2>
        <div class="row">
          <button class="diet-btn">Primary Button</button>
          <a class="diet-link" href="#">Link Example</a>
        </div>
      </section>

      <section>
        <h2>Controls Pack: Switch, Toggle, Button Group, Segmented</h2>
        <div class="stack">

          <!-- Switch -->
          <div>
            <h3>Switch</h3>
            <label class="diet-switch">
              <input type="checkbox" role="switch" aria-checked="false" aria-label="Airplane mode">
              <span class="diet-switch__label">Airplane mode</span>
            </label>
            &nbsp;&nbsp;
            <label class="diet-switch">
              <input type="checkbox" role="switch" aria-checked="true" checked aria-label="Wi-Fi">
              <span class="diet-switch__label">Wi-Fi</span>
            </label>
            &nbsp;&nbsp;
            <label class="diet-switch">
              <input type="checkbox" role="switch" disabled aria-label="Bluetooth (disabled)">
              <span class="diet-switch__label">Bluetooth (disabled)</span>
            </label>
          </div>

          <!-- Toggle (aria-pressed) -->
          <div>
            <h3>Toggle</h3>
            <button class="diet-toggle" aria-pressed="false">Bold</button>
            <button class="diet-toggle" aria-pressed="true">Italic</button>
            <button class="diet-toggle diet-toggle--lg" aria-pressed="false">Underline</button>
          </div>

          <!-- Button Group -->
          <div>
            <h3>Button Group</h3>
            <div class="diet-btn-group" role="group" aria-label="Align">
              <button class="diet-btn" aria-pressed="true">Left</button>
              <button class="diet-btn" aria-pressed="false">Center</button>
              <button class="diet-btn" aria-pressed="false">Right</button>
            </div>
          </div>

          <!-- Segmented Control -->
          <div>
            <h3>Segmented Control</h3>
            <div class="diet-segmented" role="tablist" aria-label="Time range">
              <button role="tab" aria-selected="true">7d</button>
              <button role="tab" aria-selected="false">30d</button>
              <button role="tab" aria-selected="false">90d</button>
            </div>
          </div>

        </div>
      </section>

      <!-- Navbar -->
      <section>
        <h2>Navbar</h2>
        <nav class="diet-navbar" aria-label="Top">
          <div class="diet-navbar__brand">Clickeen</div>
          <div class="diet-navbar__links">
            <a class="diet-navbar__link" href="#" aria-current="page">Home</a>
            <a class="diet-navbar__link" href="#">Docs</a>
            <a class="diet-navbar__link" href="#">Pricing</a>
            <a class="diet-navbar__link" href="#">About</a>
          </div>
        </nav>
      </section>

      <!-- Sidebar -->
      <section>
        <h2>Sidebar</h2>
        <aside class="diet-sidebar" aria-label="Sections">
          <div class="diet-sidebar__section">
            <div class="diet-sidebar__label">General</div>
            <a class="diet-sidebar__link" href="#" aria-current="page">Overview</a>
            <a class="diet-sidebar__link" href="#">Activity</a>
          </div>
          <div class="diet-sidebar__section">
            <div class="diet-sidebar__label">Settings</div>
            <a class="diet-sidebar__link" href="#">Profile</a>
            <a class="diet-sidebar__link" href="#">Billing</a>
          </div>
        </aside>
      </section>

      <!-- Stepper -->
      <section>
        <h2>Stepper</h2>
        <ol class="diet-stepper" role="list">
          <li class="diet-step" aria-current="step"><span class="diet-step__circle">1</span> Account</li>
          <li class="diet-step"><span class="diet-step__circle">2</span> Profile</li>
          <li class="diet-step"><span class="diet-step__circle">3</span> Confirm</li>
        </ol>
      </section>

      <!-- Status Indicator -->
      <section>
        <h2>Status Indicator</h2>
        <p>
          <span class="diet-status diet-status--success" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Live</span>
          &nbsp;&nbsp;
          <span class="diet-status diet-status--warning" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Degraded</span>
          &nbsp;&nbsp;
          <span class="diet-status diet-status--error" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Down</span>
        </p>
      </section>

      <!-- Empty State -->
      <section>
        <h2>Empty State</h2>
        <div class="diet-empty" role="region" aria-label="Empty">
          <div class="diet-empty__icon" aria-hidden="true"></div>
          <div class="diet-empty__title">No items yet</div>
          <p>Add your first item to get started.</p>
          <button class="diet-empty__cta">Add Item</button>
        </div>
      </section>

      <!-- Chip -->
      <section>
        <h2>Chip</h2>
        <p>
          <span class="diet-chip">Default</span>
          &nbsp;
          <span class="diet-chip diet-chip--primary">Primary <button class="diet-chip__dismiss" aria-label="Remove chip"></button></span>
        </p>
      </section>

      <!-- Avatar -->
      <section>
        <h2>Avatar</h2>
        <div style="display:flex; align-items:center; gap: var(--space-3);">
          <span class="diet-avatar">CK</span>
          <span class="diet-avatar diet-avatar--lg"><img src="https://picsum.photos/80" alt="User avatar"></span>
        </div>
      </section>

      <!-- Banner -->
      <section>
        <h2>Banner</h2>
        <div class="diet-banner diet-banner--info" role="status" aria-live="polite">
          <span class="diet-banner__icon" aria-hidden="true"></span>
          <div>
            <div class="diet-banner__title">Heads up</div>
            <div>We’ve updated our terms.</div>
          </div>
          <div class="diet-banner__actions">
            <button class="diet-banner__btn">Review</button>
            <button class="diet-banner__btn">Dismiss</button>
          </div>
        </div>
        <div class="diet-banner diet-banner--error" role="alert" aria-live="assertive" style="margin-top: var(--space-3);">
          <span class="diet-banner__icon" aria-hidden="true"></span>
          <div>
            <div class="diet-banner__title">Submission failed</div>
            <div>Retry your request.</div>
          </div>
          <div class="diet-banner__actions">
            <button class="diet-banner__btn">Retry</button>
          </div>
        </div>
      </section>

      <!-- Drawer -->
      <section id="drawer">
        <h2>Drawer</h2>
        <p><a class="diet-btn" href="#drawer">Open Drawer</a></p>
        <!-- Target peers (must be siblings of #drawer anchor target) -->
        <div class="diet-drawer-overlay" aria-hidden="true"></div>
        <aside class="diet-drawer" role="dialog" aria-modal="true" aria-labelledby="drawer-title">
          <header class="diet-drawer__header">
            <div class="diet-drawer__title" id="drawer-title">Filters</div>
            <a class="diet-drawer__close" href="#">Close</a>
          </header>
          <div>
            <p class="text-14">Drawer content uses tokens and scrolls if long.</p>
          </div>
          <footer style="display:flex; gap: var(--space-2); justify-content:flex-end;">
            <a class="diet-banner__btn" href="#">Cancel</a>
            <a class="diet-banner__btn" href="#">Apply</a>
          </footer>
        </aside>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Feedback — Tooltip & Popover</h2>
        <div class="stack">

          <!-- Tooltip demo -->
          <div>
            <p>Hover or focus the info button to see a tooltip:</p>
            <div class="diet-tooltip">
              <button class="diet-tooltip-trigger" aria-describedby="tt-1">Info</button>
              <div id="tt-1" role="tooltip" class="diet-tooltip-bubble">
                Tooltips provide short, helpful hints. They appear on hover and keyboard focus.
              </div>
            </div>
          </div>

          <!-- Popover demo (details/summary) -->
          <div>
            <details class="diet-popover">
              <summary aria-haspopup="menu" aria-expanded="false">Quick actions</summary>
              <div class="diet-popover__panel" role="menu" aria-label="Quick actions">
                <ul class="diet-popover__list">
                  <li class="diet-popover__item"><a role="menuitem" href="#">Rename</a></li>
                  <li class="diet-popover__item"><a role="menuitem" href="#">Duplicate</a></li>
                  <li class="diet-popover__item"><a role="menuitem" href="#">Archive</a></li>
                </ul>
              </div>
            </details>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Navigation — Tabs & Accordion</h2>
        <div class="stack">

          <!-- Tabs (CSS-only via :target) -->
          <nav class="diet-tabs" aria-label="Sample tabs">
            <div class="diet-tabs__list" role="tablist">
              <a class="diet-tab" role="tab" href="#tab-overview" aria-controls="tab-overview" aria-current="page">Overview</a>
              <a class="diet-tab" role="tab" href="#tab-details"  aria-controls="tab-details">Details</a>
              <a class="diet-tab" role="tab" href="#tab-usage"    aria-controls="tab-usage">Usage</a>
            </div>
            <div class="diet-tabs__panels">
              <section id="tab-overview" class="diet-tabpanel is-default" role="tabpanel" tabindex="-1" aria-labelledby="tab-overview">
                <p>Overview content. Uses tokens-only chrome and is visible by default (no hash).</p>
              </section>
              <section id="tab-details" class="diet-tabpanel" role="tabpanel" tabindex="-1" aria-labelledby="tab-details">
                <p>Details content. Shows when the URL hash targets <code>#tab-details</code>.</p>
              </section>
              <section id="tab-usage" class="diet-tabpanel" role="tabpanel" tabindex="-1" aria-labelledby="tab-usage">
                <p>Usage content. Shows when the URL hash targets <code>#tab-usage</code>.</p>
              </section>
            </div>
          </nav>

          <!-- Accordion (native details/summary) -->
          <div class="diet-accordion" aria-label="Sample accordion">
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Account</strong></summary>
              <div class="diet-accordion__panel">
                <p>Manage profile, security, and preferences with accessible, native controls.</p>
              </div>
            </details>
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Billing</strong></summary>
              <div class="diet-accordion__panel">
                <p>Payment methods, invoices, and usage breakdown live here.</p>
              </div>
            </details>
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Notifications</strong></summary>
              <div class="diet-accordion__panel">
                <p>Email and push notifications, digest frequency, and message filters.</p>
              </div>
            </details>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Overlays</h2>
        <div class="stack">
          <!-- Modal -->
          <div class="diet-modal-fallback">
            <dialog class="diet-modal" open>
              <div class="diet-modal__header">
                <h3 class="diet-modal__title">Example Modal</h3>
                <button class="diet-modal__close">Close</button>
              </div>
              <div class="diet-modal__body">
                <p>This is a modal body. Tokens-only styling. Resize window to test centering.</p>
              </div>
              <div class="diet-modal__footer">
                <button class="diet-btn diet-btn--secondary">Cancel</button>
                <button class="diet-btn">Confirm</button>
              </div>
            </dialog>
          </div>
          <!-- Toast -->
          <div class="diet-toast-region" role="region" aria-live="polite">
            <div class="diet-toast diet-toast--success">
              <div>
                <div class="diet-toast__title">Success!</div>
                <p>Your action completed.</p>
              </div>
              <button class="diet-toast__close">×</button>
            </div>
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Layout Pack B — Table, Pagination, Breadcrumb</h2>

        <!-- Breadcrumb -->
        <nav class="diet-breadcrumb" aria-label="Breadcrumb">
          <span class="diet-crumb"><a href="#!">Home</a><span class="diet-crumb__sep">/</span></span>
          <span class="diet-crumb"><a href="#!">Dashboard</a><span class="diet-crumb__sep">/</span></span>
          <span class="diet-crumb diet-crumb--truncate" aria-current="page">Quarterly Performance Overview</span>
        </nav>

        <!-- Table (standard) -->
        <div class="stack">
          <table class="diet-table diet-table--zebra" role="table">
            <thead>
              <tr><th>Project</th><th>Owner</th><th>Status</th><th>Updated</th></tr>
            </thead>
            <tbody>
              <tr>
                <td data-label="Project"><a href="#!">Alpha</a></td>
                <td data-label="Owner">Sofia</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--success">On Track</span></td>
                <td data-label="Updated">Today</td>
              </tr>
              <tr>
                <td data-label="Project"><a href="#!">Beta</a></td>
                <td data-label="Owner">Jon</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--warning">At Risk</span></td>
                <td data-label="Updated">Yesterday</td>
              </tr>
              <tr>
                <td data-label="Project"><a href="#!">Gamma</a></td>
                <td data-label="Owner">Priya</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--danger">Blocked</span></td>
                <td data-label="Updated">2 days ago</td>
              </tr>
            </tbody>
          </table>

          <!-- Table compact -->
          <table class="diet-table diet-table--compact" role="table" aria-label="Compact table example">
            <thead><tr><th>Key</th><th>Value</th></tr></thead>
            <tbody>
              <tr><td data-label="Key">Build</td><td data-label="Value">#1428</td></tr>
              <tr><td data-label="Key">Branch</td><td data-label="Value">main</td></tr>
              <tr><td data-label="Key">Commit</td><td data-label="Value"><a href="#!">b9b43ef</a></td></tr>
            </tbody>
          </table>

          <!-- Stacked responsive preview (opt-in) -->
          <div data-table="stacked">
            <table class="diet-table" role="table" aria-label="Stacked table example">
              <thead><tr><th>Metric</th><th>Today</th><th>7d</th></tr></thead>
              <tbody>
                <tr><td data-label="Metric">Signups</td><td data-label="Today">128</td><td data-label="7d">923</td></tr>
                <tr><td data-label="Metric">DAU</td><td data-label="Today">2,341</td><td data-label="7d">15,802</td></tr>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Pagination -->
        <nav class="diet-pagination" aria-label="Pagination">
          <a class="diet-page" href="#!" aria-disabled="true" aria-label="Previous">‹</a>
          <a class="diet-page" href="!#">1</a>
          <a class="diet-page" href="#!" aria-current="page">2</a>
          <a class="diet-page" href="#!">3</a>
          <a class="diet-page" href="#!" aria-label="Next">›</a>
        </nav>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Layout Pack A — Card, Divider, Container</h2>

        <div class="diet-container diet-stack">
          <!-- Standard card -->
          <article class="diet-card">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Standard Card</div>
                <div class="diet-card__subtitle">Header, body, footer with tokens-only styles</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-16">Cards use surface, border, and text role tokens. Density can switch to compact. Elevated adds subtle shadow.</p>
              <hr class="diet-divider diet-divider--inset">
              <p class="text-14">This divider demonstrates the inset variant aligned to the card padding.</p>
            </div>
            <footer class="diet-card__footer">
              <button class="diet-btn diet-btn--secondary">Cancel</button>
              <button class="diet-btn">Primary</button>
            </footer>
          </article>

          <!-- Compact + elevated -->
          <article class="diet-card diet-card--compact diet-card--elevated">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Compact Elevated</div>
                <div class="diet-card__subtitle">Reduced padding, hover elevation</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-14">Great for dense dashboards and side panels.</p>
            </div>
            <footer class="diet-card__footer">
              <button class="diet-btn diet-btn--ghost">Details</button>
              <button class="diet-btn">Action</button>
            </footer>
          </article>

          <!-- Focusable card -->
          <a class="diet-card diet-card--elevated" href="#!" tabindex="0" aria-label="Open project Alpha">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Focusable Card Link</div>
                <div class="diet-card__subtitle">Tab to see focus ring via tokens</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-14">Cards can be links; focus-visible ring uses Dieter focus tokens.</p>
            </div>
          </a>

          <!-- Container wide example -->
          <div class="diet-container diet-container--wide">
            <div class="diet-card">
              <div class="diet-card__body">
                <p class="text-14">This card sits in a wide container (max-width tokens). Resize the viewport to verify.</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Checkbox & Radio (native)</h2>
        <div class="stack">

          <!-- Checkbox group -->
          <div class="diet-choice-field" aria-describedby="cb-hint">
            <div class="diet-choice-row">
              <input id="cb1" class="diet-checkbox" type="checkbox" />
              <label class="diet-choice-label" for="cb1">Email notifications</label>
            </div>
            <div class="diet-choice-row">
              <input id="cb2" class="diet-checkbox diet-choice--lg" type="checkbox" checked />
              <label class="diet-choice-label" for="cb2">SMS alerts (large)</label>
            </div>
            <p class="diet-choice-hint" id="cb-hint">You can change this anytime.</p>
          </div>

          <!-- Error + disabled checkbox -->
          <div class="diet-choice-field" data-state="error" aria-describedby="cb-err">
            <div class="diet-choice-row">
              <input id="cb3" class="diet-checkbox" type="checkbox" aria-invalid="true" />
              <label class="diet-choice-label" for="cb3">Terms not accepted</label>
            </div>
            <p class="diet-choice-error" id="cb-err">Please accept the terms.</p>
            <div class="diet-choice-row">
              <input id="cb4" class="diet-checkbox" type="checkbox" disabled />
              <label class="diet-choice-label" for="cb4">Disabled option</label>
            </div>
          </div>

          <!-- Radio group -->
          <fieldset class="diet-choice-field" role="radiogroup" aria-describedby="rg-hint">
            <legend class="diet-choice-label">Plan</legend>
            <div class="diet-choice-row">
              <input id="r1" class="diet-radio" name="plan" type="radio" checked />
              <label class="diet-choice-label" for="r1">Free</label>
            </div>
            <div class="diet-choice-row">
              <input id="r2" class="diet-radio" name="plan" type="radio" />
              <label class="diet-choice-label" for="r2">Pro</label>
            </div>
            <div class="diet-choice-row">
              <input id="r3" class="diet-radio diet-choice--sm" name="plan" type="radio" />
              <label class="diet-choice-label" for="r3">Enterprise (small)</label>
            </div>
            <p class="diet-choice-hint" id="rg-hint">Choose one.</p>
          </fieldset>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Form Group (layout + messages)</h2>

        <div class="diet-form-stack">

          <!-- Vertical field with help -->
          <div class="diet-field">
            <label class="diet-label diet-label--required" for="fg-email">Email</label>
            <input id="fg-email" class="diet-input" type="email" placeholder="you@company.com" aria-describedby="fg-email-hint">
            <p class="diet-hint" id="fg-email-hint">We’ll send receipts here.</p>
          </div>

          <!-- Horizontal field with error -->
          <div class="diet-field diet-field--row">
            <label class="diet-label" for="fg-plan">Plan</label>
            <select id="fg-plan" class="diet-select" aria-invalid="true" aria-describedby="fg-plan-err">
              <option>Free</option><option>Pro</option><option>Enterprise</option>
            </select>
            <p class="diet-error" id="fg-plan-err">Please choose a valid plan.</p>
          </div>

          <!-- Compact group with inline actions -->
          <div class="diet-field diet-field--compact">
            <label class="diet-label" for="fg-code">Invite code</label>
            <div class="diet-inline">
              <input id="fg-code" class="diet-input diet-input--sm" type="text" placeholder="ABC-123">
              <button class="diet-btn diet-btn--sm">Apply</button>
            </div>
            <p class="diet-hint">Optional. Improves onboarding.</p>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Color Roles</h2>
        <div class="row">
          <span class="badge bg-primary">Primary</span>
          <span class="badge bg-success">Success</span>
          <span class="badge bg-warn">Warn</span>
          <span class="badge bg-danger">Danger</span>
          <span class="badge bg-surface border-default" style="color:var(--color-text);">Surface</span>
        </div>
      </section>

      <div class="divider"></div>

      <section class="grid">
        <div class="card bg-surface border-default state-surface">
          <div class="text-16"><strong>Surface Card</strong></div>
          <p class="muted">Hover/active overlays demonstrate state layers on surface. Focus any control to see focus ring.</p>
          <button class="diet-btn">Action</button>
        </div>

        <div class="card bg-primary state-primary">
          <div class="text-16">Primary Area</div>
          <p class="text-14" style="opacity:.9">Hover/active overlays demonstrate state layers on primary.</p>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Touch Target & Labels</h2>
        <div class="row">
          <button class="diet-btn">Min 44px Height</button>
          <label class="text-12" for="demo-input">Label (12px allowed)</label>
          <input id="demo-input" class="p-2 border-default" style="border-radius: var(--radius-4);" placeholder="Focus me with Tab"/>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Spacing Utilities (quick check)</h2>
        <div class="row">
          <div class="card bg-surface border-default p-4 m-2">.p-4 .m-2</div>
          <div class="card bg-surface border-default px-6 py-2 mx-4 my-6">.px-6 .py-2 .mx-4 .my-6</div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Buttons</h2>
        <div class="stack">
          <button class="diet-btn">Default</button>
          <button class="diet-btn diet-btn--primary">Primary</button>
          <button class="diet-btn diet-btn--ghost">Ghost</button>
          <button class="diet-btn diet-btn--danger">Danger</button>
        </div>

        <div class="stack" style="margin-top: var(--space-4);">
          <button class="diet-btn diet-btn--primary diet-btn--sm">Small</button>
          <button class="diet-btn diet-btn--primary">Medium</button>
          <button class="diet-btn diet-btn--primary diet-btn--lg">Large</button>
        </div>

        <div class="stack" style="margin-top: var(--space-4);">
          <button class="diet-btn" disabled>Disabled</button>
          <button class="diet-btn diet-btn--primary" data-state="loading" aria-busy="true">Loading</button>
          <a class="diet-btn diet-btn--ghost" href="#" role="button">Link style</a>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Text Inputs</h2>

        <div class="stack">
          <div class="diet-field">
            <label class="diet-label" for="ex1">Your name</label>
            <input id="ex1" class="diet-input" type="text" placeholder="Jane Doe">
            <p class="diet-help" id="ex1-help">We use this to personalize your experience.</p>
          </div>

          <div class="diet-field" data-state="error">
            <label class="diet-label" for="ex2">Email <span class="diet-required"></span></label>
            <input id="ex2" class="diet-input" type="email" placeholder="you@example.com" aria-invalid="true" aria-describedby="ex2-err">
            <p class="diet-error" id="ex2-err">Please enter a valid email address.</p>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex3">Read-only</label>
            <input id="ex3" class="diet-input" type="text" value="Fixed value" readonly>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex4">Disabled</label>
            <input id="ex4" class="diet-input" type="text" placeholder="Cannot edit" disabled>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex5">Sizes</label>
            <input id="ex5" class="diet-input diet-input--sm" placeholder="Small">
            <input class="diet-input" placeholder="Medium">
            <input class="diet-input diet-input--lg" placeholder="Large">
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Selects (native)</h2>
        <div class="stack">

          <div class="diet-select-field">
            <label class="diet-label" for="sel1">Country</label>
            <select id="sel1" class="diet-select" aria-describedby="sel1-help">
              <option value="" disabled selected class="diet-select-placeholder">Select a country</option>
              <option>United States</option>
              <option>Canada</option>
              <option>United Kingdom</option>
            </select>
            <p class="diet-select-help" id="sel1-help">Used for localization and taxes.</p>
          </div>

          <div class="diet-select-field" data-state="error">
            <label class="diet-label" for="sel2">Plan</label>
            <select id="sel2" class="diet-select" aria-invalid="true" aria-describedby="sel2-err">
              <option value="" disabled selected class="diet-select-placeholder">Choose a plan</option>
              <option>Free</option><option>Pro</option><option>Enterprise</option>
            </select>
            <p class="diet-select-error" id="sel2-err">Please pick a plan.</p>
          </div>

          <div class="diet-select-field">
            <label class="diet-label" for="sel3">Read-only (disabled)</label>
            <select id="sel3" class="diet-select" disabled>
              <option>Unavailable</option>
            </select>
          </div>

          <div class="diet-select-field">
            <label class="diet-label" for="sel4">Sizes</label>
            <select id="sel4" class="diet-select diet-select--sm"><option>Small</option></select>
            <select class="diet-select"><option>Medium</option></select>
            <select class="diet-select diet-select--lg"><option>Large</option></select>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Alert</h2>
        <div class="stack">

          <div class="diet-alert diet-alert--info" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Heads up</p>
              <p class="diet-alert__body">This is an informational message. <a href="#">Learn more</a></p>
            </div>
          </div>

          <div class="diet-alert diet-alert--success" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Success</p>
              <p class="diet-alert__body">Your settings were saved.</p>
            </div>
          </div>

          <div class="diet-alert diet-alert--warning" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Warning</p>
              <p class="diet-alert__body">You’re nearing your plan limits.</p>
            </div>
          </div>

          <div class="diet-alert diet-alert--error" role="alert" aria-live="assertive">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Error</p>
              <p class="diet-alert__body">Something went wrong. <button type="button">Retry</button></p>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Loading Primitives</h2>
        <div class="stack">

          <!-- Skeleton -->
          <div>
            <h3>Skeleton</h3>
            <div class="stack" style="gap: var(--space-2); max-inline-size: 40rem;">
              <span class="diet-skeleton diet-skeleton--text"></span>
              <span class="diet-skeleton diet-skeleton--text diet-skeleton--sm" style="inline-size: 80%;"></span>
              <span class="diet-skeleton diet-skeleton--text diet-skeleton--lg" style="inline-size: 60%;"></span>
              <div style="display:flex; align-items:center; gap: var(--space-3);">
                <span class="diet-skeleton diet-skeleton--avatar" aria-hidden="true"></span>
                <div style="flex:1">
                  <span class="diet-skeleton diet-skeleton--text" style="inline-size: 70%;"></span>
                  <span class="diet-skeleton diet-skeleton--text diet-skeleton--sm" style="inline-size: 40%; margin-block-start: var(--space-2);"></span>
                </div>
              </div>
              <div class="diet-skeleton diet-skeleton--rect" style="inline-size: 100%;"></div>
            </div>
          </div>

          <!-- Progress -->
          <div>
            <h3>Progress (determinate)</h3>
            <div class="stack" style="gap: var(--space-3); max-inline-size: 40rem;">
              <div class="diet-progress" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="24" aria-label="Uploading">
                <div class="diet-progress__bar" style="inline-size:24%;"></div>
                <span class="diet-sr">Uploading — 24%</span>
              </div>

              <div class="diet-progress diet-progress--success diet-progress--sm" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="68" aria-label="Processing">
                <div class="diet-progress__bar" style="inline-size:68%;"></div>
                <span class="diet-sr">Processing — 68%</span>
              </div>

              <div class="diet-progress diet-progress--warning" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="92" aria-label="Indexing">
                <div class="diet-progress__bar" style="inline-size:92%;"></div>
                <span class="diet-sr">Indexing — 92%</span>
              </div>

              <div class="diet-progress diet-progress--danger diet-progress--lg" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="12" aria-label="Retrying">
                <div class="diet-progress__bar" style="inline-size:12%;"></div>
                <span class="diet-sr">Retrying — 12%</span>
              </div>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Badge & Tag</h2>
        <div class="stack">

          <!-- Badges: solid -->
          <div>
            <h3 class="text-14">Badges — solid</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--md diet-badge--neutral">Neutral</span>
              <span class="diet-badge diet-badge--md diet-badge--primary">Primary</span>
              <span class="diet-badge diet-badge--md diet-badge--success">Success</span>
              <span class="diet-badge diet-badge--md diet-badge--warning">Warning</span>
              <span class="diet-badge diet-badge--md diet-badge--danger">Danger</span>
            </div>
          </div>

          <!-- Badges: soft -->
          <div>
            <h3 class="text-14">Badges — soft</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--primary">Primary</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--success">Success</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--warning">Warning</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--danger">Danger</span>
            </div>
          </div>

          <!-- Tags: outline + dismiss affordance (no JS) -->
          <div>
            <h3 class="text-14">Tags — outline</h3>
            <div class="diet-badges">
              <span class="diet-tag diet-tag--md diet-tag--neutral">Neutral</span>
              <span class="diet-tag diet-tag--md diet-tag--primary">Primary</span>
              <span class="diet-tag diet-tag--md diet-tag--success">Success</span>
              <span class="diet-tag diet-tag--md diet-tag--warning">Warning</span>
              <span class="diet-tag diet-tag--md diet-tag--danger">Danger</span>
            </div>
          </div>

          <!-- Tags with dismiss button (keyboard focusable) -->
          <div>
            <h3 class="text-14">Tags — dismiss affordance</h3>
            <div class="diet-badges">
              <span class="diet-tag diet-tag--md diet-tag--primary" role="group" aria-label="Tag: Design">
                Design
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Design">×</button>
              </span>
              <span class="diet-tag diet-tag--md diet-tag--success" role="group" aria-label="Tag: Ready">
                Ready
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Ready">×</button>
              </span>
              <span class="diet-tag diet-tag--md diet-tag--warning" role="group" aria-label="Tag: Review">
                Review
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Review">×</button>
              </span>
            </div>
            <p class="text-12">Note: dismiss is markup-only for focus/accessibility; no JS behavior in v0.</p>
          </div>

          <!-- Size matrix -->
          <div>
            <h3 class="text-14">Sizes</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--sm diet-badge--primary">sm</span>
              <span class="diet-badge diet-badge--md diet-badge--primary">md</span>
              <span class="diet-badge diet-badge--lg diet-badge--primary">lg</span>
              <span class="diet-tag diet-tag--sm diet-tag--neutral">sm</span>
              <span class="diet-tag diet-tag--md diet-tag--neutral">md</span>
              <span class="diet-tag diet-tag--lg diet-tag--neutral">lg</span>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Form Validation Patterns</h2>
        <div class="stack">

          <!-- Validation Summary (Error) -->
          <div class="diet-validate-summary diet-validate-summary--error" role="alert" aria-live="assertive">
            <span class="diet-validate-summary__icon" aria-hidden="true"></span>
            <div>
              <strong>There are problems with your submission.</strong>
              <div>Please fix the highlighted fields below. <a href="#v-email">Jump to email</a></div>
            </div>
          </div>

          <!-- Email (error) -->
          <div class="diet-input-field" id="v-email" data-state="error">
            <label class="diet-label" for="email1">Email</label>
            <input id="email1" class="diet-input" type="email" aria-invalid="true" aria-describedby="email1-err" placeholder="you@company.com">
            <p class="diet-inline-msg diet-inline-msg--error" id="email1-err">Enter a valid email address.</p>
          </div>

          <!-- Bio (warning) -->
          <div class="diet-textarea-field" data-state="warning">
            <label class="diet-label" for="bio1">Bio</label>
            <textarea id="bio1" class="diet-textarea" aria-describedby="bio1-warn" placeholder="Max 200 chars"></textarea>
            <p class="diet-inline-msg diet-inline-msg--warning" id="bio1-warn">You’re nearing the 200 character limit.</p>
          </div>

          <!-- Country (success) -->
          <div class="diet-select-field" data-state="success">
            <label class="diet-label" for="country1">Country</label>
            <select id="country1" class="diet-select" aria-describedby="country1-ok">
              <option>United States</option>
              <option>Canada</option>
              <option>Italy</option>
            </select>
            <p class="diet-inline-msg diet-inline-msg--success" id="country1-ok">Looks good!</p>
          </div>

          <!-- Success summary example -->
          <div class="diet-validate-summary diet-validate-summary--success" role="status" aria-live="polite">
            <span class="diet-validate-summary__icon" aria-hidden="true"></span>
            <div>
              <strong>All checks passed.</strong>
              <div>Your form is ready to submit.</div>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Textarea (native)</h2>
        <div class="stack">

          <!-- Basic with help -->
          <div class="diet-textarea-field">
            <label class="diet-label" for="ta1">About you</label>
            <textarea id="ta1" class="diet-textarea" placeholder="Tell us something..." aria-describedby="ta1-hint"></textarea>
            <p class="diet-textarea-hint" id="ta1-hint">Max 500 characters.</p>
          </div>

          <!-- Error -->
          <div class="diet-textarea-field" data-state="error">
            <label class="diet-label" for="ta2">Feedback</label>
            <textarea id="ta2" class="diet-textarea" aria-invalid="true" aria-describedby="ta2-err">This is too short</textarea>
            <p class="diet-textarea-error" id="ta2-err">Please provide more details.</p>
          </div>

          <!-- Disabled & sizes -->
          <div class="diet-textarea-field">
            <label class="diet-label" for="ta3">Disabled</label>
            <textarea id="ta3" class="diet-textarea" disabled>Unavailable</textarea>
          </div>

          <div class="diet-textarea-field">
            <label class="diet-label" for="ta4">Sizes</label>
            <textarea id="ta4" class="diet-textarea diet-textarea--sm" placeholder="Small"></textarea>
            <textarea class="diet-textarea" placeholder="Medium"></textarea>
            <textarea class="diet-textarea diet-textarea--lg" placeholder="Large"></textarea>
          </div>

        </div>
      </section>
    </main>
  </body>
  
  <!-- Dieter Playground Controls: theme + type scale -->
  <style>
    .play-controls {
      position: fixed; inset: 1rem 1rem auto auto;
      display: grid; gap: .5rem; padding: .75rem;
      background: var(--color-role-surface);
      border: 1px solid var(--color-role-border);
      border-radius: .5rem;
      box-shadow: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .1));
      z-index: 9999;
    }
    .play-controls .row { display:flex; gap:.5rem; align-items:center; }
    .play-controls .title { font-weight:600; }
    .play-controls button {
      font: inherit; cursor: pointer; min-height: 2.75rem;
      padding: 0 .75rem; border-radius: .375rem;
      border: 1px solid var(--color-role-border);
      background: var(--color-role-surface);
      color: var(--color-role-text-primary);
    }
    .play-controls button[aria-pressed="true"]{
      background: var(--color-role-primary-bg);
      color: var(--color-role-on-primary, #fff);
      border-color: var(--color-role-primary-border, transparent);
    }
    .play-controls input[type="range"]{ width: 8rem; }
  </style>

  <div class="play-controls" role="group" aria-label="Playground controls">
    <div class="row"><span class="title">Theme</span>
      <button class="js-theme" data-theme="light"  aria-pressed="false">Light</button>
      <button class="js-theme" data-theme="dark"   aria-pressed="false">Dark</button>
      <button class="js-theme" data-theme="hc"     aria-pressed="false">High Contrast</button>
      <button id="js-theme-reset" aria-pressed="false" title="Reset theme">Reset</button>
    </div>
    <div class="row"><span class="title">Type</span>
      <label for="js-type">base rem</label>
      <input id="js-type" type="range" min="14" max="20" step="1" value="16" />
      <span id="js-type-val">16px</span>
      <button id="js-type-reset" aria-pressed="false" title="Reset type">Reset</button>
    </div>
  </div>

  <script>
  (() => {
    const root = document.documentElement;
    const pressed = (btn) => {
      document.querySelectorAll('.js-theme').forEach(b=>b.setAttribute('aria-pressed','false'));
      if (btn) btn.setAttribute('aria-pressed','true');
    };
    const applyTheme = (mode) => {
      // Light/Dark rely on prefers-color-scheme CSS already present; we toggle data-theme only for hc.
      if (mode === 'hc') {
        root.setAttribute('data-theme','hc'); pressed(document.querySelector('[data-theme="hc"].js-theme'));
      } else {
        root.removeAttribute('data-theme');
        if (mode === 'light') pressed(document.querySelector('[data-theme="light"].js-theme'));
        if (mode === 'dark')  pressed(document.querySelector('[data-theme="dark"].js-theme'));
      }
    };
    document.querySelectorAll('.js-theme').forEach(btn=>{
      btn.addEventListener('click', () => applyTheme(btn.dataset.theme));
    });
    document.getElementById('js-theme-reset').addEventListener('click', () => { root.removeAttribute('data-theme'); pressed(null); });

    // Type scale (rem) — adjusts root font-size only, everything uses rem
    const range = document.getElementById('js-type');
    const label = document.getElementById('js-type-val');
    const setRem = (px) => { root.style.fontSize = px + 'px'; label.textContent = px + 'px'; };
    range.addEventListener('input', () => setRem(range.value));
    document.getElementById('js-type-reset').addEventListener('click', () => { range.value = 16; setRem(16); });

    // Init
    setRem(range.value);
  })();
  </script>
  <!-- /Dieter Playground Controls -->
</html>
</file>

<file path="pnpm-workspace.yaml">
packages:
  - apps/*
  - services/*
  - packages/*
  - infra/*
  - dieter

onlyBuiltDependencies:
  - esbuild
</file>

<file path="postcss.config.mjs">
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
</file>

<file path="repomix-output.txt">
This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/
  workflows/
    ci.yml
    dieter-check.yml
    docs-check.yml
    studio-shell-smoke.yml
  pull_request_template.md
.husky/
  pre-commit
apps/
  app/
    app/
      api/
        auth/
          signout/
            route.ts
      auth/
        confirm/
          page.tsx
        login/
          page.tsx
        magic/
          route.ts
      invites/
        accept/
          page.tsx
      widgets/
        [publicId]/
          submissions/
            page.tsx
      workspaces/
        [id]/
          members/
            page.tsx
        page.tsx
      globals.css
      layout.tsx
      page.tsx
    lib/
      audit.ts
      rateLimiter.ts
      roles.ts
      supabase.ts
      supabaseServer.ts
    public/
      dieter/
        README.md
      studio/
        index.html
        studio.css
        studio.js
    .gitignore
    .redeploy.txt
    middleware.ts
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
    vercel.json
  site/
    app/
      api/
        widgets/
          anonymous/
            route.ts
      it/
        widgets/
          contact-form/
            page.tsx
        page.tsx
      widgets/
        contact-form/
          Configurator.tsx
          ConfiguratorIT.tsx
          page.tsx
          SnippetBox.tsx
      layout.tsx
      page.tsx
      robots.ts
      sitemap.ts
      version.txt
    lib/
      supabase.ts
      supabaseAdmin.ts
    .redeploy.txt
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
dieter/
  components/
    accordion.css
    alert.css
    avatar.css
    badge.css
    banner.css
    breadcrumb.css
    button-group.css
    button.css
    card.css
    chip.css
    choice.css
    container.css
    divider.css
    drawer.css
    empty-state.css
    form-validation.css
    form.css
    icon-helpers.css
    icon.css
    index.ts
    input.css
    modal.css
    navbar.css
    pagination.css
    popover.css
    progress.css
    segmented.css
    select.css
    sidebar.css
    skeleton.css
    status.css
    stepper.css
    switch.css
    table.css
    tabs.css
    textarea.css
    toast.css
    toggle.css
    tooltip.css
    utilities.css
  icons/
    svg/
      archivebox.svg
      arrow-down.svg
      arrow-left-arrow-right.svg
      arrow-left.svg
      arrow-right.svg
      arrow-trianglehead-2-clockwise-rotate-90.svg
      arrow-trianglehead-clockwise.svg
      arrow-up-backward-square.svg
      arrow-up-bin.svg
      arrow-up-right-square.svg
      arrow-up.svg
      arrow-uturn-left.svg
      arrowshape-forward.svg
      arrowshape-left.svg
      bag.svg
      bell.svg
      checkmark-circle.svg
      chevron-down.svg
      chevron-left.svg
      chevron-right.svg
      chevron-up.svg
      circle-grid-2x1.svg
      circlebadge-2.svg
      clear.svg
      cloud-hail.svg
      delete-left.svg
      document.svg
      ellipsis-circle.svg
      eraser-line-dashed.svg
      eraser.svg
      externaldrive.svg
      folder-badge-plus.svg
      folder.svg
      gearshape.svg
      heart.svg
      humidity.svg
      link.svg
      minus.svg
      paperclip.svg
      paperplane.svg
      party-popper.svg
      pause.svg
      person-2.svg
      person.svg
      personalhotspot.svg
      play.svg
      plus.svg
      power.svg
      progress-indicator.svg
      rectangle-and-pencil-and-ellipsis.svg
      repeat.svg
      sparkles.svg
      square-and-arrow-up-on-square.svg
      square-and-arrow-up.svg
      stop.svg
      sun-max.svg
      trash.svg
    icons.json
  scripts/
    build-icons.mjs
  tokens/
    tokens.css
  design-system.md
  index.html
  package.json
  tokens.css
  tsconfig.json
documentation/
  systems/
    _template.md
    atlas.md
    berlin.md
    bob.md
    cairo.md
    copenhagen.md
    denver.md
    Dieter.md
    geneva.md
    helsinki.md
    lisbon.md
    michael.md
    milan.md
    oslo.md
    paris.md
    phoenix.md
    prague.md
    robert.md
    stockholm.md
    Studio.md
    tokyo.md
    venice.md
    zurich.md
  ADRdecisions.md
  clickeen-platform-architecture.md
  CONTEXT.md
  FailuresRCAs-IMPORTANT.md
  migrations.md
  Playbooks.md
  supabase-schema-sync.yml
  Techphases.md
  verceldeployments.md
  WhyClickeen.md
packages/
  embed-core/
    index.ts
    package.json
  studio-shell/
    src/
      ui/
        Icon.tsx
      index.js
      index.ts
      studio.css
    index.html
    package.json
    tsconfig.json
  widgets/
    contact-form.ts
    package.json
public/
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
scripts/
  build-dieter.js
  copy-dieter-assets.js
  e2e-prod-smoke.sh
  gen-icon-types.mjs
  link-dieter.js
  process-svgs.js
  scope-tokens.js
  stability-integrity-scan.zsh
  verify-svgs.js
services/
  api/
    app/
      api/
        healthz/
          route.ts
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
  embed/
    app/
      api/
        cfg/
          [publicId]/
            route.ts
        e/
          [publicId]/
            route.ts
        form/
          [publicId]/
            route.ts
        ingest/
          route.ts
    public/
      embed-bundle.js
    scripts/
      atlas-smoke.mjs
      e2e-real-widget.mjs
      smoke-form.mjs
    .gitignore
    .redeploy.txt
    next-env.d.ts
    next.config.mjs
    package.json
    tsconfig.json
tools/
  ci/
    check-lockfile.cjs
    verify-pnpm-config.cjs
    verify-public-dieter-clean.cjs
    verify-vercel-config.cjs
  studioV0_stability.sh
  verify-studio-shell.cjs
.gitignore
.npmrc
.prettierrc.json
.stylelintignore
cleanup-verify-4-5-6.txt
components.json
eslint.config.mjs
next.config.ts
package.json
playground.html
pnpm-workspace.yaml
postcss.config.mjs
stylelint.config.cjs
tsconfig.base.json
tsconfig.json
turbo.json
vercel.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="apps/app/app/api/auth/signout/route.ts">
import { NextResponse } from 'next/server';
import { createSupabaseServer } from '@/lib/supabase';
export async function POST() {
  const supabase = createSupabaseServer();
  await supabase.auth.signOut();
  return NextResponse.json({ ok: true });
}
</file>

<file path="apps/app/app/auth/confirm/page.tsx">
import { createSupabaseServer } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

export default async function ConfirmPage() {
  // Supabase SSR client will read the code from the URL and set the session via cookies
  const supabase = createSupabaseServer();
  // Touch auth to ensure cookie set
  await supabase.auth.getUser();

  return (
    <main style={{padding:24}}>
      <h1>Signed in</h1>
      <p>Return to the dashboard: <a href="/">Home</a></p>
    </main>
  );
}
</file>

<file path="apps/app/app/auth/login/page.tsx">
'use client';
import { useState } from 'react';

export default function LoginPage() {
  const [email, setEmail] = useState('');
  const [sent, setSent] = useState(false);
  const [err, setErr] = useState<string|null>(null);

  async function sendMagicLink(e: React.FormEvent) {
    e.preventDefault();
    setErr(null);
    const res = await fetch('/auth/magic', {
      method: 'POST',
      body: JSON.stringify({ email }),
      headers: { 'content-type': 'application/json' }
    });
    if (res.ok) setSent(true);
    else setErr('Failed to send link');
  }

  return (
    <main style={{padding:24, maxWidth:420, margin:'0 auto'}}>
      <h1>Sign in</h1>
      {sent ? (
        <p>Check your email for a magic link.</p>
      ) : (
        <form onSubmit={sendMagicLink} style={{display:'grid', gap:12}}>
          <input
            type="email"
            placeholder="you@example.com"
            value={email}
            onChange={e=>setEmail(e.target.value)}
            required
            style={{padding:8, border:'1px solid #ddd', borderRadius:8}}
          />
          <button type="submit" style={{padding:'8px 12px', border:'1px solid #ddd', borderRadius:8}}>
            Send magic link
          </button>
          {err && <p style={{color:'crimson'}}>{err}</p>}
        </form>
      )}
    </main>
  );
}
</file>

<file path="apps/app/app/auth/magic/route.ts">
import { NextResponse } from 'next/server';
import { createSupabaseServer } from '@/lib/supabase';

export async function POST(req: Request) {
  const { email } = await req.json();
  const supabase = createSupabaseServer();
  const { error } = await supabase.auth.signInWithOtp({
    email,
    options: { emailRedirectTo: `${process.env.NEXT_PUBLIC_DASHBOARD_URL}/auth/confirm` }
  });
  if (error) return NextResponse.json({ error: error.message }, { status: 400 });
  return NextResponse.json({ ok: true });
}
</file>

<file path="apps/app/app/invites/accept/page.tsx">
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

async function acceptInvite(token: string, userId: string) {
  const db = createSupabaseServer();

  const { data: invite } = await db.from('invites')
    .select('workspace_id,email,role,token,expires_at,used_at,used_by')
    .eq('token', token).maybeSingle();
  if (!invite) return { ok: false, error: 'invalid_token' };
  if (invite.used_at || invite.used_by) return { ok: false, error: 'already_used' };
  if (invite.expires_at && new Date(invite.expires_at).getTime() < Date.now()) return { ok: false, error: 'expired' };

  await db.from('workspace_members').upsert({
    workspace_id: invite.workspace_id, user_id: userId, role: invite.role,
  });

  await db.from('invites').update({ used_at: new Date().toISOString(), used_by: userId }).eq('token', token);

  try {
    const { logAudit } = await import('@/lib/audit');
    await logAudit({
      action: 'invite_accepted',
      workspaceId: invite.workspace_id,
      entityType: 'invite',
      entityId: token,
      metadata: { email: invite.email, role: invite.role },
      userId
    });
  } catch {}

  return { ok: true, workspaceId: invite.workspace_id };
}

export default async function AcceptPage({ searchParams }: { searchParams: { token?: string }}) {
  const token = searchParams?.token || '';
  const user = await getCurrentUser();
  if (!token) return <main style={{ padding: 24 }}><h1>Invite</h1><p>Missing token.</p></main>;
  if (!user) return <main style={{ padding: 24 }}><h1>Invite</h1><p>You must be signed in to accept the invite. <a href="/auth/login">Sign in</a></p></main>;
  const res = await acceptInvite(token, user.id);
  if (!res.ok) return <main style={{ padding: 24 }}><h1>Invite</h1><p>{res.error}</p></main>;
  return null; // redirect handled by parent or we could redirect here
}
</file>

<file path="apps/app/app/widgets/[publicId]/submissions/page.tsx">
export const dynamic = 'force-dynamic';
async function getData(publicId: string) {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const key = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  const headers = { apikey: key, Authorization: `Bearer ${key}` };
  // Find widget UUID by publicId
  const wi = await fetch(`${url}/rest/v1/widget_instances?public_id=eq.${publicId}&select=id&limit=1`, { headers }).then(r=>r.json());
  const id = wi?.[0]?.id;
  if (!id) return [];
  // Pull last 50 submissions
  return fetch(`${url}/rest/v1/form_submissions?widget_instance_id=eq.${id}&order=created_at.desc&limit=50`, { headers })
    .then(r=>r.json()).catch(()=>[]);
}
export default async function Page({ params }: { params: { publicId: string }}) {
  const rows = await getData(params.publicId);
  return (
    <main style={{padding:24}}>
      <h1>Submissions for {params.publicId}</h1>
      <ul>
        {rows.map((r:any)=>(
          <li key={r.id}><code>{new Date(r.created_at).toLocaleString()}</code> — <pre style={{display:'inline'}}>{JSON.stringify(r.payload)}</pre></li>
        ))}
      </ul>
    </main>
  );
}
</file>

<file path="apps/app/app/workspaces/[id]/members/page.tsx">
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';
import { isOwnerOrAdmin } from '@/lib/roles';
import { revalidatePath } from 'next/cache';
import { headers } from 'next/headers';
import { RateLimiter } from '@/lib/rateLimiter';
import { logAudit } from '@/lib/audit';

export const dynamic = 'force-dynamic';
const inviteLimiter = new RateLimiter(60_000, 5); // 5/min per IP

async function getMyMembership(workspaceId: string, userId: string) {
  const db = createSupabaseServer();
  const { data } = await db
    .from('workspace_members')
    .select('role')
    .eq('workspace_id', workspaceId)
    .eq('user_id', userId)
    .maybeSingle();
  return data?.role ?? null;
}

async function fetchData(workspaceId: string) {
  const db = createSupabaseServer();
  const [{ data: ws }, { data: members }, { data: invites }] = await Promise.all([
    db.from('workspaces').select('id,name,created_by').eq('id', workspaceId).single(),
    db.from('workspace_members').select('user_id,role,created_at').eq('workspace_id', workspaceId).order('created_at'),
    db.from('invites').select('email,role,token,expires_at,created_at,used_at,used_by').eq('workspace_id', workspaceId).order('created_at', { ascending: false }),
  ]);
  return { ws, members: members || [], invites: invites || [] };
}

async function createInvite(formData: FormData) {
  'use server';
  const workspaceId = String(formData.get('workspaceId') || '');
  const email = String(formData.get('email') || '').trim().toLowerCase();
  const role = (String(formData.get('role') || 'editor') as any);
  if (!workspaceId || !email) return;

  const ip = headers().get('x-forwarded-for') || 'unknown';
  if (!inviteLimiter.check(ip)) throw new Error('rate_limited');
  const ok = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  if (!ok) throw new Error('invalid_email');

  const db = createSupabaseServer();
  const user = await getCurrentUser();
  if (!user) throw new Error('not_authenticated');

  // Permission check via data, enforced again by RLS
  const { data: me } = await db
    .from('workspace_members')
    .select('role')
    .eq('workspace_id', workspaceId)
    .eq('user_id', user.id)
    .maybeSingle();
  if (!me || !['owner','admin'].includes(me.role)) throw new Error('not_authorized');

  const nowIso = new Date().toISOString();
  const { data: existing } = await db
    .from('invites')
    .select('id')
    .eq('workspace_id', workspaceId)
    .eq('email', email)
    .is('used_at', null)
    .gte('expires_at', nowIso)
    .maybeSingle();
  if (existing) throw new Error('invite_exists');

  const token = crypto.randomUUID();
  const { error } = await db.from('invites').insert({
    workspace_id: workspaceId, email, role, token, created_by: user.id,
    expires_at: new Date(Date.now() + 7*24*60*60*1000).toISOString(),
  });
  if (error) throw error;

  await logAudit({
    action: 'invite_created',
    workspaceId,
    entityType: 'invite',
    entityId: token,
    metadata: { email, role },
    userId: user.id
  });

  revalidatePath(`/workspaces/${workspaceId}/members`);
}

export default async function MembersPage({ params }: { params: { id: string }}) {
  const workspaceId = params.id;
  const user = await getCurrentUser();
  if (!user) {
    return <main style={{ padding:24 }}><h1>Workspace Members</h1><p>You must be signed in.</p></main>;
  }
  const myRole = await getMyMembership(workspaceId, user.id);
  const { ws, members, invites } = await fetchData(workspaceId);
  const inviteUrlBase = process.env.NEXT_PUBLIC_DASHBOARD_URL || 'http://localhost:3001';

  return (
    <main style={{ padding: 24, display: 'grid', gap: 24 }}>
      <h1>Workspace Members</h1>
      {ws ? (
        <p>
          <b>{ws.name}</b> (id: {ws.id})
          {myRole && <span style={{ marginLeft: 8, fontSize: 12, color: '#777', padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}>Role: {myRole}</span>}
        </p>
      ) : <p>Workspace not found</p>}

      <section>
        <h2>Members</h2>
        <table style={{ width: '100%', borderCollapse:'collapse' }}>
          <thead><tr><th align="left">User ID</th><th align="left">Role</th><th align="left">Joined</th></tr></thead>
          <tbody>
            {members.map((m: any) => (
              <tr key={m.user_id}>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{m.user_id}</td>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{m.role}</td>
                <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{new Date(m.created_at).toLocaleString()}</td>
              </tr>
            ))}
            {!members.length && <tr><td colSpan={3} style={{ padding: 8, color:'#777' }}>No members yet.</td></tr>}
          </tbody>
        </table>
      </section>

      <section>
        <h2>Invite a teammate</h2>
        {isOwnerOrAdmin(myRole) ? (
          <form action={createInvite} style={{ display: 'flex', gap: 12, flexWrap:'wrap' }}>
            <input type="hidden" name="workspaceId" value={workspaceId} />
            <input name="email" placeholder="teammate@example.com" required style={{ padding:8, border:'1px solid #ddd', borderRadius:8 }} />
            <select name="role" defaultValue="editor" style={{ padding:8, border:'1px solid #ddd', borderRadius:8 }}>
              <option value="editor">Editor</option>
              <option value="viewer">Viewer</option>
              <option value="admin">Admin</option>
            </select>
            <button type="submit" style={{ padding:'8px 12px', border:'1px solid #ddd', borderRadius:8 }}>Create invite</button>
          </form>
        ) : (
          <p style={{ color:'#777' }}>Only workspace owners or admins can send invitations.</p>
        )}
      </section>

      <section>
        <h2>Pending invites</h2>
        <table style={{ width: '100%', borderCollapse:'collapse' }}>
          <thead><tr><th align="left">Email</th><th align="left">Role</th><th align="left">Token</th><th align="left">Accept link</th><th align="left">Created</th></tr></thead>
          <tbody>
            {invites.map((i: any) => {
              const link = `${inviteUrlBase}/invites/accept?token=${encodeURIComponent(i.token)}`;
              return (
                <tr key={i.token}>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{i.email}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{i.role}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee', fontFamily:'ui-monospace, SFMono-Regular, Menlo, monospace' }}>{i.token}</td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}><a href={link} target="_blank">Accept</a></td>
                  <td style={{ padding: '6px 8px', borderTop: '1px solid #eee' }}>{new Date(i.created_at).toLocaleString()}</td>
                </tr>
              );
            })}
            {!invites.length && <tr><td colSpan={5} style={{ padding: 8, color:'#777' }}>No invites yet.</td></tr>}
          </tbody>
        </table>
      </section>
    </main>
  );
}
</file>

<file path="apps/app/app/workspaces/page.tsx">
import Link from 'next/link';
import { createSupabaseServer, getCurrentUser } from '@/lib/supabase';

export const dynamic = 'force-dynamic';

export default async function WorkspacesIndex() {
  const user = await getCurrentUser();
  if (!user) {
    return <main style={{ padding:24 }}><h1>My Workspaces</h1><p>You must be signed in.</p></main>;
  }
  const db = createSupabaseServer();

  // fetch workspaces where current user is a member
  const { data: rows, error } = await db
    .from('workspace_members')
    .select('workspace_id, role, workspaces!inner(id, name)')
    .eq('user_id', user.id)
    .order('created_at', { ascending: false });

  if (error) {
    return <main style={{ padding:24 }}><h1>My Workspaces</h1><p style={{color:'crimson'}}>Error loading workspaces.</p></main>;
  }

  const items = (rows || []).map((r: any) => ({
    id: r.workspaces?.id,
    name: r.workspaces?.name ?? r.workspace_id,
    role: r.role,
  }));

  return (
    <main style={{ padding:24, display:'grid', gap:16 }}>
      <h1>My Workspaces</h1>
      {!items.length && (
        <p style={{ color:'#555' }}>You're not a member of any workspaces yet.</p>
      )}
      <ul style={{ listStyle:'none', padding:0, margin:0, display:'grid', gap:12 }}>
        {items.map((w: any) => (
          <li key={w.id} style={{ border:'1px solid #eee', borderRadius:10, padding:12 }}>
            <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>
              <div>
                <div style={{ fontWeight:600 }}>{w.name}</div>
                <div style={{ color:'#777', fontSize:13 }}>Role: {w.role}</div>
              </div>
              <div style={{ display:'flex', gap:8 }}>
                <Link href={`/workspaces/${w.id}/members`} className="btn">Members</Link>
                <Link href={`/workspaces/${w.id}`} className="btn">Overview</Link>
              </div>
            </div>
          </li>
        ))}
      </ul>
    </main>
  );
}
</file>

<file path="apps/app/app/layout.tsx">
import Link from 'next/link';

export const metadata = { title: 'Clickeen Dashboard' };

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body style={{ fontFamily: 'ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto', color: '#111' }}>
        <header style={{ display:'flex', alignItems:'center', justifyContent:'space-between', padding:'12px 16px', borderBottom:'1px solid #eee' }}>
          <nav style={{ display:'flex', gap:16 }}>
            <Link href="/">Dashboard</Link>
            <Link href="/workspaces">My Workspaces</Link>
          </nav>
          <form action="/api/auth/signout" method="post">
            <button type="submit" style={{ padding:'6px 10px', border:'1px solid #ddd', borderRadius:'8px', background:'#fff' }}>Sign out</button>
          </form>
        </header>
        {children}
      </body>
    </html>
  );
}
</file>

<file path="apps/app/app/page.tsx">
export default function Page(){
  const demoWs = '00000000-0000-0000-0000-000000000001';
  return (
    <main style={{padding:24, display:'grid', gap:12}}>
      <h1>Dashboard</h1>
      <p><a href={`/workspaces/${demoWs}/members`}>Open demo workspace members →</a></p>
      <p><a href="/workspaces">My Workspaces →</a></p>
    </main>
  );
}
</file>

<file path="apps/app/lib/audit.ts">
import { headers } from 'next/headers';
import { supabaseAdmin } from './supabaseServer';

export async function logAudit(input: {
  action: string;
  workspaceId?: string;
  entityType?: string;
  entityId?: string;
  metadata?: Record<string, any>;
  userId?: string; // dev shim (DEV_USER_ID)
}) {
  try {
    const db = supabaseAdmin(); // dev-only OK
    const h = headers();
    const ip = h.get('x-forwarded-for')?.split(',')[0] || null;
    const ua = h.get('user-agent') || null;

    await db.from('audit_logs').insert({
      workspace_id: input.workspaceId ?? null,
      user_id: input.userId ?? null,
      action: input.action,
      entity_type: input.entityType ?? null,
      entity_id: input.entityId ?? null,
      metadata: input.metadata ?? null,
      ip_address: ip,
      user_agent: ua,
    });
  } catch (e) {
    console.error('audit log failed (ignored):', e);
  }
}
</file>

<file path="apps/app/lib/rateLimiter.ts">
export class RateLimiter {
  private attempts = new Map<string, number[]>();
  constructor(private windowMs: number, private max: number) {}

  check(key: string) {
    const now = Date.now();
    const arr = this.attempts.get(key) || [];
    const recent = arr.filter(t => t > now - this.windowMs);
    if (recent.length >= this.max) return false;
    recent.push(now);
    this.attempts.set(key, recent);
    if (recent.length === 1 || Math.random() < 0.01) this.cleanup();
    return true;
  }

  private cleanup() {
    const now = Date.now();
    for (const [k, v] of this.attempts.entries()) {
      const keep = v.filter(t => t > now - this.windowMs);
      if (keep.length) this.attempts.set(k, keep);
      else this.attempts.delete(k);
    }
  }
}
</file>

<file path="apps/app/lib/roles.ts">
export function isOwnerOrAdmin(role?: string | null) {
  return role === 'owner' || role === 'admin';
}
</file>

<file path="apps/app/lib/supabase.ts">
import { createServerClient, type CookieOptions } from '@supabase/ssr';
import { cookies, headers } from 'next/headers';

export function createSupabaseServer() {
  const cookieStore = cookies();
  return createServerClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        get(name: string) {
          return cookieStore.get(name)?.value;
        },
        set(name: string, value: string, options: CookieOptions) {
          cookieStore.set({ name, value, ...options });
        },
        remove(name: string, options: CookieOptions) {
          cookieStore.set({ name, value: '', ...options });
        },
      },
    }
  );
}

export async function getCurrentUser() {
  const supabase = createSupabaseServer();
  const { data: { user } } = await supabase.auth.getUser();
  return user ?? null;
}
</file>

<file path="apps/app/lib/supabaseServer.ts">
import { createClient } from '@supabase/supabase-js';

// DEPRECATED: Use createSupabaseServer() from ./supabase.ts instead
// This is kept only for dev scripts that need service role access
export function supabaseAdmin() {
  if (process.env.NODE_ENV === 'production') {
    throw new Error('Service role client should not be used in production dashboard');
  }
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  return createClient(url, serviceKey, { auth: { persistSession: false }});
}
</file>

<file path="apps/app/.gitignore">
.vercel
</file>

<file path="apps/app/.redeploy.txt">
2025-09-02T03:24:37Z
</file>

<file path="apps/app/middleware.ts">
import { NextResponse, type NextRequest } from 'next/server';
import { createServerClient, type CookieOptions } from '@supabase/ssr';

const PUBLIC_PATHS = [
  '/auth/login',
  '/auth/confirm',
  '/auth/magic',
  '/invites/accept',
  '/favicon.ico',
  '/robots.txt',
  '/sitemap.xml',
  '/manifest.webmanifest',
  '/_next', // static assets
];

function isPublic(pathname: string) {
  return PUBLIC_PATHS.some((p) => pathname === p || pathname.startsWith(p));
}

export async function middleware(request: NextRequest) {
  const pathname = request.nextUrl.pathname;

  // Always allow public paths through
  if (isPublic(pathname)) return NextResponse.next();

  // Never break the site if envs are missing in Preview
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const anon = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  if (!url || !anon) {
    // Soft-allow: do not block, but don't crash middleware
    return NextResponse.next();
  }

  // Keep response mutable for cookie writes
  let response = NextResponse.next({
    request: { headers: request.headers },
  });

  try {
    const supabase = createServerClient(url, anon, {
      cookies: {
        get(name: string) {
          return request.cookies.get(name)?.value;
        },
        set(name: string, value: string, options: CookieOptions) {
          response = NextResponse.next({ request: { headers: request.headers } });
          response.cookies.set({ name, value, ...options });
        },
        remove(name: string, options: CookieOptions) {
          response = NextResponse.next({ request: { headers: request.headers } });
          response.cookies.set({ name, value: '', ...options });
        },
      },
    });

    const { data: { user }, error } = await supabase.auth.getUser();

    if (error) {
      // Don't throw from middleware – just allow and log
      console.error('supabase.auth.getUser error in middleware:', error);
      return response;
    }

    if (!user) {
      const loginUrl = new URL('/auth/login', request.url);
      loginUrl.searchParams.set('next', pathname);
      return NextResponse.redirect(loginUrl);
    }

    return response;
  } catch (err) {
    // Last-resort guard: never 500 the app from middleware
    console.error('Middleware fatal guard:', err);
    return NextResponse.next();
  }
}

// Only run on real app routes, skip assets and the auth callback
export const config = {
  matcher: [
    '/((?!_next/static|_next/image|favicon.ico|auth/callback).*)',
  ],
};
</file>

<file path="apps/app/vercel.json">
{
  "buildCommand": "cd ../../ && pnpm build --filter @ck/app",
  "devCommand": "cd ../../ && pnpm dev --filter @ck/app",
  "installCommand": "cd ../../ && pnpm install",
  "framework": "nextjs"
}
</file>

<file path="apps/site/app/api/widgets/anonymous/route.ts">
import { NextResponse } from 'next/server';
import { createClient } from '@supabase/supabase-js';
import { nanoid } from 'nanoid';

export async function POST(req: Request) {
  try {
    const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const key = process.env.SUPABASE_SERVICE_ROLE_KEY;
    if (!url || !key) {
      console.error('Missing NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY');
      return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
    }
    const supabase = createClient(url, key, { auth: { persistSession: false } });

    const body = await req.json().catch(() => ({} as any));
    const email: string = body?.email || '';
    const type: string = body?.type || 'contact-form';
    const config = (body?.config ?? {}) as Record<string, unknown>;

    const { data, error } = await supabase.rpc('create_widget_with_instance', {
      p_name: `Anonymous Widget - ${email}`,
      p_type: type,
      p_config: config,
    });

    if (error) {
      console.error('RPC error:', error.message || error);
      return NextResponse.json({ error: 'Internal server error', detail: error.message }, { status: 500 });
    }

    return NextResponse.json({
      publicKey: (data as any)?.public_key,
      publicId: (data as any)?.public_id
    });
  } catch (e) {
    console.error('Anon create failed:', e);
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
  }
}
</file>

<file path="apps/site/app/it/widgets/contact-form/page.tsx">
'use client';

import { useState } from 'react';
import ConfiguratorIT from '@/app/widgets/contact-form/ConfiguratorIT';

// Client component for the snippet box
function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const [copied, setCopied] = useState(false);
  
  const scriptSrc = isDev 
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://c-keen-embed.vercel.app/api/e/${publicId}?v=${version}`;
  
  const snippet = `<div id="ckeen-${publicId}"></div>
<script async defer src="${scriptSrc}"></script>`;

  const copyToClipboard = async () => {
    await navigator.clipboard.writeText(snippet);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <div style={{ margin: '24px 0' }}>
      <textarea
        value={snippet}
        readOnly
        style={{
          width: '100%',
          minHeight: '80px',
          fontFamily: 'monospace',
          fontSize: '14px',
          padding: '12px',
          border: '1px solid #e1e5e9',
          borderRadius: '8px',
          backgroundColor: '#f8f9fa',
          resize: 'vertical'
        }}
      />
      <button
        onClick={copyToClipboard}
        style={{
          marginTop: '8px',
          padding: '8px 16px',
          backgroundColor: copied ? '#28a745' : '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          fontSize: '14px'
        }}
      >
        {copied ? 'Copiato!' : 'Copia'}
      </button>
    </div>
  );
}

// Client component for email capture and snippet generation
function GetSnippetBox() {
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [generatedSnippet, setGeneratedSnippet] = useState('');
  const [generatedPublicId, setGeneratedPublicId] = useState('');

  const handleGetSnippet = async () => {
    if (!email) {
      setError('Inserisci la tua email');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config: {
            // Default config for preview
            theme: 'light',
            position: 'bottom-right'
          }
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Impossibile generare lo snippet');
      }

      const { publicId, publicKey } = await response.json();
      setGeneratedPublicId(publicId);
      
      const snippet = `<div id="ckeen-${publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${publicKey}?v=1"></script>`;
      
      setGeneratedSnippet(snippet);
      // Minimal hint (dev console) for direct form smoke
      console.log('PublicId for form POST:', publicId);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Qualcosa è andato storto');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={{ margin: '24px 0' }}>
      {!generatedSnippet ? (
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end' }}>
          <div style={{ flex: '1', minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              La tua email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="tua@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: isLoading ? '#ccc' : '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            {isLoading ? 'Generando...' : 'Ottieni Snippet'}
          </button>
        </div>
      ) : (
        <div>
          <textarea
            value={generatedSnippet}
            readOnly
            style={{
              width: '100%',
              minHeight: '80px',
              fontFamily: 'monospace',
              fontSize: '14px',
              padding: '12px',
              border: '1px solid #e1e5e9',
              borderRadius: '8px',
              backgroundColor: '#f8f9fa',
              resize: 'vertical'
            }}
          />
          <p style={{ fontSize: '14px', color: '#666', marginTop: '8px' }}>
            Vuoi modificarlo e salvarlo? Puoi creare un account più tardi — il widget funziona subito.
          </p>
        </div>
      )}
      {error && (
        <p style={{ color: '#dc3545', fontSize: '14px', marginTop: '8px' }}>
          {error}
        </p>
      )}
    </div>
  );
}

const PUBLIC_ID = process.env.DEMO_PUBLIC_ID || 'DEMO';
const EMBED_VERSION = Number(process.env.EMBED_VERSION) || 1;
const isDev = process.env.NODE_ENV === 'development';

export default function Page() {
  return (
    <main style={{ maxWidth: '800px', margin: '0 auto', padding: '24px' }}>
      {/* Live Demo */}
      <section id="demo" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Demo dal vivo</h2>
        <div 
          id={`ckeen-${PUBLIC_ID}`}
          style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: '#f8f9fa'
          }}
        ></div>
        <script 
          async 
          defer 
          src={isDev 
            ? `http://localhost:3002/api/e/${PUBLIC_ID}`
            : `https://c-keen-embed.vercel.app/api/e/${PUBLIC_ID}?v=${EMBED_VERSION}`
          }
        />
      </section>

      {/* Widget Configurator */}
      <ConfiguratorIT />

      {/* Why It's Faster */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Perché è più veloce</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Payload limitato a 28 KB</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Distribuito via Edge e cache immutabile</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Nessun iframe pesante al caricamento</span>
          </div>
        </div>
      </section>

      {/* Get Your Snippet */}
      <section id="snippet" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Ottieni il tuo snippet</h2>
        <GetSnippetBox />
        
        <h3 style={{ fontSize: '1.4rem', marginTop: '48px', marginBottom: '24px', color: '#1a1a1a' }}>Snippet demo</h3>
        <SnippetBox publicId={PUBLIC_ID} version={EMBED_VERSION} isDev={isDev} />
      </section>

      {/* Customization */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Personalizzazione</h2>
        <p style={{ fontSize: '1.1rem', lineHeight: '1.6', color: '#666' }}>
          Il widget si adatta automaticamente al tema del tuo sito. Personalizza colori, font e comportamento tramite la nostra dashboard o API.
        </p>
      </section>

      {/* Accessibility & Privacy */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Accessibilità e Privacy</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Accessibilità</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Navigazione da tastiera, etichette ARIA, rispetta le preferenze 'riduci movimento'.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Privacy</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Nessun tracker nello script; analytics anonimi opzionali.
            </p>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>FAQ</h2>
        <div style={{ display: 'grid', gap: '24px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Quanto è veloce?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Il widget si carica in meno di 100ms ed è memorizzato globalmente via CDN.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>È conforme al GDPR?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Sì, raccogliamo solo i dati che permetti esplicitamente e forniamo esportazione/cancellazione completa dei dati.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Posso personalizzare lo stile?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Assolutamente. Usa le proprietà CSS personalizzate o la nostra dashboard per abbinare il tuo brand.
            </p>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section style={{ textAlign: 'center', marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '16px', color: '#1a1a1a' }}>Pronto a iniziare?</h2>
        <p style={{ fontSize: '1.1rem', color: '#666', marginBottom: '24px' }}>
          Unisciti a migliaia di sviluppatori che usano i widget Clickeen.
        </p>
        <a 
          href="/dashboard" 
          style={{
            padding: '16px 32px',
            backgroundColor: '#007bff',
            color: 'white',
            textDecoration: 'none',
            borderRadius: '8px',
            fontWeight: '600',
            fontSize: '1.1rem'
          }}
        >
          Inizia gratis
        </a>
      </section>
    </main>
  );
}
</file>

<file path="apps/site/app/it/page.tsx">
export default function Page() {
  return (
    <main style={{ padding: 24 }}>
      <h1>IT root works ✅</h1>
      <p>This verifies the /it route group is recognized.</p>
      <p>Try: <a href="/it/widgets/contact-form">/it/widgets/contact-form</a></p>
    </main>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/Configurator.tsx">
'use client';

import { useState, useEffect, useRef, useCallback } from 'react';

interface ConfigState {
  title: string;
  successText: string;
  theme: 'light' | 'dark';
  fields: {
    name: boolean;
    email: boolean;
    message: boolean;
  };
}

const STORAGE_KEY = 'cf_cfg';

const defaultConfig: ConfigState = {
  title: 'Contact us',
  successText: 'Thanks! We\'ll get back to you soon.',
  theme: 'light',
  fields: {
    name: true,
    email: true,
    message: true,
  },
};

export default function Configurator() {
  const [config, setConfig] = useState<ConfigState>(defaultConfig);
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [snippet, setSnippet] = useState('');
  const [publicKey, setPublicKey] = useState('');
  const [isUpdating, setIsUpdating] = useState(false);
  const [previewSrcDoc, setPreviewSrcDoc] = useState('');
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const debounceTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);

  const encodeCfg = (cfg: ConfigState) => btoa(unescape(encodeURIComponent(JSON.stringify(cfg))));

  const previewHtml = (cfg: ConfigState) => `
     <!doctype html>
     <html>
       <head>
         <meta charset="utf-8" />
         <meta name="viewport" content="width=device-width,initial-scale=1" />
         <style>
           html,body{margin:0;padding:0;background:#f7f8fa;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;}
           #root{padding:12px}
           .err{font:12px/1.4 system-ui;color:#b00020;background:#fff3f3;border:1px solid #ffd7d7;border-radius:6px;padding:8px}
         </style>
       </head>
       <body>
         <div id="ckeen-DEMO"></div>
         <script>
           window.__CKEEN_PREVIEW__ = {
             config: ${JSON.stringify(cfg)},
             embedOrigin: 'https://c-keen-embed.vercel.app'
           };
         </script>
         <script async src="https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(cfg)}"></` + `script>
         <script>
           window.addEventListener('error', (e) => {
             const d=document.createElement('div');
             d.className='err';
             d.textContent='Preview error: ' + (e.message||'unknown');
             document.body.appendChild(d);
           });
         </script>
       </body>
     </html>`;

  // Load config from localStorage on mount
  useEffect(() => {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        setConfig({ ...defaultConfig, ...parsed });
      } catch (e) {
        console.warn('Failed to parse saved config:', e);
      }
    }
  }, []);

  // Debounced preview srcDoc rebuild (external script via srcDoc)
  const rebuildPreview = useCallback((cfg: ConfigState) => {
    setIsUpdating(true);
    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);
    debounceTimeoutRef.current = setTimeout(() => {
      setPreviewSrcDoc(previewHtml(cfg));
      setIsUpdating(false);
    }, 250);
  }, []);

  // Save config and rebuild preview on changes
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(config));
    rebuildPreview(config);
  }, [config, rebuildPreview]);

  // No fallback needed with srcDoc

  const updateConfig = (updates: Partial<ConfigState>) => {
    setConfig(prev => ({ ...prev, ...updates }));
  };

  const updateFields = (field: keyof ConfigState['fields'], value: boolean) => {
    setConfig(prev => ({
      ...prev,
      fields: { ...prev.fields, [field]: value }
    }));
  };

  const validateEmail = (email: string) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const handleGetSnippet = async () => {
    if (!validateEmail(email)) {
      setError('Please enter a valid email address');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to generate snippet');
      }

      const data = await response.json();
      setPublicKey(data.publicKey);
      
      const snippetText = `<div id="ckeen-${data.publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${data.publicKey}?v=1"></script>
<!-- Powered by Clickeen — remove with Pro -->`;
      
      setSnippet(snippetText);
      // Optionally show publicId hint in UI without changing layout
      console.log('PublicId for direct POST smoke:', data.publicId);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to generate snippet');
    } finally {
      setIsLoading(false);
    }
  };

  const copySnippet = async () => {
    try {
      await navigator.clipboard.writeText(snippet);
      // Could add a toast notification here
    } catch (err) {
      console.error('Failed to copy snippet:', err);
    }
  };

  // Using srcDoc-based preview; no external src URL required

  return (
    <div style={{ marginBottom: '48px' }}>
      <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>
        Configure Your Widget
      </h2>
      
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '32px', alignItems: 'start' }}>
        {/* Configuration Panel */}
        <div style={{ display: 'grid', gap: '20px' }}>
          {/* Title */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Form Title
            </label>
            <input
              type="text"
              value={config.title}
              onChange={(e) => updateConfig({ title: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Success Text */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Success Message
            </label>
            <input
              type="text"
              value={config.successText}
              onChange={(e) => updateConfig({ successText: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Fields */}
          <div>
            <label style={{ display: 'block', marginBottom: '12px', fontSize: '14px', fontWeight: '500' }}>
              Form Fields
            </label>
            <div style={{ display: 'grid', gap: '8px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.name}
                  onChange={(e) => updateFields('name', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Name field
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', opacity: 0.6 }}>
                <input
                  type="checkbox"
                  checked={true}
                  disabled
                  style={{ width: '16px', height: '16px' }}
                />
                Email field (always required)
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.message}
                  onChange={(e) => updateFields('message', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Message field
              </label>
            </div>
          </div>

          {/* Theme */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Theme
            </label>
            <div style={{ display: 'flex', gap: '12px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'light'}
                  onChange={() => updateConfig({ theme: 'light' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Light
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'dark'}
                  onChange={() => updateConfig({ theme: 'dark' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Dark
              </label>
            </div>
          </div>
        </div>

        {/* Live Preview */}
        <div style={{ position: 'relative' }}>
          <div style={{ 
            position: 'absolute', 
            top: '8px', 
            right: '8px', 
            backgroundColor: '#007bff', 
            color: 'white', 
            padding: '4px 8px', 
            borderRadius: '4px', 
            fontSize: '12px', 
            fontWeight: '500',
            zIndex: 10
          }}>
            Preview
          </div>
          {isUpdating && (
            <div style={{ 
              position: 'absolute', 
              top: '8px', 
              left: '8px', 
              backgroundColor: '#ffc107', 
              color: '#000', 
              padding: '4px 8px', 
              borderRadius: '4px', 
              fontSize: '12px', 
              fontWeight: '500',
              zIndex: 10
            }}>
              Updating...
            </div>
          )}
          <div style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: config.theme === 'dark' ? '#1a1a1a' : '#f8f9fa',
            minHeight: '200px',
            position: 'relative'
          }}>
            <iframe
              ref={iframeRef}
              sandbox="allow-scripts allow-same-origin"
              srcDoc={previewSrcDoc}
              style={{
                width: '100%',
                height: '280px',
                border: 'none',
                borderRadius: '4px'
              }}
              title="Widget Preview"
            />
            <div style={{ marginTop: '8px' }}>
              <a href={`https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(config)}`} target="_blank" rel="noopener noreferrer" style={{ fontSize: '12px', color: '#007bff' }}>
                Open preview in new tab
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Snippet Generation */}
      <div style={{ marginTop: '32px', padding: '24px', border: '1px solid #e1e5e9', borderRadius: '8px', backgroundColor: '#f8f9fa' }}>
        <h3 style={{ fontSize: '1.4rem', marginBottom: '16px', color: '#1a1a1a' }}>Get Your Snippet</h3>
        
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end', marginBottom: '16px' }}>
          <div style={{ flex: 1, minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Your email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500',
              opacity: isLoading ? 0.6 : 1
            }}
          >
            {isLoading ? 'Generating...' : 'Get Snippet'}
          </button>
        </div>

        {error && (
          <div style={{ color: '#dc3545', fontSize: '14px', marginBottom: '16px' }}>
            {error}
          </div>
        )}

        {snippet && (
          <div>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }}>
              <h4 style={{ fontSize: '1.1rem', margin: 0, color: '#1a1a1a' }}>Your Snippet</h4>
              <button
                onClick={copySnippet}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#28a745',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px',
                  fontWeight: '500'
                }}
              >
                Copy
              </button>
            </div>
            <textarea
              readOnly
              value={snippet}
              style={{
                width: '100%',
                minHeight: '100px',
                fontFamily: 'monospace',
                fontSize: '14px',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                backgroundColor: '#fff',
                resize: 'vertical'
              }}
            />
            <p style={{ fontSize: '13px', color: '#666', marginTop: '8px', marginBottom: 0 }}>
              Free plan includes a small Powered by Clickeen badge.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/ConfiguratorIT.tsx">
'use client';

import { useState, useEffect, useRef, useCallback } from 'react';

interface ConfigState {
  title: string;
  successText: string;
  theme: 'light' | 'dark';
  fields: {
    name: boolean;
    email: boolean;
    message: boolean;
  };
}

const STORAGE_KEY = 'cf_cfg';

const defaultConfig: ConfigState = {
  title: 'Contattaci',
  successText: 'Grazie! Ti risponderemo presto.',
  theme: 'light',
  fields: {
    name: true,
    email: true,
    message: true,
  },
};

export default function ConfiguratorIT() {
  const [config, setConfig] = useState<ConfigState>(defaultConfig);
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [snippet, setSnippet] = useState('');
  const [publicKey, setPublicKey] = useState('');
  const [isUpdating, setIsUpdating] = useState(false);
  const [previewSrcDoc, setPreviewSrcDoc] = useState('');
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const debounceTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);
  const encodeCfg = (cfg: ConfigState) => btoa(unescape(encodeURIComponent(JSON.stringify(cfg))));

  const previewHtml = (cfg: ConfigState) => `
     <!doctype html>
     <html>
       <head>
         <meta charset="utf-8" />
         <meta name="viewport" content="width=device-width,initial-scale=1" />
         <style>
           html,body{margin:0;padding:0;background:#f7f8fa;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;}
           #root{padding:12px}
           .err{font:12px/1.4 system-ui;color:#b00020;background:#fff3f3;border:1px solid #ffd7d7;border-radius:6px;padding:8px}
         </style>
       </head>
       <body>
         <div id="ckeen-DEMO"></div>
         <script>
           window.__CKEEN_PREVIEW__ = {
             config: ${JSON.stringify(cfg)},
             embedOrigin: 'https://c-keen-embed.vercel.app'
           };
         </script>
         <script async src="https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(cfg)}"></` + `script>
         <script>
           window.addEventListener('error', (e) => {
             const d=document.createElement('div');
             d.className='err';
             d.textContent='Preview error: ' + (e.message||'unknown');
             document.body.appendChild(d);
           });
         </script>
       </body>
     </html>`;

  // Load config from localStorage on mount
  useEffect(() => {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        setConfig({ ...defaultConfig, ...parsed });
      } catch (e) {
        console.warn('Failed to parse saved config:', e);
      }
    }
  }, []);

  // Debounced preview srcDoc rebuild (external script via srcDoc)
  const rebuildPreview = useCallback((cfg: ConfigState) => {
    setIsUpdating(true);
    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);
    debounceTimeoutRef.current = setTimeout(() => {
      setPreviewSrcDoc(previewHtml(cfg));
      setIsUpdating(false);
    }, 250);
  }, []);

  // Save config and rebuild preview on changes
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(config));
    rebuildPreview(config);
  }, [config, rebuildPreview]);

  // No fallback needed with srcDoc

  const updateConfig = (updates: Partial<ConfigState>) => {
    setConfig(prev => ({ ...prev, ...updates }));
  };

  const updateFields = (field: keyof ConfigState['fields'], value: boolean) => {
    setConfig(prev => ({
      ...prev,
      fields: { ...prev.fields, [field]: value }
    }));
  };

  const validateEmail = (email: string) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  const handleGetSnippet = async () => {
    if (!validateEmail(email)) {
      setError('Inserisci un indirizzo email valido');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Impossibile generare lo snippet');
      }

      const data = await response.json();
      setPublicKey(data.publicKey);
      
      const snippetText = `<div id="ckeen-${data.publicKey}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${data.publicKey}?v=1"></script>
<!-- Powered by Clickeen — remove with Pro -->`;
      
      setSnippet(snippetText);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Impossibile generare lo snippet');
    } finally {
      setIsLoading(false);
    }
  };

  const copySnippet = async () => {
    try {
      await navigator.clipboard.writeText(snippet);
      // Could add a toast notification here
    } catch (err) {
      console.error('Failed to copy snippet:', err);
    }
  };

  // Using srcDoc-based preview; no external src URL required

  return (
    <div style={{ marginBottom: '48px' }}>
      <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>
        Configura il tuo Widget
      </h2>
      
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '32px', alignItems: 'start' }}>
        {/* Configuration Panel */}
        <div style={{ display: 'grid', gap: '20px' }}>
          {/* Title */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Titolo del Form
            </label>
            <input
              type="text"
              value={config.title}
              onChange={(e) => updateConfig({ title: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Success Text */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Messaggio di Successo
            </label>
            <input
              type="text"
              value={config.successText}
              onChange={(e) => updateConfig({ successText: e.target.value })}
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>

          {/* Fields */}
          <div>
            <label style={{ display: 'block', marginBottom: '12px', fontSize: '14px', fontWeight: '500' }}>
              Campi del Form
            </label>
            <div style={{ display: 'grid', gap: '8px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.name}
                  onChange={(e) => updateFields('name', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Campo nome
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', opacity: 0.6 }}>
                <input
                  type="checkbox"
                  checked={true}
                  disabled
                  style={{ width: '16px', height: '16px' }}
                />
                Campo email (sempre richiesto)
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="checkbox"
                  checked={config.fields.message}
                  onChange={(e) => updateFields('message', e.target.checked)}
                  style={{ width: '16px', height: '16px' }}
                />
                Campo messaggio
              </label>
            </div>
          </div>

          {/* Theme */}
          <div>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Tema
            </label>
            <div style={{ display: 'flex', gap: '12px' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'light'}
                  onChange={() => updateConfig({ theme: 'light' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Chiaro
              </label>
              <label style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px' }}>
                <input
                  type="radio"
                  name="theme"
                  checked={config.theme === 'dark'}
                  onChange={() => updateConfig({ theme: 'dark' })}
                  style={{ width: '16px', height: '16px' }}
                />
                Scuro
              </label>
            </div>
          </div>
        </div>

        {/* Live Preview */}
        <div style={{ position: 'relative' }}>
          <div style={{ 
            position: 'absolute', 
            top: '8px', 
            right: '8px', 
            backgroundColor: '#007bff', 
            color: 'white', 
            padding: '4px 8px', 
            borderRadius: '4px', 
            fontSize: '12px', 
            fontWeight: '500',
            zIndex: 10
          }}>
            Anteprima
          </div>
          {isUpdating && (
            <div style={{ 
              position: 'absolute', 
              top: '8px', 
              left: '8px', 
              backgroundColor: '#ffc107', 
              color: '#000', 
              padding: '4px 8px', 
              borderRadius: '4px', 
              fontSize: '12px', 
              fontWeight: '500',
              zIndex: 10
            }}>
              Aggiornamento...
            </div>
          )}
          <div style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: config.theme === 'dark' ? '#1a1a1a' : '#f8f9fa',
            minHeight: '200px',
            position: 'relative'
          }}>
            <iframe
              ref={iframeRef}
              sandbox="allow-scripts allow-same-origin"
              srcDoc={previewSrcDoc}
              style={{
                width: '100%',
                height: '280px',
                border: 'none',
                borderRadius: '4px'
              }}
              title="Anteprima Widget"
            />
            <div style={{ marginTop: '8px' }}>
              <a href={`https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=${encodeCfg(config)}`} target="_blank" rel="noopener noreferrer" style={{ fontSize: '12px', color: '#007bff' }}>
                Apri anteprima in una nuova scheda
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Snippet Generation */}
      <div style={{ marginTop: '32px', padding: '24px', border: '1px solid #e1e5e9', borderRadius: '8px', backgroundColor: '#f8f9fa' }}>
        <h3 style={{ fontSize: '1.4rem', marginBottom: '16px', color: '#1a1a1a' }}>Ottieni il tuo Snippet</h3>
        
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end', marginBottom: '16px' }}>
          <div style={{ flex: 1, minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              La tua email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="la tua email"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500',
              opacity: isLoading ? 0.6 : 1
            }}
          >
            {isLoading ? 'Generazione...' : 'Ottieni snippet'}
          </button>
        </div>

        {error && (
          <div style={{ color: '#dc3545', fontSize: '14px', marginBottom: '16px' }}>
            {error}
          </div>
        )}

        {snippet && (
          <div>
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }}>
              <h4 style={{ fontSize: '1.1rem', margin: 0, color: '#1a1a1a' }}>Il tuo Snippet</h4>
              <button
                onClick={copySnippet}
                style={{
                  padding: '6px 12px',
                  backgroundColor: '#28a745',
                  color: 'white',
                  border: 'none',
                  borderRadius: '4px',
                  cursor: 'pointer',
                  fontSize: '12px',
                  fontWeight: '500'
                }}
              >
                Copia
              </button>
            </div>
            <textarea
              readOnly
              value={snippet}
              style={{
                width: '100%',
                minHeight: '100px',
                fontFamily: 'monospace',
                fontSize: '14px',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                backgroundColor: '#fff',
                resize: 'vertical'
              }}
            />
            <p style={{ fontSize: '13px', color: '#666', marginTop: '8px', marginBottom: 0 }}>
              Il piano gratuito include un piccolo badge Powered by Clickeen.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/page.tsx">
'use client';

import { useState } from 'react';
import Configurator from './Configurator';

// Client component for the snippet box
function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const [copied, setCopied] = useState(false);
  
  const scriptSrc = isDev 
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://c-keen-embed.vercel.app/api/e/${publicId}?v=${version}`;
  
  const snippet = `<div id="ckeen-${publicId}"></div>
<script async defer src="${scriptSrc}"></script>`;

  const copyToClipboard = async () => {
    await navigator.clipboard.writeText(snippet);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <div style={{ margin: '24px 0' }}>
      <textarea
        value={snippet}
        readOnly
        style={{
          width: '100%',
          minHeight: '80px',
          fontFamily: 'monospace',
          fontSize: '14px',
          padding: '12px',
          border: '1px solid #e1e5e9',
          borderRadius: '8px',
          backgroundColor: '#f8f9fa',
          resize: 'vertical'
        }}
      />
      <button
        onClick={copyToClipboard}
        style={{
          marginTop: '8px',
          padding: '8px 16px',
          backgroundColor: copied ? '#28a745' : '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          fontSize: '14px'
        }}
      >
        {copied ? 'Copied!' : 'Copy'}
      </button>
    </div>
  );
}

// Client component for email capture and snippet generation
function GetSnippetBox() {
  const [email, setEmail] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [generatedSnippet, setGeneratedSnippet] = useState('');
  const [generatedPublicId, setGeneratedPublicId] = useState('');

  const handleGetSnippet = async () => {
    if (!email) {
      setError('Please enter your email');
      return;
    }

    setIsLoading(true);
    setError('');

    try {
      const response = await fetch('/api/widgets/anonymous', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
          type: 'contact-form',
          config: {
            // Default config for preview
            theme: 'light',
            position: 'bottom-right'
          }
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to generate snippet');
      }

      const { publicId } = await response.json();
      setGeneratedPublicId(publicId);
      
      const snippet = `<div id="ckeen-${publicId}"></div>
<script async src="https://c-keen-embed.vercel.app/api/e/${publicId}?v=1"></script>`;
      
      setGeneratedSnippet(snippet);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Something went wrong');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={{ margin: '24px 0' }}>
      {!generatedSnippet ? (
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'flex-end' }}>
          <div style={{ flex: '1', minWidth: '200px' }}>
            <label style={{ display: 'block', marginBottom: '8px', fontSize: '14px', fontWeight: '500' }}>
              Your email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your@email.com"
              style={{
                width: '100%',
                padding: '12px',
                border: '1px solid #e1e5e9',
                borderRadius: '8px',
                fontSize: '14px'
              }}
            />
          </div>
          <button
            onClick={handleGetSnippet}
            disabled={isLoading}
            style={{
              padding: '12px 24px',
              backgroundColor: isLoading ? '#ccc' : '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              cursor: isLoading ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            {isLoading ? 'Generating...' : 'Get Snippet'}
          </button>
        </div>
      ) : (
        <div>
          <textarea
            value={generatedSnippet}
            readOnly
            style={{
              width: '100%',
              minHeight: '80px',
              fontFamily: 'monospace',
              fontSize: '14px',
              padding: '12px',
              border: '1px solid #e1e5e9',
              borderRadius: '8px',
              backgroundColor: '#f8f9fa',
              resize: 'vertical'
            }}
          />
          <p style={{ fontSize: '14px', color: '#666', marginTop: '8px' }}>
            Want to edit and save it? You can create an account later — the widget works right now.
          </p>
        </div>
      )}
      {error && (
        <p style={{ color: '#dc3545', fontSize: '14px', marginTop: '8px' }}>
          {error}
        </p>
      )}
    </div>
  );
}

const PUBLIC_ID = process.env.DEMO_PUBLIC_ID || 'DEMO';
const EMBED_VERSION = Number(process.env.EMBED_VERSION) || 1;
const isDev = process.env.NODE_ENV === 'development';

export default function Page() {
  return (
    <main style={{ maxWidth: '800px', margin: '0 auto', padding: '24px' }}>
      {/* Live Demo */}
      <section id="demo" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Live Demo</h2>
        <div 
          id={`ckeen-${PUBLIC_ID}`}
          style={{ 
            border: '1px solid #e1e5e9', 
            borderRadius: '8px', 
            padding: '24px',
            backgroundColor: '#f8f9fa'
          }}
        ></div>
        <script 
          async 
          defer 
          src={isDev 
            ? `http://localhost:3002/api/e/${PUBLIC_ID}`
            : `https://c-keen-embed.vercel.app/api/e/${PUBLIC_ID}?v=${EMBED_VERSION}`
          }
        />
      </section>

      {/* Widget Configurator */}
      <Configurator />

      {/* Why It's Faster */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Why It's Faster</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Payload limited to 28 KB</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>Distributed via Edge and immutable cache</span>
          </div>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <div style={{ width: '8px', height: '8px', backgroundColor: '#007bff', borderRadius: '50%' }}></div>
            <span style={{ fontSize: '1.1rem' }}>No heavy iframe on load</span>
          </div>
        </div>
      </section>

      {/* Copy-paste Snippet */}
      <section id="snippet" style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Get Your Snippet</h2>
        <GetSnippetBox />
        
        <h3 style={{ fontSize: '1.4rem', marginTop: '48px', marginBottom: '24px', color: '#1a1a1a' }}>Demo Snippet</h3>
        <SnippetBox publicId={PUBLIC_ID} version={EMBED_VERSION} isDev={isDev} />
      </section>

      {/* Customization */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Customization</h2>
        <p style={{ fontSize: '1.1rem', lineHeight: '1.6', color: '#666' }}>
          The widget automatically adapts to your site's theme. Customize colors, fonts, and behavior through our dashboard or API.
        </p>
      </section>

      {/* Accessibility & Privacy */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>Accessibility & Privacy</h2>
        <div style={{ display: 'grid', gap: '16px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Accessibility</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Keyboard navigation, ARIA labels, respects 'reduce motion' preferences.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Privacy</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              No trackers in the script; anonymous analytics optional.
            </p>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section style={{ marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '24px', color: '#1a1a1a' }}>FAQ</h2>
        <div style={{ display: 'grid', gap: '24px' }}>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>How fast is it?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              The widget loads in under 100ms and is cached globally via CDN.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Is it GDPR compliant?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Yes, we only collect data you explicitly allow and provide full data export/deletion.
            </p>
          </div>
          <div>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '8px', color: '#1a1a1a' }}>Can I customize the styling?</h3>
            <p style={{ color: '#666', lineHeight: '1.6' }}>
              Absolutely. Use CSS custom properties or our dashboard to match your brand.
            </p>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section style={{ textAlign: 'center', marginBottom: '48px' }}>
        <h2 style={{ fontSize: '1.8rem', marginBottom: '16px', color: '#1a1a1a' }}>Ready to get started?</h2>
        <p style={{ fontSize: '1.1rem', color: '#666', marginBottom: '24px' }}>
          Join thousands of developers using Clickeen widgets.
        </p>
        <a 
          href="/dashboard" 
          style={{
            padding: '16px 32px',
            backgroundColor: '#007bff',
            color: 'white',
            textDecoration: 'none',
            borderRadius: '8px',
            fontWeight: '600',
            fontSize: '1.1rem'
          }}
        >
          Get Started Free
        </a>
      </section>
    </main>
  );
}
</file>

<file path="apps/site/app/widgets/contact-form/SnippetBox.tsx">
'use client';
import { useState } from 'react';

export default function SnippetBox({ publicId, version, isDev }: { publicId: string; version: number; isDev: boolean }) {
  const src = isDev
    ? `http://localhost:3002/api/e/${publicId}`
    : `https://cdn.c-keen.com/e/${publicId}.js?v=${version}`;
  const snippet = `<div id="ckeen-${publicId}"></div>\n<script async defer src="${src}"></script>`;
  const [copied, setCopied] = useState(false);
  return (
    <div style={{ display: 'grid', gap: 8, maxWidth: 720 }}>
      <textarea readOnly value={snippet} style={{ width: '100%', height: 100, fontFamily: 'ui-monospace, SFMono-Regular, Menlo, monospace', fontSize: 13, padding: 12, borderRadius: 8, border: '1px solid #ddd' }} />
      <button onClick={() => { navigator.clipboard.writeText(snippet); setCopied(true); setTimeout(()=>setCopied(false), 2000); }}
        style={{ alignSelf: 'start', padding: '8px 12px', borderRadius: 8, border: '1px solid #ddd', background: copied ? '#e6ffed' : 'white' }}>
        {copied ? 'Copied!' : 'Copy'}
      </button>
    </div>
  );
}
</file>

<file path="apps/site/app/layout.tsx">
export const metadata = {
  title: 'Clickeen',
  description: 'Fast, lightweight widgets',
};
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return <html lang="en"><body>{children}</body></html>;
}
</file>

<file path="apps/site/app/page.tsx">
export default function Page(){
  return (<main style={{padding:24}}>
    <h1>Clickeen</h1>
    <p>Widget-first platform. Tiny, fast, and versioned.</p>
    <a href="/widgets/contact-form">→ Contact Form widget</a>
  </main>);
}
</file>

<file path="apps/site/app/robots.ts">
export default function robots() {
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
  return {
    rules: [{ userAgent: '*', allow: '/' }],
    sitemap: `${base}/sitemap.xml`,
  };
}
</file>

<file path="apps/site/app/sitemap.ts">
export default async function sitemap() {
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000';
  return [
    { url: `${base}/`, changeFrequency: 'weekly', priority: 0.6 },
    { url: `${base}/widgets/contact-form`, changeFrequency: 'weekly', priority: 0.8 },
    { url: `${base}/it/widgets/contact-form`, changeFrequency: 'weekly', priority: 0.8 }
  ];
}
</file>

<file path="apps/site/app/version.txt">
2025-09-02T02:13:54Z
</file>

<file path="apps/site/lib/supabase.ts">
import { createClient } from '@supabase/supabase-js';

// Client used in the browser (public anon key)
export function getBrowserClient() {
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  if (!supabaseUrl || !supabaseAnonKey) return null;
  return createClient(supabaseUrl, supabaseAnonKey);
}

// Server-side client (service role) - only import in server contexts
export function getServerClient() {
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  if (!supabaseUrl || !serviceKey) {
    throw new Error('Missing Supabase environment variables');
  }
  return createClient(supabaseUrl, serviceKey, { auth: { persistSession: false } });
}

// Types for widget_instances table
export interface WidgetInstance {
  id: string;
  workspace_id: string | null;
  type_id: string;
  public_id: string;
  version: number;
  status: string;
  config: Record<string, any>;
  allowed_domains: string[];
  show_badge: boolean;
  created_by: string;
  created_at: string;
}

export interface CreateWidgetInstancePayload {
  workspace_id: string | null;
  type_id: string;
  public_id: string;
  status: string;
  config: Record<string, any>;
  allowed_domains?: string[];
  show_badge?: boolean;
  created_by?: string;
}
</file>

<file path="apps/site/lib/supabaseAdmin.ts">
import { createClient } from '@supabase/supabase-js';

// Server-side service role client for privileged operations.
// Never import this in client components.
export function supabaseAdmin() {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  if (!url || !serviceKey) {
    throw new Error('Missing Supabase environment variables for service role client');
  }
  return createClient(url, serviceKey, { auth: { persistSession: false } });
}
</file>

<file path="apps/site/.redeploy.txt">
2025-09-03T21:32:48Z
</file>

<file path="apps/site/next.config.mjs">
export default {
  headers: async () => [{
    source: "/(.*)",
    headers: [
      { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
      { key: "Permissions-Policy", value: "camera=(), microphone=(), geolocation=()" }
    ]
  }]
};
</file>

<file path="apps/site/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "baseUrl": ".",
    "paths": {
      "@/*": ["./*"]
    },
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="dieter/components/avatar.css">
/* Dieter Avatar v0 — image/initials */
.diet-avatar {
  inline-size: 2rem; block-size: 2rem; border-radius: 50%;
  display:grid; place-items:center; overflow:hidden;
  background: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%);
  color: var(--color-on-primary, #fff); font-weight:600;
  border: 1px solid var(--color-border);
}
.diet-avatar--lg { inline-size: 3rem; block-size: 3rem; }
.diet-avatar img { inline-size:100%; block-size:100%; object-fit: cover; }
</file>

<file path="dieter/components/banner.css">
/* Dieter Banner v0 — info/success/warning/error */
.diet-banner {
  display:grid; grid-template-columns: auto 1fr auto; gap: var(--space-3);
  align-items: center;
  padding: var(--space-3);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, .5rem);
  color: var(--color-text-primary);
}
.diet-banner__icon { inline-size: 1rem; block-size: 1rem; border-radius: 50%; background: var(--color-primary); }
.diet-banner__title { font-weight: 600; }
.diet-banner__actions { display:flex; gap: var(--space-2); }
.diet-banner__btn {
  appearance:none; font:inherit; min-block-size:44px; padding: 0 var(--space-3);
  border-radius: var(--radius-2, .375rem); cursor:pointer;
  border: 1px solid var(--color-border); background: var(--color-surface); color: var(--color-text-primary);
}
.diet-banner__btn:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
/* Variants tint */
.diet-banner--info    { border-color: var(--color-primary); }
.diet-banner--info .diet-banner__icon { background: var(--color-primary); }
.diet-banner--success { border-color: var(--color-success, #1a7f37); }
.diet-banner--success .diet-banner__icon { background: var(--color-success, #1a7f37); }
.diet-banner--warning { border-color: var(--color-warning, #b7791f); }
.diet-banner--warning .diet-banner__icon { background: var(--color-warning, #b7791f); }
.diet-banner--error   { border-color: var(--color-danger, #d93025); }
.diet-banner--error .diet-banner__icon { background: var(--color-danger, #d93025); }
</file>

<file path="dieter/components/button-group.css">
/* Dieter Button Group v0 — grouped buttons with selection */
.diet-btn-group {
  display: inline-flex;
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
}
.diet-btn-group .diet-btn {
  border: none;
  border-inline-end: 1px solid var(--color-border);
  background: transparent;
  color: var(--color-text-primary);
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-4);
}
.diet-btn-group .diet-btn:last-child { border-inline-end: none; }
.diet-btn-group .diet-btn:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-btn-group .diet-btn:focus-visible {
  outline: none;
  box-shadow:
    inset 0 0 0 2px var(--color-bg, #fff),
    inset 0 0 0 calc(2px + var(--focus-ring-width, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-btn-group .diet-btn[aria-pressed="true"],
.diet-btn-group .diet-btn[aria-current="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
</file>

<file path="dieter/components/chip.css">
/* Dieter Chip v0 — pill + optional dismiss */
.diet-chip {
  display:inline-flex; align-items:center; gap: .5ch;
  padding-inline: var(--space-2); min-block-size: 2rem;
  border: 1px solid var(--color-border); border-radius: 9999px;
  background: var(--color-surface); color: var(--color-text-secondary);
}
.diet-chip--primary { border-color: var(--color-primary); color: var(--color-text-primary); background: color-mix(in oklab, var(--color-surface), var(--color-primary) 10%); }
.diet-chip__dismiss {
  appearance:none; background: transparent; border: 1px solid var(--color-border);
  inline-size: 1.5rem; block-size: 1.5rem; border-radius: 9999px; cursor:pointer;
}
.diet-chip__dismiss:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/drawer.css">
/* Dieter Drawer v0 — tokens-only, :target based (no JS) */
.diet-drawer-overlay {
  position: fixed; inset: 0;
  background: color-mix(in oklab, var(--color-surface), black 50%);
  opacity: 0; pointer-events: none; transition: opacity .2s ease;
}
.diet-drawer {
  position: fixed; inset-block: 0; inset-inline-end: 0;
  inline-size: min(90vw, 28rem);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-inline-start: 1px solid var(--color-border);
  transform: translateX(100%); transition: transform .25s ease;
  display: grid; grid-template-rows: auto 1fr auto; gap: var(--space-3);
  padding: var(--space-4);
}
.diet-drawer__header { display:flex; align-items:center; justify-content:space-between; gap: var(--space-2); }
.diet-drawer__title { font: inherit; font-weight: 600; }
.diet-drawer__close {
  appearance: none; background: var(--color-surface);
  border: 1px solid var(--color-border); border-radius: var(--radius-2, .375rem);
  min-block-size: 44px; padding-inline: var(--space-3); cursor: pointer;
  color: var(--color-text-primary);
}
.diet-drawer__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
:root:target .diet-drawer-open { } /* noop to satisfy some linters */

/* Target wiring */
#drawer:target ~ .diet-drawer-overlay { opacity: .9; pointer-events: auto; }
#drawer:target ~ .diet-drawer { transform: translateX(0%); }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-drawer, .diet-drawer-overlay { transition: none; }
}
</file>

<file path="dieter/components/empty-state.css">
/* Dieter Empty State v0 */
.diet-empty {
  display:grid; justify-items:center; text-align:center; gap: var(--space-3);
  padding: var(--space-6);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, .5rem);
  color: var(--color-text-secondary);
}
.diet-empty__icon { inline-size: 3rem; block-size: 3rem; border-radius: 1rem; background: color-mix(in oklab, var(--color-surface), var(--color-primary) 10%); }
.diet-empty__title { color: var(--color-text-primary); font-weight: 600; }
.diet-empty__cta {
  appearance:none; font:inherit; min-block-size:44px; padding:0 var(--space-4);
  border:1px solid var(--color-border); border-radius: var(--radius-2, .375rem);
  background: var(--color-surface); color: var(--color-text-primary); cursor:pointer;
}
.diet-empty__cta:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/icon.css">
/* Dieter Icon v0 — tokens-friendly sizing, currentColor inheritance */
.diet-icon { inline-size: 1.25rem; block-size: 1.25rem; display:inline-block; vertical-align:middle; }
.diet-icon--sm { inline-size: 1rem; block-size: 1rem; }
.diet-icon--md { inline-size: 1.25rem; block-size: 1.25rem; }
.diet-icon--lg { inline-size: 1.5rem; block-size: 1.5rem; }
</file>

<file path="dieter/components/navbar.css">
/* Dieter Navbar v0 — top nav */
.diet-navbar {
  display:flex; align-items:center; gap: var(--space-4);
  padding: var(--space-3) var(--space-4);
  background: var(--color-surface);
  border-block-end: 1px solid var(--color-border);
}
.diet-navbar__brand { font-weight:700; }
.diet-navbar__links { display:flex; gap: var(--space-3); flex-wrap: wrap; }
.diet-navbar__link {
  display:inline-flex; align-items:center; min-block-size:44px; padding-inline: var(--space-2);
  color: var(--color-text-secondary); text-decoration:none; border-radius: var(--radius-2, .375rem);
}
.diet-navbar__link:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgba(0,0,0,.05)) 10%); }
.diet-navbar__link[aria-current="page"] { color: var(--color-text-primary); font-weight:600; }
.diet-navbar__link:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/popover.css">
/* Dieter Popover v0 — tokens-only, native details/summary as disclosure */
.diet-popover { position: relative; display: inline-block; }

.diet-popover summary {
  list-style: none;
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  min-height: 44px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  cursor: pointer;
}
.diet-popover summary::-webkit-details-marker { display: none; }
.diet-popover summary:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-popover summary:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-popover summary:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Panel */
.diet-popover__panel {
  position: absolute;
  inset-block-start: calc(100% + var(--space-2));
  inset-inline-start: 0;
  min-inline-size: 16rem;
  max-inline-size: 90vw;
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: var(--shadow-lg, 0 8px 24px rgb(0 0 0 / .18));
  z-index: 1100;
}

/* Open state via [open] */
.diet-popover[open] .diet-popover__panel { display: block; }

/* Basic menu semantics inside panel (optional) */
.diet-popover__list { display: grid; gap: var(--space-1); margin: 0; padding: 0; list-style: none; }
.diet-popover__item a {
  display: block;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  color: var(--color-text-primary);
  text-decoration: none;
}
.diet-popover__item a:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-popover__item a:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-popover__item a:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-popover__panel { border-width: 2px; }
</file>

<file path="dieter/components/segmented.css">
/* Dieter Segmented Control v0 — single-select segments */
.diet-segmented {
  display: inline-flex;
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
}
.diet-segmented button {
  appearance: none;
  border: none;
  background: transparent;
  color: var(--color-text-primary);
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-4);
  cursor: pointer;
}
.diet-segmented button:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-segmented button:focus-visible {
  outline: none;
  box-shadow:
    inset 0 0 0 2px var(--color-bg, #fff),
    inset 0 0 0 calc(2px + var(--focus-ring-width, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-segmented button[aria-checked="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
.diet-segmented[role="tablist"] button[aria-selected="true"] {
  background: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
</file>

<file path="dieter/components/sidebar.css">
/* Dieter Sidebar v0 — vertical nav */
.diet-sidebar {
  display:grid; gap: var(--space-1);
  padding: var(--space-3);
  background: var(--color-surface-2, var(--color-surface));
  border-inline-end: 1px solid var(--color-border);
  inline-size: 16rem;
}
.diet-sidebar__section { margin-block: var(--space-2); }
.diet-sidebar__label { font-size: 0.875rem; color: var(--color-text-tertiary); margin-block-end: var(--space-1); }
.diet-sidebar__link {
  display:flex; align-items:center; gap: var(--space-2);
  min-block-size:44px; padding-inline: var(--space-2);
  border-radius: var(--radius-2, .375rem);
  color: var(--color-text-secondary); text-decoration:none;
}
.diet-sidebar__link:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgba(0,0,0,.05)) 10%); }
.diet-sidebar__link[aria-current="page"] { color: var(--color-text-primary); font-weight:600; }
.diet-sidebar__link:focus-visible {
  outline:none;
  box-shadow:
    0 0 0 var(--focus-ring-offset,2px) var(--color-bg,#fff),
    0 0 0 calc(var(--focus-ring-width,2px) + var(--focus-ring-offset,2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/status.css">
/* Dieter Status v0 — dot/badge */
.diet-status { display:inline-flex; align-items:center; gap: .5ch; font-size: .875rem; }
.diet-status__dot { inline-size: .6rem; block-size: .6rem; border-radius: 50%; background: var(--color-border); }
.diet-status--success .diet-status__dot { background: var(--color-success, #1a7f37); }
.diet-status--warning .diet-status__dot { background: var(--color-warning, #b7791f); }
.diet-status--error   .diet-status__dot { background: var(--color-danger, #d93025); }
.diet-status--info    .diet-status__dot { background: var(--color-primary); }
</file>

<file path="dieter/components/stepper.css">
/* Dieter Stepper v0 — ordered steps */
.diet-stepper { display:flex; gap: var(--space-4); list-style:none; padding:0; margin:0; }
.diet-step {
  display:flex; align-items:center; gap: var(--space-2);
  color: var(--color-text-secondary);
}
.diet-step__circle {
  inline-size: 1.75rem; block-size: 1.75rem; border-radius: 50%;
  display:grid; place-items:center;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  font-size: .875rem;
}
.diet-step[aria-current="step"] { color: var(--color-text-primary); }
.diet-step[aria-current="step"] .diet-step__circle {
  border-color: var(--color-primary); background: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%);
}
</file>

<file path="dieter/components/switch.css">
/* Dieter Switch v0 — tokens-only, native checkbox + role="switch" */
.diet-switch {
  display: inline-grid;
  grid-auto-flow: column;
  align-items: center;
  gap: var(--space-2);
  min-block-size: 44px; /* touch */
}
.diet-switch input[type="checkbox"] {
  appearance: none;
  inline-size: 2.5rem;  /* 40px */
  block-size: 1.5rem;   /* 24px */
  margin: 0;
  border-radius: 9999px;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  position: relative;
  outline: none;
  cursor: pointer;
  transition: background .15s, border-color .15s;
}
.diet-switch input[type="checkbox"]::after {
  content: "";
  position: absolute;
  inset-block-start: 2px;
  inset-inline-start: 2px;
  inline-size: 1.2rem;
  block-size: 1.2rem;
  border-radius: 50%;
  background: var(--color-bg, #fff);
  box-shadow: 0 1px 2px rgb(0 0 0 / 0.2);
  transition: transform .15s;
}
.diet-switch input[type="checkbox"]:checked {
  background: var(--color-primary);
  border-color: var(--color-primary);
}
.diet-switch input[type="checkbox"]:checked::after {
  transform: translateX(1rem);
}
.diet-switch input[type="checkbox"]:hover {
  background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%);
}
.diet-switch input[type="checkbox"]:active::after { transform: translateX(0) scale(0.96); }
.diet-switch input[type="checkbox"]:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}
.diet-switch input[type="checkbox"]:disabled {
  opacity: .55; cursor: not-allowed;
}
.diet-switch__label {
  color: var(--color-text-primary);
  user-select: none;
}

/* High-contrast tweaks */
:root[data-theme="hc"] .diet-switch input[type="checkbox"]::after { box-shadow: none; }
</file>

<file path="dieter/components/toggle.css">
/* Dieter Toggle v0 — tokens-only, aria-pressed pattern */
.diet-toggle {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-inline-size: 2.75rem;
  min-block-size: 2.75rem; /* >= 44px */
  padding: 0 var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  cursor: pointer;
  font: inherit;
}
.diet-toggle:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-toggle:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-toggle:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}
.diet-toggle[aria-pressed="true"] {
  background: var(--color-primary);
  border-color: var(--color-primary);
  color: var(--color-on-primary, #fff);
}
.diet-toggle:disabled { opacity:.55; cursor:not-allowed; }

.diet-toggle--sm  { min-block-size: 2.5rem;  padding: 0 var(--space-2); }
.diet-toggle--lg  { min-block-size: 3rem;    padding: 0 var(--space-4); }
</file>

<file path="dieter/components/tooltip.css">
/* Dieter Tooltip v0 — tokens-only, CSS only (hover + focus-visible) */
.diet-tooltip {
  position: relative;
  display: inline-flex;
  align-items: center;
}

/* Trigger helper (any focusable element may be used) */
.diet-tooltip-trigger {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: 44px;
  padding: 0 var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  text-decoration: none;
}
.diet-tooltip-trigger:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-tooltip-trigger:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-tooltip-trigger:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Tooltip bubble */
.diet-tooltip-bubble {
  position: absolute;
  inset-inline-start: 50%;
  inset-block-end: calc(100% + var(--space-2));
  transform: translateX(-50%);
  max-inline-size: 24rem;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-2, 0.375rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface-elevated, color-mix(in oklab, var(--color-surface), var(--state-hover) 6%));
  color: var(--color-text-primary);
  box-shadow: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .1));
  line-height: var(--lh-body, 1.6);
  font-size: 0.875rem;
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
  transition: opacity 150ms ease;
  z-index: 1000;
}

/* Arrow */
.diet-tooltip-bubble::after {
  content: "";
  position: absolute;
  inset-block-start: 100%;
  inset-inline-start: 50%;
  transform: translateX(-50%);
  inline-size: 8px;
  block-size: 8px;
  background: inherit;
  border-inline-start: 1px solid var(--color-border);
  border-block-start: 1px solid var(--color-border);
  rotate: 45deg;
}

/* Show on hover/focus of the trigger */
.diet-tooltip:has(.diet-tooltip-trigger:hover) .diet-tooltip-bubble,
.diet-tooltip:has(.diet-tooltip-trigger:focus-visible) .diet-tooltip-bubble {
  opacity: 1;
  visibility: visible;
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-tooltip-bubble { border-width: 2px; }
</file>

<file path="dieter/tokens/tokens.css">
:root {
  /* typography (Inter first) */
  --font-ui: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, sans-serif;

  /* base sizes */
  --fs-body: 1rem;        /* 16px default body */
  --fs-ui: 0.9375rem;     /* 15px default UI */
  --lh-body: 1.5;

  /* size scale */
  --fs-10: 0.625rem;      /* 10px (labels only) */
  --fs-11: 0.6875rem;     /* 11px (labels only) */
  --fs-12: 0.75rem;       /* 12px */
  --fs-14: 0.875rem;      /* 14px */
  --fs-15: 0.9375rem;     /* 15px */
  --fs-16: 1rem;          /* 16px */
  --fs-18: 1.125rem;      /* 18px */
  --fs-20: 1.25rem;       /* 20px */
  --fs-24: 1.5rem;        /* 24px */
  --fs-32: 2rem;          /* 32px */
  --fs-fluid-title: clamp(1.5rem, 1.1rem + 1.6vw, 3rem);

  /* line-heights */
  --lh-tight: 1.25;
  --lh-normal: 1.5;
  --lh-loose: 1.75;

  /* spacing (4px grid) */
  --space-1: 0.25rem;   /* 4px */
  --space-2: 0.5rem;    /* 8px */
  --space-3: 0.75rem;   /* 12px */
  --space-4: 1rem;      /* 16px */
  --space-5: 1.25rem;   /* 20px */
  --space-6: 1.5rem;    /* 24px */
  --space-7: 1.75rem;   /* 28px */
  --space-8: 2rem;      /* 32px */
  --space-9: 2.25rem;   /* 36px */
  --space-10: 2.5rem;   /* 40px */

  /* base colors (Apple-like vibe) */
  --color-bg: #ffffff;
  --color-surface: #f6f7f9;
  --color-text: #0b0b0f;
  --color-text-muted: rgba(11,11,15,0.56);
  --color-border: rgba(10,10,12,0.16);
  --color-accent: #0a84ff;   /* primary accent */

  /* role colors (semantic) */
  --role-primary-bg: var(--color-accent);
  --role-primary-text: #ffffff;

  --role-success-bg: #34c759;
  --role-success-text: #0b0b0f;

  --role-warn-bg: #ff9f0a;
  --role-warn-text: #0b0b0f;

  --role-danger-bg: #ff3b30;
  --role-danger-text: #ffffff;

  --role-surface-bg: var(--color-surface);
  --role-surface-text: var(--color-text);
  --role-border: var(--color-border);

  /* state layers (opacity overlays) */
  --state-hover-alpha-on-surface: 0.06;
  --state-active-alpha-on-surface: 0.10;
  --state-hover-alpha-on-primary: 0.12;
  --state-active-alpha-on-primary: 0.18;

  /* accessibility tokens */
  --focus-ring-width: 2px;
  --focus-ring-color: var(--color-accent);
  --focus-ring-offset: 2px;
  --min-touch-target: 2.75rem;        /* 44px */
  --kbd-bg: #111;
  --kbd-text: #fff;

  /* high contrast helpers */
  --hc-focus-ring-color: #000;
  --hc-border: #000;
  --hc-link: #0042cc;

  /* radius */
  --radius-4: 0.5rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: #0e0f13;
    --color-surface: #14161b;
    --color-text: #f5f6f8;
    --color-text-muted: rgba(245,246,248,0.72);
    --color-border: rgba(250,250,255,0.18);

    --state-hover-alpha-on-surface: 0.08;
    --state-active-alpha-on-surface: 0.12;
    --state-hover-alpha-on-primary: 0.10;
    --state-active-alpha-on-primary: 0.16;

    --kbd-bg: #eee;
    --kbd-text: #111;
  }
}

:root[data-theme="hc"] {
  --color-bg: #ffffff;
  --color-surface: #ffffff;
  --color-text: #000000;
  --color-text-muted: #1a1a1a;
  --color-border: #1a1a1a;
  --color-accent: #0042cc;

  --role-primary-bg: var(--color-accent);
  --role-primary-text: #ffffff;
  --role-success-bg: #006e2a;
  --role-success-text: #ffffff;
  --role-warn-bg: #a65e00;
  --role-warn-text: #ffffff;
  --role-danger-bg: #8c0000;
  --role-danger-text: #ffffff;

  --state-hover-alpha-on-surface: 0.10;
  --state-active-alpha-on-surface: 0.16;
  --state-hover-alpha-on-primary: 0.14;
  --state-active-alpha-on-primary: 0.22;

  --focus-ring-color: var(--hc-focus-ring-color);
  --role-border: var(--hc-border);
}

/* Typography utilities */
.text-10 { font: 500 var(--fs-10)/var(--lh-tight) var(--font-ui); letter-spacing: 0.02em; }
.text-11 { font: 500 var(--fs-11)/var(--lh-tight) var(--font-ui); letter-spacing: 0.02em; }
.text-12 { font: 500 var(--fs-12)/var(--lh-tight) var(--font-ui); }
.text-14 { font: 400 var(--fs-14)/var(--lh-normal) var(--font-ui); }
.text-15 { font: 400 var(--fs-15)/var(--lh-normal) var(--font-ui); }
.text-16 { font: 400 var(--fs-16)/var(--lh-normal) var(--font-ui); }
.text-18 { font: 500 var(--fs-18)/var(--lh-normal) var(--font-ui); }
.text-20 { font: 600 var(--fs-20)/var(--lh-normal) var(--font-ui); }
.text-24 { font: 600 var(--fs-24)/var(--lh-tight) var(--font-ui); }
.text-32 { font: 700 var(--fs-32)/var(--lh-tight) var(--font-ui); }
.text-title-fluid { font: 700 var(--fs-fluid-title)/1.15 var(--font-ui); }

/* Spacing utilities */
.m-1{margin:var(--space-1)}.m-2{margin:var(--space-2)}.m-3{margin:var(--space-3)}.m-4{margin:var(--space-4)}.m-5{margin:var(--space-5)}.m-6{margin:var(--space-6)}.m-7{margin:var(--space-7)}.m-8{margin:var(--space-8)}.m-9{margin:var(--space-9)}.m-10{margin:var(--space-10)}
.p-1{padding:var(--space-1)}.p-2{padding:var(--space-2)}.p-3{padding:var(--space-3)}.p-4{padding:var(--space-4)}.p-5{padding:var(--space-5)}.p-6{padding:var(--space-6)}.p-7{padding:var(--space-7)}.p-8{padding:var(--space-8)}.p-9{padding:var(--space-9)}.p-10{padding:var(--space-10)}
.mx-1{margin-left:var(--space-1);margin-right:var(--space-1)}.mx-2{margin-left:var(--space-2);margin-right:var(--space-2)}.mx-3{margin-left:var(--space-3);margin-right:var(--space-3)}.mx-4{margin-left:var(--space-4);margin-right:var(--space-4)}.mx-5{margin-left:var(--space-5);margin-right:var(--space-5)}.mx-6{margin-left:var(--space-6);margin-right:var(--space-6)}.mx-7{margin-left:var(--space-7);margin-right:var(--space-7)}.mx-8{margin-left:var(--space-8);margin-right:var(--space-8)}.mx-9{margin-left:var(--space-9);margin-right:var(--space-9)}.mx-10{margin-left:var(--space-10);margin-right:var(--space-10)}
.my-1{margin-top:var(--space-1);margin-bottom:var(--space-1)}.my-2{margin-top:var(--space-2);margin-bottom:var(--space-2)}.my-3{margin-top:var(--space-3);margin-bottom:var(--space-3)}.my-4{margin-top:var(--space-4);margin-bottom:var(--space-4)}.my-5{margin-top:var(--space-5);margin-bottom:var(--space-5)}.my-6{margin-top:var(--space-6);margin-bottom:var(--space-6)}.my-7{margin-top:var(--space-7);margin-bottom:var(--space-7)}.my-8{margin-top:var(--space-8);margin-bottom:var(--space-8)}.my-9{margin-top:var(--space-9);margin-bottom:var(--space-9)}.my-10{margin-top:var(--space-10);margin-bottom:var(--space-10)}
.px-1{padding-left:var(--space-1);padding-right:var(--space-1)}.px-2{padding-left:var(--space-2);padding-right:var(--space-2)}.px-3{padding-left:var(--space-3);padding-right:var(--space-3)}.px-4{padding-left:var(--space-4);padding-right:var(--space-4)}.px-5{padding-left:var(--space-5);padding-right:var(--space-5)}.px-6{padding-left:var(--space-6);padding-right:var(--space-6)}.px-7{padding-left:var(--space-7);padding-right:var(--space-7)}.px-8{padding-left:var(--space-8);padding-right:var(--space-8)}.px-9{padding-left:var(--space-9);padding-right:var(--space-9)}.px-10{padding-left:var(--space-10);padding-right:var(--space-10)}
.py-1{padding-top:var(--space-1);padding-bottom:var(--space-1)}.py-2{padding-top:var(--space-2);padding-bottom:var(--space-2)}.py-3{padding-top:var(--space-3);padding-bottom:var(--space-3)}.py-4{padding-top:var(--space-4);padding-bottom:var(--space-4)}.py-5{padding-top:var(--space-5);padding-bottom:var(--space-5)}.py-6{padding-top:var(--space-6);padding-bottom:var(--space-6)}.py-7{padding-top:var(--space-7);padding-bottom:var(--space-7)}.py-8{padding-top:var(--space-8);padding-bottom:var(--space-8)}.py-9{padding-top:var(--space-9);padding-bottom:var(--space-9)}.py-10{padding-top:var(--space-10);padding-bottom:var(--space-10)}

.muted { color: var(--color-text-muted); }

/* Color role utilities */
.bg-surface { background: var(--role-surface-bg); color: var(--role-surface-text); }
.bg-primary { background: var(--role-primary-bg); color: var(--role-primary-text); }
.bg-success { background: var(--role-success-bg); color: var(--role-success-text); }
.bg-warn { background: var(--role-warn-bg); color: var(--role-warn-text); }
.bg-danger { background: var(--role-danger-bg); color: var(--role-danger-text); }
.border-default { border: 1px solid var(--role-border); }

/* State layer helpers */
.state-surface:hover { background: linear-gradient(0deg, rgba(0,0,0,var(--state-hover-alpha-on-surface)), rgba(0,0,0,var(--state-hover-alpha-on-surface))), var(--role-surface-bg); }
.state-surface:active { background: linear-gradient(0deg, rgba(0,0,0,var(--state-active-alpha-on-surface)), rgba(0,0,0,var(--state-active-alpha-on-surface))), var(--role-surface-bg); }
.state-primary:hover { background: linear-gradient(0deg, rgba(255,255,255,var(--state-hover-alpha-on-primary)), rgba(255,255,255,var(--state-hover-alpha-on-primary))), var(--role-primary-bg); }
.state-primary:active { background: linear-gradient(0deg, rgba(255,255,255,var(--state-active-alpha-on-primary)), rgba(255,255,255,var(--state-active-alpha-on-primary))), var(--role-primary-bg); }

/* Demo components */
.diet-surface { background: var(--color-surface); border: 1px solid var(--color-border); border-radius: var(--radius-4); padding: var(--space-6); }
.diet-btn {
  font: 500 var(--fs-ui)/1 var(--font-ui);
  color: #fff;
  background: var(--color-accent);
  border: 0;
  border-radius: var(--radius-4);
  padding: 0.625rem 1rem;
  min-height: var(--min-touch-target);
  cursor: pointer;
}
.diet-btn:focus-visible { outline: var(--focus-ring-width) solid var(--focus-ring-color); outline-offset: var(--focus-ring-offset); }
.diet-btn:hover { background: linear-gradient(0deg, rgba(255,255,255,var(--state-hover-alpha-on-primary)), rgba(255,255,255,var(--state-hover-alpha-on-primary))), var(--color-accent); }
.diet-btn:active { background: linear-gradient(0deg, rgba(255,255,255,var(--state-active-alpha-on-primary)), rgba(255,255,255,var(--state-active-alpha-on-primary))), var(--color-accent); }

.diet-link { color: var(--color-accent); text-decoration: none; }
.diet-link:hover { text-decoration: underline; }
.diet-link:focus-visible { outline: var(--focus-ring-width) solid var(--focus-ring-color); outline-offset: var(--focus-ring-offset); }

.kbd {
  display:inline-block; padding: 0.1rem 0.35rem; border-radius: 0.35rem;
  background: var(--kbd-bg); color: var(--kbd-text);
  font: 600 var(--fs-12)/1 var(--font-ui);
}

/* Visually hidden (screen-reader only) */
.sr-only {
  position:absolute !important; width:1px !important; height:1px !important;
  padding:0 !important; margin:-1px !important; overflow:hidden !important;
  clip:rect(0,0,0,0) !important; white-space:nowrap !important; border:0 !important;
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  * { animation-duration: 0.001ms !important; animation-iteration-count: 1 !important; transition-duration: 0.001ms !important; scroll-behavior: auto !important; }
}
</file>

<file path="packages/embed-core/index.ts">
export function mountShadow(host, html, cssText){const root=host.shadowRoot||host.attachShadow({mode:'open'});const st=document.createElement('style');st.textContent=cssText;root.append(st);const wrap=document.createElement('div');wrap.innerHTML=html;root.append(wrap);return root;}
export function beacon(type, meta={}){try{navigator.sendBeacon?.('/api/ingest', JSON.stringify({type,meta,ts:Date.now()}));}catch{}}
</file>

<file path="packages/embed-core/package.json">
{ "name": "@ck/embed-core", "version": "0.0.0", "type": "module" }
</file>

<file path="packages/widgets/contact-form.ts">
import { mountShadow, beacon } from '@ck/embed-core';

interface WidgetConfig {
  title?: string;
  successText?: string;
  theme?: 'light' | 'dark';
  fields?: {
    name?: boolean;
    email?: boolean;
    message?: boolean;
  };
}

class ContactFormWidget {
  private host: HTMLElement;
  private config: WidgetConfig;
  private root: ShadowRoot | null = null;

  constructor(host: HTMLElement, config: WidgetConfig = {}) {
    this.host = host;
    this.config = this.validateConfig(config);
    this.mount();
  }

  private validateConfig(config: WidgetConfig): WidgetConfig {
    return {
      title: config.title || 'Contact us',
      successText: config.successText || 'Thanks! We received your message.',
      theme: config.theme || 'light',
      fields: {
        name: config.fields?.name !== false,
        email: true, // Always required
        message: config.fields?.message !== false,
        ...config.fields
      }
    };
  }

  private getLabels() {
    return {
      name: this.config.fields?.name ? 'Name' : '',
      email: 'Email',
      message: this.config.fields?.message ? 'Message' : '',
      submit: 'Send',
      success: this.config.successText || 'Thanks! We received your message.'
    };
  }

  private getCSS() {
    const isDark = this.config.theme === 'dark';
    return `
      :host{all:initial}
      *{font-family:ui-sans-serif,system-ui,-apple-system;box-sizing:border-box}
      .ck{display:grid;gap:10px;padding:16px;border-radius:10px;border:1px solid ${isDark ? '#444' : '#ddd'};background:${isDark ? '#1a1a1a' : '#fff'};color:${isDark ? '#fff' : '#000'}}
      input,textarea{padding:10px 12px;border:1px solid ${isDark ? '#555' : '#ccc'};border-radius:8px;background:${isDark ? '#2a2a2a' : '#fff'};color:${isDark ? '#fff' : '#000'}}
      button{padding:10px 14px;border-radius:8px;border:0;background:#2F80ED;color:#fff;cursor:pointer}
      label{display:block;margin-bottom:4px;font-weight:500}
    `;
  }

  private getHTML() {
    const L = this.getLabels();
    const title = this.config.title ? `<h3 style="margin:0 0 16px 0;font-size:1.2rem">${this.config.title}</h3>` : '';
    
    const fields = [];
    if (L.name) fields.push(`<label>${L.name}<input name="name" required/></label>`);
    if (L.email) fields.push(`<label>${L.email}<input type="email" name="email" required/></label>`);
    if (L.message) fields.push(`<label>${L.message}<textarea name="message" rows="4" required></textarea></label>`);
    
    return `
      <form class="ck" aria-label="Contact form">
        ${title}
        ${fields.join('')}
        <button type="submit">${L.submit}</button>
        <p id="ck-success" style="display:none">${L.success}</p>
      </form>
    `;
  }

  private mount(reuse = false) {
    if (reuse && this.root) {
      // Update existing shadow root
      const newHTML = this.getHTML();
      const newCSS = this.getCSS();
      
      // Update styles
      const styleEl = this.root.querySelector('style');
      if (styleEl) styleEl.textContent = newCSS;
      
      // Update content
      const wrap = this.root.querySelector('div');
      if (wrap) wrap.innerHTML = newHTML;
      
      // Re-attach event listeners
      this.attachEventListeners();
    } else {
      // Create new shadow root
      this.root = mountShadow(this.host, this.getHTML(), this.getCSS());
      this.attachEventListeners();
    }
  }

  private attachEventListeners() {
    if (!this.root) return;
    
    const form = this.root.querySelector('form');
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const data = Object.fromEntries(new FormData(form as HTMLFormElement).entries());
      
      try {
        await fetch('/api/form/DEMO_PUBLIC_ID', {
          method: 'POST',
          headers: { 'content-type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const successEl = this.root?.getElementById('ck-success');
        if (successEl) successEl.style.display = 'block';
        
        beacon('submit', { ok: true });
      } catch (error) {
        console.error('Form submission failed:', error);
        beacon('submit', { ok: false, error: error.message });
      }
    });
    
    beacon('impression', {});
  }

  update(newConfig: WidgetConfig) {
    this.config = this.validateConfig({ ...this.config, ...newConfig });
    this.mount(true);
  }
}

export function renderContactForm(host: HTMLElement, config: WidgetConfig = {}) {
  return new ContactFormWidget(host, config);
}
</file>

<file path="packages/widgets/package.json">
{ "name": "@ck/widgets", "version": "0.0.0", "type": "module" }
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="scripts/e2e-prod-smoke.sh">
#!/usr/bin/env bash
set -euo pipefail

# Config: defaults to prod URLs; allow override via env.
SITE_URL="${SITE_URL:-https://c-keen-site.vercel.app}"
EMBED_URL="${EMBED_URL:-https://c-keen-embed.vercel.app}"

command -v jq >/dev/null 2>&1 || { echo "jq is required"; exit 1; }

echo "1) Create anonymous widget on SITE..."
CREATE_RES="$(curl -sS -X POST "$SITE_URL/api/widgets/anonymous" \
  -H 'content-type: application/json' \
  --data '{"email":"smoke@clickeen.test","type":"contact-form","config":{}}')"

echo "Create response: $CREATE_RES"

PUBLIC_KEY="$(echo "$CREATE_RES" | jq -r '.publicKey // empty')"
PUBLIC_ID="$(echo "$CREATE_RES" | jq -r '.publicId // empty')"

if [[ -z "$PUBLIC_KEY" || -z "$PUBLIC_ID" ]]; then
  echo "✗ Missing keys from anon create"; exit 1
fi
echo "✓ Keys: publicKey=$PUBLIC_KEY  publicId=$PUBLIC_ID"

echo
echo "2) Check prod embed headers for $PUBLIC_ID..."
curl -sS -I "$EMBED_URL/api/e/$PUBLIC_ID?v=1" \
| tr -d '\r' \
| grep -Ei '^(cache-control|x-cache-ttl|x-cache-fresh|x-template-version):' \
|| { echo "✗ Missing expected headers"; exit 1; }
echo "✓ Headers OK"

echo
echo "3) Submit a form via the embed endpoint (expects { ok: true })..."
SUBMIT_RES="$(curl -sS -X POST "$EMBED_URL/api/form/$PUBLIC_ID" \
  -H 'content-type: application/json' \
  -d '{"test":"data"}')"
echo "Submit response: $SUBMIT_RES"

echo "$SUBMIT_RES" | jq -e '.ok == true' >/dev/null \
  && echo "✓ E2E smoke passed" \
  || { echo "✗ Submission failed"; exit 1; }

# End of script
</file>

<file path="services/embed/app/api/cfg/[publicId]/route.ts">
export const runtime = 'edge';
export async function GET(_: Request, { params }: { params: { publicId: string }}) {
  const cfg = { publicId: params.publicId, theme: 'light', accent: '#2F80ED' };
  return new Response(JSON.stringify(cfg), { headers: {
    'content-type':'application/json; charset=utf-8',
    'cache-control':'public, max-age=60, stale-while-revalidate=300',
    'etag': '"demo-'+params.publicId+'"'
  }});
}
</file>

<file path="services/embed/app/api/e/[publicId]/route.ts">
export const runtime = 'edge';
export async function GET(request: Request, { params }: { params: { publicId: string }}) {
  const url = new URL(request.url);
  const isPreview = url.searchParams.has('preview') || url.searchParams.has('cfg');
  const cacheControl = isPreview
    ? 'no-store'
    : 'public, max-age=60, stale-while-revalidate=300';
  const templateVersion = url.searchParams.get('v') || '1';
  
  const js = `
(()=> {
  var id = 'ckeen-${params.publicId}';
  var host = document.getElementById(id) || document.querySelector('[data-ckeen="${params.publicId}"]');
  if (!host) { host = document.createElement('div'); host.id = id; (document.currentScript?.parentElement || document.body).appendChild(host); }
  // Compute the origin of this script (the embed service), then import from that origin
  var embedOrigin = (function(){ try { return new URL(document.currentScript.src).origin } catch { return '' } })();
  var s = document.createElement('script');
  s.type = 'module';
  s.textContent = \`
    const ORIGIN = \${embedOrigin};
    import { renderContactForm } from \${ORIGIN ? \`\${ORIGIN}/embed-bundle.js\` : '/embed-bundle.js'};
    
    // Initialize widget with config
    const initialConfig = ${url.searchParams.get('cfg') ? `JSON.parse(atob('${url.searchParams.get('cfg')}'))` : '{}'};
    const widget = renderContactForm(host, initialConfig);
    
    ${isPreview ? `
    // Preview mode: add postMessage listener for live updates
    window.addEventListener('message', (ev) => {
      const allowed = ['http://localhost:3000', 'https://c-keen-site.vercel.app'];
      if (!allowed.includes(ev.origin)) return;
      
      const msg = ev.data;
      if (!msg || msg.type !== 'ckeen:preview:update') return;
      
      try {
        // Validate and update config
        const next = { ...initialConfig, ...msg.config };
        if (widget && typeof widget.update === 'function') {
          widget.update(next);
        }
      } catch (e) {
        console.warn('Preview update failed:', e);
      }
    });
    
    // Signal ready to parent
    window.parent?.postMessage({ type: 'ckeen:preview:ready' }, '*');
    ` : ''}
  \`;
  document.currentScript?.after(s);
})();`;
  
  return new Response(js, {
    headers: {
      'content-type': 'application/javascript; charset=utf-8',
      'Cache-Control': cacheControl,
      'X-Cache-TTL': '60',
      'X-Cache-Fresh': isPreview ? 'false' : 'true',
      'X-Template-Version': templateVersion
    }
  });
}
</file>

<file path="services/embed/app/api/form/[publicId]/route.ts">
export const runtime = 'edge';

export async function POST(req: Request, { params }: { params: { publicId: string }}) {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;
  const key = process.env.SUPABASE_SERVICE_ROLE_KEY!;
  if (!url || !key) {
    return new Response(JSON.stringify({ ok:false, error:'missing_supabase_env' }), { status: 500, headers: { 'content-type':'application/json' }});
  }

  const headers = { apikey: key, Authorization: `Bearer ${key}`, 'Content-Type':'application/json' };
  const ip = (req.headers.get('x-forwarded-for') || '').split(',')[0]?.trim();
  const ua = req.headers.get('user-agent') || '';
  const body = await req.json().catch(()=> ({}));

  // 1) Look up published widget by publicId
  const wiRes = await fetch(`${url}/rest/v1/widget_instances?public_id=eq.${params.publicId}&select=id,status&limit=1`, { headers });
  const wiJson = await wiRes.json().catch(()=>[]);
  const wi = wiJson?.[0];
  if (!wi || wi.status !== 'published') {
    return new Response(JSON.stringify({ ok:false, error:'widget_not_published' }), { status: 400, headers: { 'content-type':'application/json' }});
  }

  // 2) Insert submission (widget_instance_id only for V0)
  const insertRes = await fetch(`${url}/rest/v1/form_submissions`, {
    method: 'POST',
    headers,
    body: JSON.stringify({ widget_instance_id: wi.id, payload: body, ip, ua })
  });

  if (!insertRes.ok) {
    const t = await insertRes.text();
    return new Response(JSON.stringify({ ok:false, error:'db_insert_failed', detail: t }), { status: 500, headers: { 'content-type':'application/json' }});
  }

  return new Response(JSON.stringify({ ok:true }), { headers: { 'content-type':'application/json' }});
}
</file>

<file path="services/embed/app/api/ingest/route.ts">
export const runtime = 'edge';
export async function POST(req: Request) {
  const evt = await req.json().catch(()=> ({}));
  return new Response(JSON.stringify({ ok: true }), { headers: { 'content-type': 'application/json' } });
}
</file>

<file path="services/embed/public/embed-bundle.js">
export { renderContactForm } from '../../packages/widgets/contact-form';
</file>

<file path="services/embed/scripts/atlas-smoke.mjs">
// Minimal Atlas header smoke test
// - Verifies production headers and preview no-store behavior

const PROD_URL = 'https://c-keen-embed.vercel.app/api/e/DEMO?v=1';
const PREVIEW_URL = 'https://c-keen-embed.vercel.app/api/e/DEMO?v=1&cfg=eyJ0aXRsZSI6IkNPTkZJRyJ9';

async function fetchHeaders(url) {
  const res = await fetch(url, { method: 'GET' });
  return { status: res.status, headers: res.headers };
}

function isIntegerString(value) {
  if (typeof value !== 'string' || value.trim() === '') return false;
  const num = Number(value);
  return Number.isInteger(num);
}

async function run() {
  const failures = [];

  // Production checks
  try {
    const { status, headers } = await fetchHeaders(PROD_URL);
    if (status !== 200) failures.push(`prod status ${status}`);

    const ct = headers.get('content-type') || '';
    if (!ct.includes('application/javascript')) failures.push('prod content-type not application/javascript');

    const cc = headers.get('cache-control') || '';
    if (!cc.includes('public')) failures.push('prod cache-control missing public');

    const ttl = headers.get('x-cache-ttl');
    if (!ttl || !isIntegerString(ttl)) failures.push('prod x-cache-ttl missing or not integer');

    const fresh = headers.get('x-cache-fresh');
    if (fresh !== 'true') failures.push('prod x-cache-fresh not true');

    const tmpl = headers.get('x-template-version');
    if (!tmpl) failures.push('prod x-template-version missing');
  } catch (e) {
    failures.push(`prod fetch error: ${e.message}`);
  }

  // Preview check
  try {
    const { status, headers } = await fetchHeaders(PREVIEW_URL);
    if (status !== 200) failures.push(`preview status ${status}`);
    const cc = headers.get('cache-control');
    if (cc !== 'no-store') failures.push('preview cache-control not no-store');
  } catch (e) {
    failures.push(`preview fetch error: ${e.message}`);
  }

  if (failures.length > 0) {
    console.log(`SMOKE FAIL: ${failures.join('; ')}`);
    process.exit(1);
  } else {
    console.log('SMOKE PASS: Atlas headers OK');
  }
}

run();
</file>

<file path="services/embed/scripts/e2e-real-widget.mjs">
// E2E smoke test: site → atlas → embed
// node:18, ESM only

const SITE_URL = 'https://c-keen-site.vercel.app';
const EMBED_URL = 'https://c-keen-embed.vercel.app';

async function postJson(url, body) {
  const res = await fetch(url, {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify(body),
  });
  let data;
  try { data = await res.json(); } catch { data = null; }
  return { res, data };
}

async function getWithBody(url) {
  const res = await fetch(url, { method: 'GET' });
  const text = await res.text();
  return { res, text };
}

function fail(reason) {
  console.log(`[E2E] FAIL ${reason}`);
  process.exit(1);
}

function normalizePublicKey(obj) {
  if (!obj || typeof obj !== 'object') return undefined;
  return obj.publicKey || obj.public_key || obj.public_id || obj.publicId;
}

function isPositiveIntegerString(value) {
  if (typeof value !== 'string' || value.trim() === '') return false;
  const n = Number(value);
  return Number.isInteger(n) && n > 0;
}

async function run() {
  try {
    // 1) Create real widget on site anonymous API
    const createPayload = {
      email: 'test+cicd@clickeen.com',
      type: 'contact-form',
      config: {
        title: 'E2E',
        successText: 'OK',
        theme: 'light',
        fields: { name: true, email: true, message: true },
      },
    };
    const { res: createRes, data: createData } = await postJson(
      `${SITE_URL}/api/widgets/anonymous`,
      createPayload
    );
    if (createRes.status !== 200) fail(`create status ${createRes.status}`);
    const publicKey = normalizePublicKey(createData);
    if (!publicKey || typeof publicKey !== 'string') fail('missing publicKey from create response');
    console.log(`[E2E] created publicKey=${publicKey}`);

    // 2) Hit embed endpoint for that key
    const { res: embedRes, text: js } = await getWithBody(
      `${EMBED_URL}/api/e/${encodeURIComponent(publicKey)}?v=1`
    );
    if (embedRes.status !== 200) fail(`embed status ${embedRes.status}`);

    const headers = embedRes.headers;
    const cacheControl = headers.get('cache-control') || '';
    const ttl = headers.get('x-cache-ttl');
    const fresh = headers.get('x-cache-fresh');
    const tmplVer = headers.get('x-template-version');
    const contentType = headers.get('content-type') || '';

    if (!contentType.includes('application/javascript')) fail('content-type not application/javascript');
    if (!cacheControl.includes('public')) fail('cache-control missing public');
    if (!isPositiveIntegerString(ttl)) fail('x-cache-ttl missing or not positive integer');
    if (!(fresh === 'true' || fresh === 'false')) fail('x-cache-fresh not true/false');
    if (!tmplVer) fail('x-template-version missing');
    if (!(typeof js === 'string' && js.length > 200 && js.includes('document'))) fail('embed js payload too small/invalid');

    // 3) Log concise summary
    console.log(
      `[E2E] embed status=${embedRes.status} ttl=${ttl} fresh=${fresh} tmplVer=${tmplVer} jsBytes=${js.length}`
    );
    console.log('[E2E] PASS');
  } catch (e) {
    fail(e && e.message ? e.message : String(e));
  }
}

run();
</file>

<file path="services/embed/scripts/smoke-form.mjs">
// End-to-end form submission smoke test
// 1) Create anonymous widget -> expect { publicKey, publicId }
// 2) Submit to embed form endpoint using publicId -> expect ok:true

const SITE_ANON_URL = 'https://c-keen-site.vercel.app/api/widgets/anonymous';
const EMBED_FORM_URL = (publicId) => `https://c-keen-embed.vercel.app/api/form/${publicId}`;

async function createAnonWidget() {
  const res = await fetch(SITE_ANON_URL, {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify({ email: 'qa+smoke@ckeen.dev', type: 'contact-form', config: { title: 'Smoke' } })
  });
  const json = await res.json().catch(() => ({}));
  if (!res.ok) throw new Error(`anon create failed: ${res.status} ${json.error || ''}`);
  const { publicKey, publicId } = json || {};
  if (!publicKey || !publicId) throw new Error('anon create missing publicKey/publicId');
  return { publicKey, publicId };
}

async function submitForm(publicId) {
  const res = await fetch(EMBED_FORM_URL(publicId), {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify({ name: 'E2E', email: 'qa+contact@ckeen.dev', message: 'smoke' })
  });
  const json = await res.json().catch(() => ({}));
  if (!res.ok || !json.ok) throw new Error(`form submit failed: ${res.status} ${JSON.stringify(json)}`);
  return json;
}

async function run() {
  try {
    const { publicId } = await createAnonWidget();
    const res = await submitForm(publicId);
    console.log('SMOKE PASS: form submission ok', res);
  } catch (e) {
    console.error('SMOKE FAIL:', e.message);
    process.exit(1);
  }
}

run();
</file>

<file path="services/embed/.gitignore">
.vercel
</file>

<file path="services/embed/.redeploy.txt">
2025-09-03T21:32:48Z
</file>

<file path="services/embed/next.config.mjs">
export default { experimental: { serverActions: { allowedOrigins: ['*'] } } };
</file>

<file path="services/embed/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path=".prettierrc.json">
{ "printWidth": 100, "singleQuote": true, "trailingComma": "all" }
</file>

<file path="components.json">
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "iconLibrary": "lucide",
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  }
}
</file>

<file path="eslint.config.mjs">
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
  {
    ignores: [
      "node_modules/**",
      ".next/**",
      "out/**",
      "build/**",
      "next-env.d.ts",
    ],
  },
];

export default eslintConfig;
</file>

<file path="next.config.ts">
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
</file>

<file path="postcss.config.mjs">
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
</file>

<file path="tsconfig.base.json">
{
  "compilerOptions": {
    "target": "ES2022",
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "skipLibCheck": true,
    "strict": true,
    "jsx": "react-jsx",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true
  }
}
</file>

<file path=".github/workflows/dieter-check.yml">
name: Dieter Guardrails
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"
  push:
    branches: [ "**" ]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"

jobs:
  guardrails:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Verify Corepack availability
        run: corepack --version || npm install -g corepack

      - name: Use packageManager version
        run: corepack install

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Verify toolchain
        run: |
          echo "Node: $(node -v)"
          echo "pnpm: $(pnpm -v)"
          test -f pnpm-lock.yaml

      - name: Install (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build Dieter and copy assets
        run: |
          pnpm --filter @ck/dieter build
          pnpm run build:assets

      - name: Fail on legacy Dieter imports
        run: |
          set -e
          # Detect ESM-style imports from legacy path
          if grep -R "from \(['\"]apps/app/dieter" --include="*.ts" --include="*.tsx" .; then
            echo "Legacy Dieter import detected (ESM-style)."; exit 1;
          fi
          # Detect CommonJS requires from legacy path
          if grep -R "require(.*['\"]apps/app/dieter" --include="*.ts" --include="*.tsx" .; then
            echo "Legacy Dieter import detected (CJS-style)."; exit 1;
          fi
          echo "✓ No legacy Dieter imports found."

      - name: Verify Dieter assets directory exists
        run: |
          set -e
          if [ -d apps/app/public/dieter ]; then
            echo "✓ Dieter assets directory exists"
          else
            echo "✗ Missing Dieter assets directory"
            ls -la apps/app/public || true
            exit 1
          fi

      - name: Verify Dieter asset reachable
        run: |
          set -e
          if [ -f apps/app/public/dieter/tokens.css ]; then
            echo "✓ Dieter assets accessible"
          else
            echo "✗ Dieter assets not found at apps/app/public/dieter/tokens.css"
            ls -la apps/app/public/dieter || true
            exit 1
          fi
</file>

<file path=".github/workflows/studio-shell-smoke.yml">
name: StudioShell Smoke (CJS stability)

on:
  push:
    paths:
      - "packages/studio-shell/**"
      - "apps/app/**"
      - "tools/verify-studio-shell.cjs"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - ".github/workflows/studio-shell-smoke.yml"
  pull_request:
    paths:
      - "packages/studio-shell/**"
      - "apps/app/**"
      - "tools/verify-studio-shell.cjs"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
      - ".github/workflows/studio-shell-smoke.yml"

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Use packageManager version
        run: corepack prepare --activate

      - name: Show tool versions
        run: node -v && pnpm -v

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Build Dieter
        run: pnpm --filter @ck/dieter build || echo "No build script, continuing"

      - name: Verify Dieter assets present in app
        run: test -d apps/app/public/dieter || echo "Dieter assets not required"

      - name: Build StudioShell (CJS)
        run: pnpm --filter @ck/studio-shell build

      - name: Verify build output exists
        run: test -f packages/studio-shell/dist/index.js || echo "[FAIL] Build did not produce dist/index.js"

      - name: Smoke verify from consumer context
        run: |
          cd apps/app
          node -e "const p=require.resolve('@ck/studio-shell'); console.log('RESOLVED:', p); if(!p.includes('dist/index.js')) console.error('[FAIL] Resolution missing dist/index.js')"
          node -e "const m=require('@ck/studio-shell'); console.log('Exports:', Object.keys(m)); if(!m.default || !m.StudioShell) console.error('[FAIL] Missing expected exports')"

      - name: Build App (Next.js)
        run: pnpm --filter @ck/app run build
</file>

<file path=".github/pull_request_template.md">
# PR Checklist — CTO Execution Gates

Before requesting review, confirm all are satisfied (see [docs/cto-execution-checklist-frontend.md](../docs/cto-execution-checklist-frontend.md)):

- [ ] Tokens-only: No raw hex/px; all vars via Dieter tokens.  
- [ ] Inter from Google Fonts only; no rsms.me, Roboto, Ubuntu.  
- [ ] Accessibility: focus rings, 44px touch, for/id + aria-describedby.  
- [ ] Theme safety: light/dark/data-theme="hc" render correctly; no flash.  
- [ ] Rem-based sizing; container queries preferred.  
- [ ] No CSS sprawl; classes start with diet- or text-.  
- [ ] Performance: minimal CSS/JS, no layout thrash.  
- [ ] File hygiene: only files in scope; no drive-by refactors.  
- [ ] CI green: Stylelint + font-source checks pass.  
- [ ] Self-test done: Inter loads from Google Fonts, tokens applied, no console errors.
</file>

<file path=".husky/pre-commit">
#!/usr/bin/env bash
set -euo pipefail

# Fail-soft docs generation guard

if [[ "${SKIP_DOCS_GENERATION:-}" == "1" ]]; then exit 0; fi
DOC_DIR="documentation"
GEN_SCRIPT="${DOCS_GEN_SCRIPT:-scripts/generate-docs.mjs}"
if [ -d "$DOC_DIR" ]; then
  if git diff --cached --name-only | grep -Eq "^(documentation/|scripts/generate-docs|tools/docs)"; then
    if [ -f "$GEN_SCRIPT" ]; then
      echo "[pre-commit] generating docs…"
      pnpm -s docs:generate || { echo "[pre-commit] WARN: docs generation failed — commit allowed"; exit 0; }
    else
      echo "[pre-commit] INFO: no generator script found, skipping"
    fi
  fi
fi
exit 0
</file>

<file path="apps/app/app/globals.css">
/* Basic global styles */
.btn {
  display: inline-block;
  padding: 6px 10px;
  border: 1px solid #ddd;
  border-radius: 8px;
  background: #fff;
  text-decoration: none;
  color: inherit;
  font-size: 14px;
}

.btn:hover {
  background: #f5f5f5;
}

/* Icon sizing + color (fallbacks if tokens missing) */
.studio-icon {
  display: inline-block;
  color: var(--studio-fg-muted, currentColor);
  inline-size: var(--studio-icon-size, 16px);
  block-size: var(--studio-icon-size, 16px);
}
.studio-icon[data-size="sm"] { --studio-icon-size: var(--studio-size-sm, 14px); }
.studio-icon[data-size="md"] { --studio-icon-size: var(--studio-size-md, 16px); }
.studio-icon[data-size="lg"] { --studio-icon-size: var(--studio-size-lg, 20px); }

.studio-icon--loading,
.studio-icon--missing {
  inline-size: var(--studio-icon-size, 16px);
  block-size: var(--studio-icon-size, 16px);
  line-height: var(--studio-icon-size, 16px);
  text-align: center;
}
</file>

<file path="apps/app/public/dieter/README.md">
# Generated assets

This folder is populated by the Dieter copy step. Do not commit files here.
</file>

<file path="apps/app/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "target": "es2015",
    "downlevelIteration": true,
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "./*"
      ]
    },
    "plugins": [
      {
        "name": "next"
      }
    ],
    "strictNullChecks": true
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="apps/site/package.json">
{
  "name": "@ck/site",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3000",
    "build": "next build",
    "start": "next start -p 3000"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.56.1",
    "nanoid": "^5.1.5",
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "^24.3.0",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="dieter/components/accordion.css">
/* Dieter Accordion v0 — tokens-only, native details/summary */
.diet-accordion { display: grid; gap: var(--space-2); }

.diet-accordion details {
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, 0.5rem);
  background: var(--color-surface);
  color: var(--color-text-primary);
  padding: 0;
}

.diet-accordion summary {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
  list-style: none;
  min-height: 44px;
  padding: var(--space-3) var(--space-4);
  position: relative;
}
.diet-accordion summary::-webkit-details-marker { display: none; }

.diet-accordion__chev {
  inline-size: 1em;
  block-size: 1em;
  transform: rotate(0deg);
  transition: transform 150ms ease;
  border: 2px solid currentColor;
  border-left: 0; border-top: 0;
  rotate: 45deg;
  inline-size: 0.6rem; block-size: 0.6rem;
}
details[open] .diet-accordion__chev { transform: rotate(90deg); }

.diet-accordion summary:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-accordion summary:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-accordion summary:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

.diet-accordion__panel {
  padding: var(--space-3) var(--space-4) var(--space-4);
  border-top: 1px solid var(--color-border);
  line-height: var(--lh-body, 1.6);
}

/* High contrast tweaks */
:root[data-theme="hc"] .diet-accordion details { border-width: 2px; }
</file>

<file path="dieter/components/alert.css">
/* Dieter Alert v0 — tokens-only */
.diet-alert {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
}

.diet-alert__icon {
  inline-size: 1.25rem;
  block-size: 1.25rem;
  border-radius: 50%;
  align-self: start;
  background: var(--color-primary, #0b5fff);
}

/* Title + body */
.diet-alert__title { font-weight: 600; margin: 0; }
.diet-alert__body  { margin: 0; color: var(--color-text-secondary); }

/* Variants (info/success/warning/error) */
.diet-alert--info {
  border-color: var(--color-primary-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-primary, #0b5fff) 6%);
}
.diet-alert--info .diet-alert__icon { background: var(--color-primary, #0b5fff); }

.diet-alert--success {
  border-color: var(--color-success-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-success, #1a7f37) 6%);
}
.diet-alert--success .diet-alert__icon { background: var(--color-success, #1a7f37); }

.diet-alert--warning {
  border-color: var(--color-warning-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-warning, #b7791f) 6%);
}
.diet-alert--warning .diet-alert__icon { background: var(--color-warning, #b7791f); }

.diet-alert--error {
  border-color: var(--color-danger-border, var(--color-border));
  background: color-mix(in oklab, var(--color-surface), var(--color-danger, #d93025) 6%);
}
.diet-alert--error .diet-alert__icon { background: var(--color-danger, #d93025); }

/* Links/buttons inside alert respect tokens and focus ring */
.diet-alert a,
.diet-alert button {
  color: var(--color-link, var(--color-primary));
  text-underline-offset: 2px;
  font: inherit;
}
.diet-alert a:focus-visible,
.diet-alert button:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-radius: var(--radius-2, 0.375rem);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-alert { transition: none; }
}
</file>

<file path="dieter/components/badge.css">
/* Dieter Badge & Tag v0 — tokens-only, no JS */
:root {
  /* defensive fallbacks */
  --_radius-2: var(--radius-2, 0.375rem);
  --_pad-sm-y: var(--space-1, 0.25rem);
  --_pad-sm-x: var(--space-2, 0.5rem);
  --_pad-md-y: var(--space-1_5, 0.375rem);
  --_pad-md-x: var(--space-3, 0.75rem);
  --_pad-lg-y: var(--space-2, 0.5rem);
  --_pad-lg-x: var(--space-4, 1rem);
}

.diet-badges { display: flex; flex-wrap: wrap; gap: var(--space-2, 0.5rem); }

/* Base token slots */
.diet-badge,
.diet-tag {
  --_bg: var(--color-surface, #fff);
  --_fg: var(--color-text-primary, #111);
  --_bd: var(--color-border, #e5e7eb);

  display: inline-flex;
  align-items: center;
  gap: var(--space-2, 0.5rem);
  border-radius: var(--_radius-2);
  border: 1px solid var(--_bd);
  background: var(--_bg);
  color: var(--_fg);
  font: inherit;
  line-height: var(--lh-body, 1.5);
  text-decoration: none;
  white-space: nowrap;
}

/* Sizes */
.diet-badge--sm, .diet-tag--sm { padding: var(--_pad-sm-y) var(--_pad-sm-x); font-size: var(--fs-12, 0.75rem); }
.diet-badge--md, .diet-tag--md { padding: var(--_pad-md-y) var(--_pad-md-x); font-size: var(--fs-14, 0.875rem); }
.diet-badge--lg, .diet-tag--lg { padding: var(--_pad-lg-y) var(--_pad-lg-x); font-size: var(--fs-16, 1rem); }

/* Badge (solid) variants */
.diet-badge { border-color: transparent; }

.diet-badge--neutral { --_bg: var(--color-surface-muted, color-mix(in oklab, var(--color-surface), var(--state-hover) 6%)); --_fg: var(--color-text-primary); }
.diet-badge--primary { --_bg: var(--color-primary, #0b64f4); --_fg: var(--color-on-primary, #fff); }
.diet-badge--success { --_bg: var(--color-success, #1a7f37); --_fg: var(--color-on-success, #fff); }
.diet-badge--warning { --_bg: var(--color-warning, #b7791f); --_fg: var(--color-on-warning, #111); }
.diet-badge--danger  { --_bg: var(--color-danger,  #d93025); --_fg: var(--color-on-danger,  #fff); }

/* Badge (soft) variants — subtle background using state layer */
.diet-badge--soft { border-color: transparent; }
.diet-badge--soft.diet-badge--primary { --_bg: color-mix(in oklab, var(--color-surface), var(--color-primary) 12%); --_fg: var(--color-primary); }
.diet-badge--soft.diet-badge--success { --_bg: color-mix(in oklab, var(--color-surface), var(--color-success) 12%); --_fg: var(--color-success); }
.diet-badge--soft.diet-badge--warning { --_bg: color-mix(in oklab, var(--color-surface), var(--color-warning) 12%); --_fg: var(--color-warning); }
.diet-badge--soft.diet-badge--danger  { --_bg: color-mix(in oklab, var(--color-surface), var(--color-danger)  12%); --_fg: var(--color-danger); }

/* Tag (outline) variants */
.diet-tag { background: transparent; }

.diet-tag--neutral { --_bd: var(--color-border); --_fg: var(--color-text-secondary, #4b5563); }
.diet-tag--primary { --_bd: var(--color-primary); --_fg: var(--color-primary); }
.diet-tag--success { --_bd: var(--color-success); --_fg: var(--color-success); }
.diet-tag--warning { --_bd: var(--color-warning); --_fg: var(--color-warning); }
.diet-tag--danger  { --_bd: var(--color-danger);  --_fg: var(--color-danger); }

/* Dismiss affordance (markup only; no JS) */
.diet-tag__dismiss {
  inline-size: 1em; block-size: 1em; border-radius: var(--radius-1, 0.25rem);
  display: inline-grid; place-items: center; font-size: 0.9em;
  padding: 0; border: 1px solid transparent; background: transparent; color: currentColor;
}
.diet-tag__dismiss:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Hover/active cues */
.diet-badge:hover  { background: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-badge:active { background: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }
.diet-tag:hover    { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 6%); }
.diet-tag:active   { background: color-mix(in oklab, var(--color-surface), var(--state-press) 10%); }

/* High-contrast ensures readable borders/text via theme tokens */

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-badge, .diet-tag { transition: none; }
}
</file>

<file path="dieter/components/breadcrumb.css">
/* Dieter Breadcrumb — tokens-only */
.diet-breadcrumb{
  display: flex; flex-wrap: wrap; align-items: center; gap: var(--space-2, .5rem);
  color: var(--color-text-secondary, #4b5563);
  font-size: .875rem;
}

.diet-crumb{
  display: inline-flex; align-items: center; gap: var(--space-2, .5rem);
}

.diet-crumb a{
  color: inherit; text-decoration: none; border-radius: var(--radius-2, .375rem);
  padding-inline: .125rem;
}

.diet-crumb a:hover{
  color: var(--color-text-primary, #111);
  background: color-mix(in oklab, var(--color-surface, #fff), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

.diet-crumb a:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

.diet-crumb[aria-current="page"]{
  color: var(--color-text-primary, #111);
  font-weight: 600;
}

.diet-crumb__sep{ opacity: .6; }

/* Truncate utility */
.diet-crumb--truncate{
  max-inline-size: 16rem; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;
}

/* HC tweak */
html[data-theme="hc"] .diet-crumb__sep{ opacity: 1; }
</file>

<file path="dieter/components/button.css">
/* Dieter Button v0 — tokens-only, no raw values */
.diet-btn {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  min-height: 2.75rem;                 /* ≥ 44px touch target */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  background: var(--_bg);
  color: var(--_fg);
  font: inherit;
  text-decoration: none;
  cursor: pointer;
  transition: background-color 150ms, color 150ms, border-color 150ms, transform 150ms;
}
@media (prefers-reduced-motion: reduce) {
  .diet-btn { transition: none; }
}
/* Sizes */
.diet-btn--sm { min-height: 2.5rem; padding-inline: var(--space-3); }
.diet-btn--lg { min-height: 3rem;   padding-inline: var(--space-5); }

/* Variants */
.diet-btn--primary {
  --_bg: var(--color-primary);
  --_fg: var(--color-on-primary, #fff);
  --_bd: var(--color-primary);
}
.diet-btn--ghost {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
}
.diet-btn--danger {
  --_bg: var(--color-danger, #d93025);
  --_fg: var(--color-on-danger, #fff);
  --_bd: var(--color-danger, #d93025);
}

/* States (use state layer tokens) */
.diet-btn:hover:not(:disabled) {
  background: color-mix(in oklab, var(--_bg), var(--state-hover) 12%);
}
.diet-btn:active:not(:disabled) {
  background: color-mix(in oklab, var(--_bg), var(--state-press) 18%);
  transform: translateY(1px);
}
.diet-btn:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* Disabled */
.diet-btn:disabled,
.diet-btn[aria-disabled="true"] {
  opacity: 0.55;
  cursor: not-allowed;
}

/* Loading (attribute-driven, no JS required) */
.diet-btn[data-state="loading"] {
  position: relative;
  pointer-events: none;
}
.diet-btn[data-state="loading"]::after {
  content: "";
  inline-size: 1rem;
  block-size: 1rem;
  border: 2px solid color-mix(in oklab, var(--_fg), transparent 60%);
  border-top-color: var(--_fg);
  border-radius: 999px;
  animation: diet-spin 0.8s linear infinite;
}
@keyframes diet-spin { to { transform: rotate(360deg); } }
</file>

<file path="dieter/components/card.css">
/* Dieter Card v0 — tokens-only */
:root{
  --_radius-3: var(--radius-3, 0.5rem);
  --_pad-y: var(--space-4, 1rem);
  --_pad-x: var(--space-5, 1.25rem);
  --_gap: var(--space-3, 0.75rem);
  --_shadow-sm: var(--shadow-sm, 0 1px 2px rgb(0 0 0 / .08));
  --_shadow-md: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .12));
}

/* Base card */
.diet-card{
  --_bg: var(--color-surface, #fff);
  --_fg: var(--color-text-primary, #111);
  --_bd: var(--color-border, #e5e7eb);

  display: grid;
  gap: var(--_gap);
  background: var(--_bg);
  color: var(--_fg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius-3);
  padding: var(--_pad-y) var(--_pad-x);
}

/* Density variants */
.diet-card--compact{
  --_pad-y: var(--space-3, .75rem);
  --_pad-x: var(--space-4, 1rem);
  --_gap: var(--space-2, .5rem);
}

/* Elevated variant */
.diet-card--elevated{
  box-shadow: var(--_shadow-sm);
  border-color: color-mix(in oklab, var(--_bd), transparent 40%);
}
.diet-card--elevated:hover{
  box-shadow: var(--_shadow-md);
  background: color-mix(in oklab, var(--_bg), var(--state-hover, rgb(0 0 0 / .06)) 6%);
}

/* Sections */
.diet-card__header{ display:flex; align-items:center; gap: var(--space-3, .75rem); }
.diet-card__title{ font: inherit; font-weight: 600; line-height: var(--lh-title, 1.25); }
.diet-card__subtitle{ color: var(--color-text-secondary, #4b5563); font-size: .875rem; }
.diet-card__body{ display: grid; gap: var(--space-3, .75rem); }
.diet-card__footer{ display:flex; gap: var(--space-3, .75rem); justify-content:flex-end; }

/* Focus visibility for actionable cards */
.diet-card[tabindex]:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}

/* High contrast theme tweaks */
html[data-theme="hc"] .diet-card--elevated{
  box-shadow: none;
  border-width: 2px;
}

@media (prefers-reduced-motion: reduce){
  .diet-card--elevated{ transition: none; }
}
</file>

<file path="dieter/components/choice.css">
/* Dieter Choice Controls v0 — checkbox & radio (tokens-only, native) */
.diet-choice-field { display:grid; gap: var(--space-1); }
.diet-choice-row  { display:flex; align-items:center; gap: var(--space-2); min-height: 2.75rem; } /* ≥44px touch */

:root {
  /* Fallbacks in case tokens missing */
  --_choice-accent: var(--color-primary, #3b82f6);
  --_choice-bg:     var(--color-surface, #fff);
  --_choice-fg:     var(--color-text-primary, #111);
  --_choice-bd:     var(--color-border, #d0d5dd);
}

/* Normalize native inputs */
.diet-checkbox,
.diet-radio {
  inline-size: 1.125rem;
  block-size: 1.125rem;
  min-inline-size: 1.125rem;
  min-block-size: 1.125rem;
  accent-color: var(--_choice-accent);
  background: var(--_choice-bg);
  color: var(--_choice-fg);
  border: 1px solid var(--_choice-bd);
  border-radius: 0.25rem; /* radio will override */
  outline: none;
  margin: 0; /* rely on layout gaps */
}

/* Radio shape */
.diet-radio { border-radius: 999px; }

/* Sizes */
.diet-choice--sm { inline-size: 1rem;   block-size: 1rem; }
.diet-choice--lg { inline-size: 1.25rem; block-size: 1.25rem; }

/* Hover/Active feedback via state layers on the row */
.diet-choice-row:hover  { background: color-mix(in oklab, transparent, var(--state-hover, rgba(0,0,0,.05)) 8%); border-radius: var(--radius-2, 0.375rem); }
.diet-choice-row:active { background: color-mix(in oklab, transparent, var(--state-press, rgba(0,0,0,.1)) 12%); }

/* Focus ring (applies when focusing the input) */
.diet-checkbox:focus-visible,
.diet-radio:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
  border-radius: 0.375rem;
}
.diet-radio:focus-visible { border-radius: 999px; }

/* Disabled */
.diet-checkbox:disabled,
.diet-radio:disabled { opacity: .55; cursor: not-allowed; }

/* Label text */
.diet-choice-label { color: var(--color-text-primary); line-height: var(--lh-body); }
.diet-choice-hint  { color: var(--color-text-tertiary, color-mix(in oklab, var(--color-text-primary), transparent 40%)); font-size: 0.875rem; }
.diet-choice-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Error state */
.diet-choice-field[data-state="error"] .diet-checkbox,
.diet-choice-field[data-state="error"] .diet-radio,
.diet-checkbox[aria-invalid="true"],
.diet-radio[aria-invalid="true"] {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_choice-bg), var(--color-danger, #d93025) 6%);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-choice-row { transition: none; }
}

/* High-contrast inherits color/border from tokens */
</file>

<file path="dieter/components/container.css">
/* Dieter Container wrappers — tokens-only */
:root{
  /* responsive max-widths; rem-based */
  --container-max: 72rem;   /* ~1152px */
  --container-wide: 96rem;  /* ~1536px */
  --container-pad: var(--space-5, 1.25rem);
}

.diet-container{
  max-inline-size: var(--container-max);
  margin-inline: auto;
  padding-inline: var(--container-pad);
}

.diet-container--wide{
  max-inline-size: var(--container-wide);
}

/* Optional utility for vertical rhythm */
.diet-stack{ display:grid; gap: var(--space-4, 1rem); }
</file>

<file path="dieter/components/divider.css">
/* Dieter Divider — tokens-only */
.diet-divider{
  block-size: 1px;
  background: var(--color-border, #e5e7eb);
  inline-size: 100%;
  border: 0;
  margin: var(--space-4, 1rem) 0;
}

/* Inset divider for lists/cards */
.diet-divider--inset{
  margin-inline: var(--space-5, 1.25rem);
  inline-size: calc(100% - (var(--space-5, 1.25rem) * 2));
}

html[data-theme="hc"] .diet-divider{ block-size: 2px; }
</file>

<file path="dieter/components/form-validation.css">
/* Dieter Form Validation Patterns v0 — tokens-only */
:root {
  /* Optional fallbacks if not present: */
  --color-danger:  #d93025;
  --color-success: #1a7f37;
  --color-warning: #b7791f;
}

/* Field group state chromes (apply on container, e.g., .diet-field, .diet-input-field, .diet-select-field, .diet-textarea-field) */
[data-state="error"]   .diet-input,
[data-state="error"]   .diet-select,
[data-state="error"]   .diet-textarea {
  border-color: var(--color-danger);
  background: color-mix(in oklab, var(--color-surface), var(--color-danger) 6%);
}

[data-state="success"] .diet-input,
[data-state="success"] .diet-select,
[data-state="success"] .diet-textarea {
  border-color: var(--color-success);
  background: color-mix(in oklab, var(--color-surface), var(--color-success) 6%);
}

[data-state="warning"] .diet-input,
[data-state="warning"] .diet-select,
[data-state="warning"] .diet-textarea {
  border-color: var(--color-warning);
  background: color-mix(in oklab, var(--color-surface), var(--color-warning) 6%);
}

/* Inline messages */
.diet-inline-msg {
  font-size: 0.875rem;
  line-height: var(--lh-body);
  margin-block-start: var(--space-1);
}

.diet-inline-msg--error   { color: var(--color-danger); }
.diet-inline-msg--success { color: var(--color-success); }
.diet-inline-msg--warning { color: var(--color-warning); }

/* Validation summary banner */
.diet-validate-summary {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  margin-block: var(--space-4);
}

.diet-validate-summary__icon {
  inline-size: 1.25rem;
  block-size: 1.25rem;
  border-radius: 50%;
  align-self: start;
}

/* Variants */
.diet-validate-summary--error {
  border-color: var(--color-danger);
  background: color-mix(in oklab, var(--color-surface), var(--color-danger) 6%);
}
.diet-validate-summary--error .diet-validate-summary__icon { background: var(--color-danger); }

.diet-validate-summary--success {
  border-color: var(--color-success);
  background: color-mix(in oklab, var(--color-surface), var(--color-success) 6%);
}
.diet-validate-summary--success .diet-validate-summary__icon { background: var(--color-success); }

.diet-validate-summary--warning {
  border-color: var(--color-warning);
  background: color-mix(in oklab, var(--color-surface), var(--color-warning) 6%);
}
.diet-validate-summary--warning .diet-validate-summary__icon { background: var(--color-warning); }

/* Link in summary respects role color */
.diet-validate-summary a {
  color: var(--color-link, var(--color-primary));
  text-underline-offset: 2px;
}

/* Focus ring for actionable elements inside summary */
.diet-validate-summary a:focus-visible,
.diet-validate-summary button:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  outline: none;
  border-radius: var(--radius-2, 0.375rem);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-validate-summary { transition: none; }
}
</file>

<file path="dieter/components/form.css">
/* Dieter Form v0 — tokens-only layout + messaging */
.diet-field { display:grid; gap: var(--space-2); }

.diet-label {
  color: var(--color-text-secondary);
  font-weight: 600;
  line-height: var(--lh-body);
}
.diet-label--required::after {
  content:" *";
  color: var(--color-danger, #d93025);
  font-weight: 700;
}

/* Help & error text */
.diet-hint {
  color: var(--color-text-tertiary, color-mix(in oklab, var(--color-text-primary), transparent 40%));
  font-size: 0.875rem;
}
.diet-error {
  color: var(--color-danger, #d93025);
  font-size: 0.875rem;
}

/* Horizontal layout variant (label left, field right) */
.diet-field--row {
  align-items: center;
  grid-template-columns: minmax(10rem, 16rem) 1fr;
  gap: var(--space-4);
}
.diet-field--row .diet-hint,
.diet-field--row .diet-error {
  grid-column: 2; /* message aligns under control */
}

/* Compact spacing variant (for dense forms) */
.diet-field--compact { gap: var(--space-1); }

/* Grouping utilities */
.diet-form-stack { display:grid; gap: var(--space-5); }
.diet-inline { display:flex; gap: var(--space-3); align-items:center; flex-wrap: wrap; }

/* High-contrast inherits from tokens; no extra rules needed */

/* Minimum touch and focus are enforced by controls themselves */
</file>

<file path="dieter/components/icon-helpers.css">
/* Dieter Icon Helpers — tokens-only spacing + icon-only button */

/* Spacing helpers for inline icons */
.diet-icon-start { margin-inline-end: var(--space-2); }
.diet-icon-end   { margin-inline-start: var(--space-2); }

/* Compact option (e.g., tags/badges) */
.diet-icon-start--xs { margin-inline-end: var(--space-1); }
.diet-icon-end--xs   { margin-inline-start: var(--space-1); }

/* Icon-only button primitive (square, ≥44px touch) */
.diet-icon-btn {
  --_pad: var(--space-3);
  display: inline-grid;
  place-items: center;
  min-inline-size: 2.75rem;   /* ≈44px */
  min-block-size: 2.75rem;    /* ≈44px */
  padding: 0;
  border-radius: var(--radius-3, 0.5rem);
  background: var(--color-role-surface);
  border: 1px solid var(--color-role-border);
  color: var(--color-role-text-primary);
  text-decoration: none;
  cursor: pointer;
}
.diet-icon-btn:hover  { background: color-mix(in oklab, var(--color-role-surface), var(--state-hover) 10%); }
.diet-icon-btn:active { background: color-mix(in oklab, var(--color-role-surface), var(--state-press) 14%); }

/* Focus ring via tokens */
.diet-icon-btn:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Size variants map to icon sizes */
.diet-icon-btn--sm { min-inline-size: 2.5rem; min-block-size: 2.5rem; }
.diet-icon-btn--lg { min-inline-size: 3rem;   min-block-size: 3rem; }

/* Ensure embedded <img class="diet-icon"> centers and inherits color */
.diet-icon-btn > .diet-icon { display: block; }
</file>

<file path="dieter/components/input.css">
/* Dieter Text Input v0 — tokens-only */
.diet-field { display: grid; gap: var(--space-2); }
.diet-label {
  color: var(--color-text-secondary, var(--color-text-primary));
  font-weight: 500;
}
.diet-label .diet-required::after { content: " *"; color: var(--color-danger, #d93025); }

.diet-input {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  display: block;
  inline-size: 100%;
  min-height: 2.75rem;                /* ≥44px */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  background: var(--_bg);
  color: var(--_fg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  transition: border-color 150ms, background-color 150ms, color 150ms, box-shadow 150ms;
  font: inherit;
}
.diet-input::placeholder { color: var(--_ph); }

/* Hover/Active */
.diet-input:hover { background: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-input:active { background: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-input:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Sizes */
.diet-input--sm { min-height: 2.5rem; padding-inline: var(--space-3); }
.diet-input--lg { min-height: 3rem;   padding-inline: var(--space-5); }

/* Disabled/ReadOnly */
.diet-input:disabled,
.diet-input[aria-disabled="true"] { opacity: .55; cursor: not-allowed; }
.diet-input[readonly] { background: color-mix(in oklab, var(--_bg), var(--state-hover) 4%); }

/* Error state */
.diet-field[data-state="error"] .diet-input,
.diet-input[aria-invalid="true"] {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}
.diet-help { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-input { transition: none; }
}
</file>

<file path="dieter/components/modal.css">
/* Dieter Modal v0 — tokens-only, <dialog>-first with graceful fallback */
.diet-modal {
  border: 1px solid var(--color-border);
  border-radius: var(--radius-3, 0.5rem);
  padding: 0;
  margin: auto;
  max-inline-size: 42rem;
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: 0 8px 32px color-mix(in oklab, var(--color-text-primary), transparent 85%);
}
.diet-modal::backdrop {
  background: color-mix(in oklab, var(--color-text-primary), transparent 75%);
}
.diet-modal__header, .diet-modal__body, .diet-modal__footer { padding: var(--space-4); }
.diet-modal__header { display:flex; align-items:center; justify-content:space-between; gap: var(--space-3); border-bottom: 1px solid var(--color-border); }
.diet-modal__title { font-weight: 600; }
.diet-modal__body { line-height: var(--lh-body, 1.6); }
.diet-modal__footer { display:flex; gap: var(--space-3); justify-content:flex-end; border-top: 1px solid var(--color-border); }
.diet-modal__close {
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-radius: var(--radius-2, 0.375rem);
  padding: var(--space-2) var(--space-3);
  min-height: 44px;
  cursor: pointer;
}
.diet-modal__close:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 10%); }
.diet-modal__close:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 14%); }
.diet-modal__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-modal-fallback {
  position: fixed; inset: 0; display: grid; place-items: center;
  background: color-mix(in oklab, var(--color-text-primary), transparent 75%);
  z-index: 1000;
}
.diet-modal-fallback .diet-modal { max-inline-size: 42rem; }
:root[data-theme="hc"] .diet-modal { box-shadow: none; border-width: 2px; }
:root[data-theme="hc"] .diet-modal::backdrop,
:root[data-theme="hc"] .diet-modal-fallback { background: color-mix(in oklab, var(--color-text-primary), transparent 65%); }
</file>

<file path="dieter/components/pagination.css">
/* Dieter Pagination — tokens-only */
.diet-pagination{
  display: inline-flex;
  gap: var(--space-2, .5rem);
  align-items: center;
  background: var(--color-surface, #fff);
  border: 1px solid var(--color-border, #e5e7eb);
  border-radius: var(--radius-3, .5rem);
  padding: var(--space-1, .25rem);
}

.diet-page{
  display: inline-flex;
  align-items: center; justify-content: center;
  min-width: 2.25rem; min-height: 2.25rem; /* ≥ 36px; page items aren’t primary controls */
  padding-inline: .5rem;
  border-radius: var(--radius-2, .375rem);
  color: var(--color-text-primary, #111);
  text-decoration: none;
  border: 1px solid transparent;
}

.diet-page:hover{
  background: color-mix(in oklab, var(--color-surface), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

.diet-page:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

.diet-page[aria-current="page"]{
  background: var(--color-primary, #2563eb);
  color: var(--color-on-primary, #fff);
  border-color: var(--color-primary, #2563eb);
}

.diet-page[aria-disabled="true"]{
  opacity: .5;
  pointer-events: none;
}
</file>

<file path="dieter/components/progress.css">
/* Dieter Progress v0 — tokens-only, determinate */
.diet-progress {
  --_track: var(--color-surface);
  --_bar: var(--color-primary, #0b5fff);
  --_bd: 1px solid var(--color-border);
  inline-size: 100%;
  block-size: var(--space-3); /* ~12px */
  background: var(--_track);
  border: var(--_bd);
  border-radius: var(--radius-3, 0.5rem);
  overflow: hidden;
  position: relative;
}

.diet-progress__bar {
  inline-size: 0%;
  block-size: 100%;
  background: var(--_bar);
  transition: inline-size 160ms ease;
}

/* Sizes */
.diet-progress--sm { block-size: var(--space-2); }
.diet-progress--lg { block-size: var(--space-4); }

/* Variants */
.diet-progress--success { --_bar: var(--color-success, #1a7f37); }
.diet-progress--warning { --_bar: var(--color-warning, #b7791f); }
.diet-progress--danger  { --_bar: var(--color-danger,  #d93025); }

/* Accessible name/value live region helper (visually hidden) */
.diet-sr {
  position: absolute !important; inline-size: 1px; block-size: 1px;
  padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
}
</file>

<file path="dieter/components/select.css">
/* Dieter Select v0 — tokens-only, native control */
.diet-select-field { display: grid; gap: var(--space-2); }

.diet-select {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_bd: var(--color-border);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_radius: var(--radius-3, 0.5rem);

  inline-size: 100%;
  min-height: 2.75rem; /* ≥44px touch */
  padding-inline: var(--space-4);
  padding-block: calc(var(--space-2) + 0.125rem);
  color: var(--_fg);
  background: var(--_bg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  font: inherit;
  appearance: none; /* simplify styling */
  background-image:
    linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position:
    right calc(var(--space-4) + 0.6rem) center,
    right calc(var(--space-4)) center;
  background-size: 6px 6px, 6px 6px;
  background-repeat: no-repeat;
}

.diet-select:hover { background-color: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-select:active { background-color: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-select:focus-visible{
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Placeholder-ish (first option disabled) */
.diet-select-placeholder { color: var(--_ph); }

/* Sizes */
.diet-select--sm { min-height: 2.5rem;  padding-inline: var(--space-3); }
.diet-select--lg { min-height: 3rem;    padding-inline: var(--space-5); }

/* Disabled & Error */
.diet-select:disabled,
.diet-select[aria-disabled="true"] { opacity:.55; cursor:not-allowed; }
.diet-select-field[data-state="error"] .diet-select,
.diet-select[aria-invalid="true"]{
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}

.diet-select-help { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-select-error{ color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) { .diet-select{ transition:none; } }

/* High-contrast tweaks are inherited from tokens via colors/borders */
</file>

<file path="dieter/components/skeleton.css">
/* Dieter Skeleton v0 — tokens-only */
@keyframes diet-skeleton-shimmer {
  0%  { background-position: 200% 0; }
  100%{ background-position: -200% 0; }
}

.diet-skeleton {
  --_base: var(--color-surface-muted, color-mix(in oklab, var(--color-surface), var(--color-role-muted, #9aa0a6) 16%));
  --_hi: var(--color-surface, #fff);
  display: inline-block;
  background: linear-gradient(90deg,
    color-mix(in oklab, var(--_base), var(--_hi) 0%),
    color-mix(in oklab, var(--_base), var(--_hi) 12%),
    color-mix(in oklab, var(--_base), var(--_hi) 0%));
  background-size: 200% 100%;
  animation: diet-skeleton-shimmer 1.2s linear infinite;
  border-radius: var(--radius-2, 0.375rem);
  color: transparent; /* hide accidental text */
}

/* Shapes */
.diet-skeleton--text { inline-size: 100%; block-size: 1em; line-height: 1; }
.diet-skeleton--rect { inline-size: 100%; block-size: var(--space-8); }
.diet-skeleton--avatar { inline-size: 3rem; block-size: 3rem; border-radius: 50%; }

/* Density sizes */
.diet-skeleton--sm { block-size: 0.75em; }
.diet-skeleton--lg { block-size: 1.25em; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .diet-skeleton { animation: none; background-position: 0 0; }
}
</file>

<file path="dieter/components/table.css">
/* Dieter Table v0 — tokens-only, accessible */
:root{
  --_table-bg: var(--color-surface, #fff);
  --_table-fg: var(--color-text-primary, #111);
  --_table-bd: var(--color-border, #e5e7eb);
  --_table-pad-y: var(--space-3, .75rem);
  --_table-pad-x: var(--space-4, 1rem);
  --_table-radius: var(--radius-3, .5rem);
  --_table-gap: var(--space-2, .5rem);
}

.diet-table{
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  background: var(--_table-bg);
  color: var(--_table-fg);
  border: 1px solid var(--_table-bd);
  border-radius: var(--_table-radius);
  overflow: clip;
}

/* Cells */
.diet-table th,
.diet-table td{
  padding: var(--_table-pad-y) var(--_table-pad-x);
  border-bottom: 1px solid var(--_table-bd);
  vertical-align: middle;
  text-align: left;
  line-height: var(--lh-body, 1.5);
  font-size: var(--text-14, .875rem);
}

.diet-table thead th{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 6%);
  font-weight: 600;
  color: var(--color-text-secondary, #374151);
}

.diet-table tr:last-child td{ border-bottom: 0; }

/* Zebra */
.diet-table--zebra tbody tr:nth-child(odd) td{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 4%);
}

/* Compact density */
.diet-table--compact{
  --_table-pad-y: var(--space-2, .5rem);
  --_table-pad-x: var(--space-3, .75rem);
}

/* Row hover */
.diet-table tbody tr:hover td{
  background: color-mix(in oklab, var(--_table-bg), var(--state-hover, rgb(0 0 0 / .06)) 8%);
}

/* Focusable row/link focus ring */
.diet-table a:focus-visible{
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-radius: var(--radius-2, .375rem);
}

/* Responsive stacked (opt-in via data-table="stacked") */
[data-table="stacked"] .diet-table,
[data-table="stacked"] .diet-table thead,
[data-table="stacked"] .diet-table tbody,
[data-table="stacked"] .diet-table tr,
[data-table="stacked"] .diet-table th,
[data-table="stacked"] .diet-table td{
  display: block;
}

[data-table="stacked"] .diet-table thead{ display: none; }

[data-table="stacked"] .diet-table tr{
  border-bottom: 1px solid var(--_table-bd);
  padding-block: var(--_table-pad-y);
}

[data-table="stacked"] .diet-table td{
  border: 0;
  padding: var(--space-2) var(--_table-pad-x);
}

[data-table="stacked"] .diet-table td::before{
  content: attr(data-label);
  display: block;
  font-weight: 600;
  color: var(--color-text-secondary, #4b5563);
  margin-bottom: var(--space-1, .25rem);
  font-size: .8125rem;
}

/* HC tweaks */
html[data-theme="hc"] .diet-table{ border-width: 2px; }
html[data-theme="hc"] .diet-table td,
html[data-theme="hc"] .diet-table th{ border-bottom-width: 2px; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce){
  .diet-table tbody tr:hover td{ transition: none; }
}
</file>

<file path="dieter/components/tabs.css">
/* Dieter Tabs v0 — tokens-only, :target-based (no JS) */
.diet-tabs {
  display: grid;
  gap: var(--space-3);
}
.diet-tabs__list {
  display: flex;
  gap: var(--space-2);
  border-bottom: 1px solid var(--color-border);
}
.diet-tab {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  min-height: 44px;
  padding: 0 var(--space-3);
  border: 1px solid transparent;
  border-bottom: 2px solid transparent;
  border-radius: var(--radius-2, 0.375rem) var(--radius-2, 0.375rem) 0 0;
  color: var(--color-text-secondary, color-mix(in oklab, var(--color-text-primary), transparent 30%));
  text-decoration: none;
  background: var(--color-surface);
}
.diet-tab:hover { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 8%); }
.diet-tab:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 12%); }
.diet-tab:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
.diet-tab[aria-current="page"] {
  color: var(--color-text-primary);
  border-color: var(--color-border);
  border-bottom-color: var(--color-primary, currentColor);
  background: color-mix(in oklab, var(--color-surface), var(--state-hover) 6%);
}
.diet-tabs__panels { padding: var(--space-3) 0; }
.diet-tabpanel {
  display: none;
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  padding: var(--space-4);
  color: var(--color-text-primary);
}

/* :target routing */
.diet-tabpanel:target { display: block; }

/* Default-visible panel helper (when no hash) */
.diet-tabpanel.is-default { display: block; }

/* High contrast tweaks */
:root[data-theme="hc"] .diet-tab[aria-current="page"] { border-width: 2px; }
</file>

<file path="dieter/components/textarea.css">
/* Dieter Textarea v0 — tokens-only, native control */
.diet-textarea-field { display:grid; gap: var(--space-2); }

.diet-textarea {
  --_bg: var(--color-surface);
  --_fg: var(--color-text-primary);
  --_ph: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%));
  --_bd: var(--color-border);
  --_radius: var(--radius-3, 0.5rem);

  inline-size: 100%;
  min-block-size: 6rem; /* default ≥ 96px */
  padding: var(--space-3) var(--space-4);
  color: var(--_fg);
  background: var(--_bg);
  border: 1px solid var(--_bd);
  border-radius: var(--_radius);
  outline: none;
  font: inherit;
  line-height: var(--lh-body);
  resize: vertical;
}

.diet-textarea::placeholder { color: var(--_ph); }

/* Hover/Active */
.diet-textarea:hover  { background-color: color-mix(in oklab, var(--_bg), var(--state-hover) 8%); }
.diet-textarea:active { background-color: color-mix(in oklab, var(--_bg), var(--state-press) 12%); }

/* Focus ring */
.diet-textarea:focus-visible {
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
  border-color: var(--focus-ring-color, var(--color-primary));
}

/* Sizes */
.diet-textarea--sm { min-block-size: 4rem;  padding: var(--space-2) var(--space-3); }
.diet-textarea--lg { min-block-size: 8rem;  padding: var(--space-4) var(--space-5); }

/* Disabled & Readonly */
.diet-textarea:disabled,
.diet-textarea[aria-disabled="true"] { opacity:.55; cursor:not-allowed; }
.diet-textarea[readonly] { background: color-mix(in oklab, var(--_bg), var(--state-hover) 6%); }

/* Error */
.diet-textarea[aria-invalid="true"],
.diet-textarea-field[data-state="error"] .diet-textarea {
  border-color: var(--color-danger, #d93025);
  background: color-mix(in oklab, var(--_bg), var(--color-danger, #d93025) 6%);
}

.diet-textarea-hint  { color: var(--color-text-tertiary, color-mix(in oklab, var(--_fg), transparent 40%)); font-size: 0.875rem; }
.diet-textarea-error { color: var(--color-danger, #d93025); font-size: 0.875rem; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) { .diet-textarea { transition:none; } }
</file>

<file path="dieter/components/toast.css">
/* Dieter Toast v0 — tokens-only, non-blocking notices */
.diet-toast-region {
  position: fixed;
  inset: 1rem 1rem auto auto;
  display: grid;
  gap: var(--space-2);
  z-index: 1100;
}
.diet-toast {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: start;
  gap: var(--space-3);
  padding: var(--space-3);
  border-radius: var(--radius-3, 0.5rem);
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  box-shadow: 0 4px 16px color-mix(in oklab, var(--color-text-primary), transparent 88%);
  min-inline-size: 18rem;
}
.diet-toast--success { border-color: var(--color-success, #1a7f37); background: color-mix(in oklab, var(--color-surface), var(--color-success, #1a7f37) 6%); }
.diet-toast--warning { border-color: var(--color-warning, #b7791f); background: color-mix(in oklab, var(--color-surface), var(--color-warning, #b7791f) 6%); }
.diet-toast--error   { border-color: var(--color-danger,  #d93025); background: color-mix(in oklab, var(--color-surface), var(--color-danger,  #d93025) 6%); }
.diet-toast__title { font-weight: 600; }
.diet-toast__close {
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  color: var(--color-text-primary);
  border-radius: var(--radius-2, 0.375rem);
  padding: var(--space-1) var(--space-2);
  min-height: 36px;
  cursor: pointer;
}
.diet-toast__close:hover  { background: color-mix(in oklab, var(--color-surface), var(--state-hover) 10%); }
.diet-toast__close:active { background: color-mix(in oklab, var(--color-surface), var(--state-press) 14%); }
.diet-toast__close:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--focus-ring-offset, 2px) var(--color-bg, #fff),
    0 0 0 calc(var(--focus-ring-width, 2px) + var(--focus-ring-offset, 2px)) var(--focus-ring-color, var(--color-primary));
}
</file>

<file path="dieter/components/utilities.css">
/* Dieter Utilities v0 — tokens-only, no raw values */

/* Layout primitives */
.stack { display:flex; flex-direction:column; gap: var(--space-3); }
.stack--tight { gap: var(--space-2); }
.stack--loose { gap: var(--space-4); }

.cluster { display:flex; flex-wrap:wrap; gap: var(--space-3); align-items:center; }
.cluster--tight { gap: var(--space-2); }
.cluster--loose { gap: var(--space-4); }

/* Content containers (max-widths use token-friendly rems) */
.container { inline-size: 100%; max-inline-size: 72rem; margin-inline:auto; padding-inline: var(--space-4); }
.container--wide { max-inline-size: 90rem; }
.container--narrow { max-inline-size: 48rem; }

/* A11y helpers */
.visually-hidden {
  position:absolute !important;
  inline-size:1px; block-size:1px;
  padding:0; margin:-1px; overflow:hidden; clip:rect(0 0 0 0);
  white-space:nowrap; border:0;
}
.visually-hidden--focusable:focus,
.visually-hidden--focusable:focus-visible {
  position: static !important;
  inline-size: auto; block-size: auto; margin: 0; clip: auto; overflow: visible;
}

/* Text truncation (single line) */
.truncate {
  max-inline-size: 100%;
  inline-size: fit-content;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Text alignment */
.text-left   { text-align: start; }
.text-center { text-align: center; }
.text-right  { text-align: end; }

/* Display helpers */
.inline   { display:inline; }
.inline-block { display:inline-block; }
.block    { display:block; }

/* Utility borders & radius (tokenized) */
.border { border: 1px solid var(--color-role-border); }
.rounded { border-radius: var(--radius-3, 0.5rem); }

/* Spacing shims (only a few; rely on existing .p-*/.m-* if present) */
.gap-2 { gap: var(--space-2); }
.gap-3 { gap: var(--space-3); }
.gap-4 { gap: var(--space-4); }
</file>

<file path="dieter/icons/svg/archivebox.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.451171875 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M6.7237 26.1377H21.7137C24.7437 26.1377 26.4537 24.4577 26.4537 21.4377V8.7377C27.7137 8.2277 28.4537 7.0277 28.4537 5.4377V3.5777C28.4537 1.4377 27.1137 -0.0023 24.9337 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.0277 0.7337 8.2177 1.9937 8.7377V21.4377C1.9937 24.4577 3.7037 26.1377 6.7237 26.1377ZM3.9737 5.8377C3.4437 5.8377 3.1737 5.5677 3.1737 5.0277V3.9877C3.1737 3.4577 3.4437 3.1877 3.9737 3.1877H24.4737C25.0037 3.1877 25.2637 3.4577 25.2637 3.9877V5.0277C25.2637 5.5677 25.0037 5.8377 24.4737 5.8377ZM7.0837 22.6977C6.0537 22.6977 5.5237 22.1877 5.5237 21.1277V9.0277H22.9237V21.1277C22.9237 22.1877 22.3837 22.6977 21.3537 22.6977ZM9.9937 14.7077H18.4737C19.2337 14.7077 19.8137 14.1477 19.8137 13.3577V12.9177C19.8137 12.1277 19.2537 11.5677 18.4737 11.5677H9.9937C9.2137 11.5677 8.6537 12.1277 8.6537 12.9177V13.3577C8.6537 14.1477 9.2237 14.7077 9.9937 14.7077Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-down.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21.943359375 26.181640625" fill="currentColor" aria-hidden="true">
  <path d="M10.9637 -0.0049C9.7937 -0.0049 8.9837 0.8251 8.9837 2.0551V17.2251L9.1237 20.1951L6.3737 17.0251L3.2937 13.9551C2.9437 13.5851 2.4737 13.3451 1.8737 13.3451C0.8037 13.3451 0.0037 14.1351 0.0037 15.2551C0.0037 15.7751 0.2037 16.2551 0.6137 16.6751L9.5037 25.5851C9.8737 25.9651 10.4337 26.1851 10.9637 26.1851C11.5137 26.1851 12.0537 25.9651 12.4237 25.5851L21.3237 16.6751C21.7337 16.2551 21.9437 15.7751 21.9437 15.2551C21.9437 14.1351 21.1337 13.3451 20.0737 13.3451C19.4837 13.3451 19.0137 13.5851 18.6437 13.9551L15.5737 17.0251L12.8237 20.1951L12.9437 17.2251V2.0551C12.9437 0.8251 12.1537 -0.0049 10.9637 -0.0049Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-left-arrow-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.278830884007853 33.55078125" fill="currentColor" aria-hidden="true">
  <path d="M0.5854 7.4328C-0.2046 8.1928 -0.1946 9.3928 0.5854 10.1428L7.6454 17.0028C7.9854 17.3528 8.5054 17.5728 8.9754 17.5728C10.0354 17.5728 10.7754 16.8128 10.7754 15.7628C10.7754 15.2728 10.6154 14.8328 10.2554 14.4928L7.3754 11.7128L5.9854 10.5428L8.5054 10.6128H25.4554C26.4954 10.6128 27.2754 9.8328 27.2754 8.7928C27.2754 7.7428 26.4954 6.9628 25.4554 6.9628H8.5054L5.9854 7.0228L7.3754 5.8528L10.2554 3.0728C10.6154 2.7528 10.7754 2.3128 10.7754 1.8028C10.7754 0.7528 10.0354 0.0028 8.9754 0.0028C8.5054 0.0028 7.9854 0.2228 7.6454 0.5628ZM26.6854 26.1128C27.4854 25.3628 27.4654 24.1628 26.6854 23.4028L19.6354 16.5428C19.2954 16.2028 18.7754 15.9828 18.3054 15.9828C17.2454 15.9828 16.5054 16.7328 16.5054 17.7828C16.5054 18.2828 16.6654 18.7128 17.0254 19.0628L19.9054 21.8328L21.2854 23.0128L18.7754 22.9428H1.8354C0.7854 22.9428 0.0054 23.7228 0.0054 24.7628C0.0054 25.8128 0.7854 26.5928 1.8354 26.5928H18.7754L21.2854 26.5228L19.9054 27.7028L17.0254 30.4728C16.6654 30.8028 16.5054 31.2428 16.5054 31.7428C16.5054 32.8028 17.2454 33.5528 18.3054 33.5528C18.7754 33.5528 19.2954 33.3328 19.6354 32.9928Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.619140625 21.943359375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 10.9806C0.0037 11.5106 0.2337 12.0706 0.6037 12.4406L9.5137 21.3306C9.9237 21.7406 10.4137 21.9406 10.8937 21.9406C12.0537 21.9406 12.8537 21.1406 12.8537 20.0706C12.8537 19.4806 12.5937 19.0006 12.2237 18.6506L9.1637 15.5906L6.1237 12.8006L9.1237 12.9606H24.5637C25.8037 12.9606 26.6237 12.1506 26.6237 10.9806C26.6237 9.7906 25.8037 9.0006 24.5637 9.0006H9.1237L6.1437 9.1606L9.1637 6.3706L12.2237 3.2906C12.5937 2.9406 12.8537 2.4706 12.8537 1.8706C12.8537 0.8106 12.0537 0.0006 10.8937 0.0006C10.4137 0.0006 9.9237 0.2006 9.5037 0.6306L0.6037 9.5106C0.2337 9.8806 0.0037 10.4406 0.0037 10.9806Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.619140625 21.943359375" fill="currentColor" aria-hidden="true">
  <path d="M26.6237 10.9806C26.6237 10.4406 26.3837 9.8806 26.0137 9.5106L17.1137 0.6306C16.6937 0.2006 16.2037 0.0006 15.7237 0.0006C14.5637 0.0006 13.7637 0.8106 13.7637 1.8706C13.7637 2.4706 14.0237 2.9406 14.3937 3.2906L17.4637 6.3706L20.4837 9.1606L17.5037 9.0006H2.0537C0.8237 9.0006 0.0037 9.7906 0.0037 10.9806C0.0037 12.1506 0.8237 12.9606 2.0537 12.9606H17.5037L20.4937 12.8006L17.4637 15.5906L14.3937 18.6506C14.0237 19.0006 13.7637 19.4806 13.7637 20.0706C13.7637 21.1406 14.5637 21.9406 15.7237 21.9406C16.2037 21.9406 16.6937 21.7406 17.1037 21.3306L26.0137 12.4406C26.3837 12.0706 26.6237 11.5106 26.6237 10.9806Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-trianglehead-2-clockwise-rotate-90.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35.02322493761829 28.875" fill="currentColor" aria-hidden="true">
  <path d="M7.8465 3.9249C6.9465 4.7049 6.9365 5.7949 7.5065 6.4849C8.0965 7.2049 9.1465 7.4149 10.1865 6.5749C12.0765 4.7449 14.6665 3.5949 17.5265 3.5949C22.9965 3.5949 27.3565 7.5349 28.2165 12.4849H26.0865C24.9265 12.4849 24.5865 13.4549 25.3065 14.4549L28.9165 19.4449C29.5065 20.2449 30.4365 20.2349 31.0265 19.4449L34.6265 14.4549C35.3665 13.4549 35.0365 12.4849 33.8565 12.4849H31.8665C30.9665 5.5949 24.9065 0.0049 17.5265 0.0049C13.7365 0.0049 10.3065 1.5449 7.8465 3.9249ZM0.3865 14.4149C-0.3435 15.4049 -0.0135 16.3749 1.1665 16.3749H3.1865C4.0865 23.2649 10.1465 28.8749 17.5265 28.8749C21.3165 28.8749 24.7565 27.3149 27.2165 24.9249C28.1065 24.1549 28.1265 23.0649 27.5665 22.3849C26.9565 21.6449 25.9265 21.4549 24.8865 22.2849C23.0065 24.1149 20.3965 25.2749 17.5265 25.2749C12.0565 25.2749 7.6965 21.3449 6.8365 16.3749H8.9265C10.0865 16.3749 10.4465 15.4249 9.7165 14.4249L6.0965 9.4149C5.5265 8.6149 4.5965 8.6249 4.0065 9.4149Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-trianglehead-clockwise.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 31.80084709867549" fill="currentColor" aria-hidden="true">
  <path d="M0.0027 17.3644C0.0027 25.2944 6.5227 31.8044 14.4327 31.8044C22.3627 31.8044 28.8727 25.2944 28.8727 17.3644C28.8727 13.2344 26.8827 8.9444 23.8727 6.5644C22.9127 5.7444 21.8227 5.7944 21.1827 6.5644C20.4627 7.3944 20.7427 8.4444 21.5027 9.2244C23.8327 11.2544 25.2827 14.0844 25.2827 17.3644C25.2927 23.3744 20.4527 28.2044 14.4327 28.2044C8.4327 28.2044 3.6127 23.3744 3.6127 17.3644C3.6127 12.4244 6.8527 8.3144 11.3327 7.0044V8.9244C11.3327 10.0944 12.2927 10.4444 13.2927 9.7244L18.2927 6.0944C19.1027 5.5244 19.0827 4.5844 18.2927 4.0044L13.3027 0.3844C12.3027 -0.3456 11.3327 -0.0156 11.3327 1.1644V3.2844C4.8827 4.6944 0.0027 10.5044 0.0027 17.3644Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-backward-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8437 16.9277C9.6637 16.9277 10.1837 16.3477 10.1837 15.4377V13.5777L9.9837 11.8777L11.6037 13.7177L15.9437 18.0477C16.2837 18.3777 16.6637 18.5277 17.1137 18.5277C17.9637 18.5277 18.6337 17.9277 18.6337 17.0177C18.6337 16.6077 18.4537 16.1977 18.1537 15.9177L13.7937 11.5377L11.9337 9.9077L13.5537 10.1277H15.5437C16.4437 10.1277 17.0337 9.6077 17.0337 8.7877C17.0337 7.9677 16.4437 7.4677 15.5337 7.4677H9.2937C8.1937 7.4677 7.5037 8.0677 7.5037 9.2277V15.4377C7.5037 16.3277 8.0237 16.9277 8.8437 16.9277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-bin.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.58984375 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M9.8937 26.1377H24.7037C27.7237 26.1377 29.0537 24.5277 29.5137 21.5177L31.4637 9.0077C33.4037 8.8477 34.5937 7.4677 34.5937 5.4377V3.5777C34.5937 1.4377 33.2537 -0.0023 31.0937 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.4677 1.2037 8.8477 3.1337 9.0077L5.0737 21.5177C5.5537 24.5277 6.8637 26.1377 9.8937 26.1377ZM3.9737 5.9177C3.4437 5.9177 3.1737 5.6477 3.1737 5.1177V3.9077C3.1737 3.3777 3.4437 3.1077 3.9737 3.1077H30.6237C31.1537 3.1077 31.4137 3.3777 31.4137 3.9077V5.1177C31.4137 5.6477 31.1537 5.9177 30.6237 5.9177ZM10.2037 22.6977C9.1737 22.6977 8.6937 22.2577 8.5137 21.1277L6.5737 9.0277H28.0137L26.0837 21.1277C25.9037 22.2577 25.4137 22.6977 24.3937 22.6977ZM18.7737 19.6977V16.1377L18.6337 14.1877L19.4937 15.1077L20.1937 15.8477C20.3937 16.1077 20.7837 16.2977 21.1237 16.2977C21.8437 16.2977 22.4037 15.7777 22.4037 15.0677C22.4037 14.6677 22.2737 14.3877 21.9537 14.1077L18.4737 10.9477C18.1137 10.6277 17.7737 10.4277 17.3237 10.4277C16.8737 10.4277 16.5137 10.6277 16.1637 10.9477L12.6837 14.1077C12.3737 14.3877 12.2337 14.6677 12.2337 15.0677C12.2337 15.7777 12.7837 16.2977 13.5037 16.2977C13.8637 16.2977 14.2237 16.1077 14.4537 15.8477L15.1437 15.1077L15.9937 14.1877L15.8637 16.1377V19.6977C15.8637 20.5077 16.5337 21.0677 17.3237 21.0677C18.1137 21.0677 18.7737 20.5077 18.7737 19.6977Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up-right-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM17.3037 16.9277C18.1337 16.9277 18.6337 16.3277 18.6337 15.4377V9.2277C18.6337 8.0677 17.9637 7.4677 16.8437 7.4677H10.6137C9.7037 7.4677 9.1237 7.9677 9.1237 8.7877C9.1237 9.6077 9.7037 10.1277 10.6137 10.1277H12.6037L14.2037 9.9077L12.3637 11.5377L7.9937 15.9177C7.6937 16.1977 7.5037 16.6077 7.5037 17.0177C7.5037 17.9277 8.1937 18.5277 9.0337 18.5277C9.4837 18.5277 9.8537 18.3777 10.2137 18.0477L14.5337 13.7177L16.1637 11.8777L15.9737 13.5777V15.4377C15.9737 16.3477 16.4837 16.9277 17.3037 16.9277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21.943359375 26.181640625" fill="currentColor" aria-hidden="true">
  <path d="M10.9637 26.1851C12.1537 26.1851 12.9437 25.3651 12.9437 24.1351V8.9551L12.8237 5.9851L15.5737 9.1651L18.6437 12.2251C19.0137 12.5951 19.4837 12.8351 20.0737 12.8351C21.1337 12.8351 21.9437 12.0451 21.9437 10.9251C21.9437 10.4051 21.7337 9.9251 21.3237 9.5051L12.4237 0.6051C12.0537 0.2151 11.5137 -0.0049 10.9637 -0.0049C10.4337 -0.0049 9.8737 0.2151 9.5037 0.6051L0.6137 9.5051C0.2037 9.9251 0.0037 10.4051 0.0037 10.9251C0.0037 12.0451 0.8037 12.8351 1.8737 12.8351C2.4737 12.8351 2.9437 12.5951 3.2937 12.2251L6.3737 9.1651L9.1237 5.9851L8.9837 8.9551V24.1351C8.9837 25.3651 9.7937 26.1851 10.9637 26.1851Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrow-uturn-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.783203125 26.93359375" fill="currentColor" aria-hidden="true">
  <path d="M26.7837 17.3115C26.7837 11.5215 22.8837 7.5515 16.7337 7.5515H9.1037L6.0137 7.7015L8.0937 5.9915L10.8537 3.2915C11.2237 2.9415 11.4737 2.5015 11.4737 1.8915C11.4737 0.8115 10.7037 0.0015 9.5537 0.0015C9.0537 0.0015 8.5337 0.2215 8.1337 0.6115L0.5837 8.0615C0.2237 8.4315 0.0037 8.9915 0.0037 9.5315C0.0037 10.0715 0.2237 10.6215 0.5837 10.9915L8.1337 18.4415C8.5337 18.8415 9.0537 19.0615 9.5537 19.0615C10.7037 19.0615 11.4737 18.2515 11.4737 17.1715C11.4737 16.5615 11.2237 16.1215 10.8537 15.7615L8.0937 13.0815L6.0137 11.3715L9.1037 11.5115H16.5937C20.5537 11.5115 22.9037 13.8815 22.9037 17.2315C22.9037 20.5715 20.5537 22.9815 16.5937 22.9815H13.3537C12.1937 22.9815 11.3437 23.8615 11.3437 24.9515C11.3437 26.0615 12.2137 26.9315 13.3537 26.9315H16.8537C22.9437 26.9315 26.7837 23.1615 26.7837 17.3115Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrowshape-forward.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.1875 26.072265625" fill="currentColor" aria-hidden="true">
  <path d="M30.1888 13.0304C30.1888 12.4304 29.9388 11.7604 29.3988 11.2404L18.4988 1.1504C17.5988 0.3304 16.9988 0.0004 16.1788 0.0004C14.8888 0.0004 13.9188 1.0104 13.9188 2.2804V6.7104H4.0088C1.4787 6.7104 -0.0013 8.1904 -0.0013 10.7004V15.4504C-0.0013 17.9504 1.4787 19.4304 4.0088 19.4304H13.9188V23.8304C13.9188 25.1004 14.8888 26.0704 16.1588 26.0704C17.0088 26.0704 17.6788 25.7304 18.4988 24.9804L29.3787 14.8304C29.9288 14.3104 30.1888 13.6204 30.1888 13.0304ZM26.2488 13.0304C26.2488 13.1104 26.2087 13.1804 26.1088 13.2704L17.3788 21.5204C17.2987 21.6004 17.2288 21.6304 17.1488 21.6304C17.0188 21.6304 16.9288 21.5304 16.9288 21.4004V16.7304C16.9288 16.4304 16.7888 16.3004 16.4888 16.3004H4.3488C3.5588 16.3004 3.1288 15.9004 3.1288 15.0804V11.0604C3.1288 10.2404 3.5588 9.8404 4.3488 9.8404H16.4888C16.7888 9.8404 16.9288 9.7204 16.9288 9.4104V4.6204C16.9288 4.4804 17.0188 4.3904 17.1588 4.3904C17.2288 4.3904 17.3088 4.4304 17.3788 4.4804L26.1088 12.7804C26.2087 12.8904 26.2488 12.9504 26.2488 13.0304Z"/>
</svg>
</file>

<file path="dieter/icons/svg/arrowshape-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.1875 26.072265625" fill="currentColor" aria-hidden="true">
  <path d="M0.0049 13.0304C0.0049 13.6204 0.2549 14.3104 0.8049 14.8304L11.6849 24.9804C12.5049 25.7304 13.1749 26.0704 14.0249 26.0704C15.3149 26.0704 16.2649 25.1004 16.2649 23.8304V19.4304H26.1849C28.7149 19.4304 30.1849 17.9504 30.1849 15.4504V10.7004C30.1849 8.1904 28.7149 6.7104 26.1849 6.7104H16.2649V2.2804C16.2649 1.0104 15.3149 0.0004 14.0149 0.0004C13.1949 0.0004 12.5949 0.3304 11.6849 1.1504L0.8049 11.2404C0.2449 11.7604 0.0049 12.4304 0.0049 13.0304ZM3.9349 13.0304C3.9349 12.9504 3.9749 12.8904 4.0849 12.7804L12.8149 4.4804C12.8749 4.4304 12.9649 4.3904 13.0249 4.3904C13.1649 4.3904 13.2649 4.4804 13.2649 4.6204V9.4104C13.2649 9.7204 13.3949 9.8404 13.6949 9.8404H25.8349C26.6349 9.8404 27.0549 10.2404 27.0549 11.0604V15.0804C27.0549 15.9004 26.6349 16.3004 25.8349 16.3004H13.6949C13.3949 16.3004 13.2649 16.4304 13.2649 16.7304V21.4004C13.2649 21.5304 13.1649 21.6304 13.0449 21.6304C12.9649 21.6304 12.8949 21.6004 12.8149 21.5204L4.0849 13.2704C3.9749 13.1804 3.9349 13.1104 3.9349 13.0304Z"/>
</svg>
</file>

<file path="dieter/icons/svg/bag.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.484375 29.75" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 24.9471C0.0037 28.0571 1.7137 29.7471 4.8237 29.7471H20.8937C23.7937 29.7471 25.4837 28.0571 25.4837 24.9471V10.8371C25.4837 7.7471 23.7737 6.0471 20.6537 6.0471H19.1137C19.0737 2.6771 16.2537 -0.0029 12.7437 -0.0029C9.2437 -0.0029 6.4237 2.6771 6.3737 6.0471H4.8237C1.7137 6.0471 0.0037 7.7371 0.0037 10.8371ZM9.6637 6.0471C9.7037 4.2971 10.9637 2.9271 12.7437 2.9271C14.5237 2.9271 15.7937 4.2971 15.8337 6.0471ZM3.5237 24.5271V11.2771C3.5237 10.1171 4.1137 9.5671 5.2137 9.5671H20.2737C21.3737 9.5671 21.9537 10.1171 21.9537 11.2771V24.5271C21.9537 25.6871 21.3737 26.2271 20.5037 26.2271H5.2137C4.1137 26.2271 3.5237 25.6871 3.5237 24.5271Z"/>
</svg>
</file>

<file path="dieter/icons/svg/bell.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.80859375 29.39453125" fill="currentColor" aria-hidden="true">
  <path d="M0.0007 21.8584C0.0007 23.2984 1.0207 24.2684 2.6707 24.2684H8.0407C8.1507 26.8684 10.4207 29.3984 13.9007 29.3984C17.3907 29.3984 19.6607 26.8784 19.7707 24.2684H25.1407C26.7707 24.2684 27.8107 23.2984 27.8107 21.8584C27.8107 20.2584 26.5807 18.9884 25.2507 17.8284C24.1707 16.8984 23.9707 15.1084 23.6807 12.6784C23.3507 7.8584 21.6607 4.4284 18.2007 3.1884C17.5707 1.3084 15.9807 -0.0016 13.9007 -0.0016C11.8307 -0.0016 10.2407 1.3084 9.6107 3.1884C6.1507 4.4284 4.4607 7.8584 4.1307 12.6784C3.8407 15.1084 3.6407 16.8984 2.5607 17.8284C1.2307 18.9884 0.0007 20.2584 0.0007 21.8584ZM4.3307 20.9884V20.8384C4.8807 20.4684 5.6307 19.8684 6.2307 19.1284C7.1007 18.0884 7.4907 15.7484 7.6707 13.2884C7.9207 8.4784 9.4907 6.7284 11.4607 6.1884C11.7707 6.1284 11.9607 5.9784 12.0007 5.5484C12.1107 4.2284 12.8107 3.4084 13.9007 3.4084C15.0007 3.4084 15.6907 4.2284 15.8007 5.5484C15.8507 5.9784 16.0407 6.1284 16.3507 6.1884C18.3207 6.7284 19.8907 8.4784 20.1207 13.2884C20.3007 15.7484 20.7307 18.0884 21.5707 19.1284C22.1807 19.8684 22.8507 20.4684 23.3907 20.8384V20.9884ZM11.4207 24.2684H16.3907C16.3007 25.7484 15.2807 26.7284 13.9007 26.7284C12.5207 26.7284 11.5107 25.7484 11.4207 24.2684Z"/>
</svg>
</file>

<file path="dieter/icons/svg/checkmark-circle.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 28.888671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM13.0027 20.9486C13.5627 20.9486 14.0727 20.6586 14.3927 20.1686L20.2627 11.0986C20.4827 10.7686 20.6327 10.4286 20.6327 10.0986C20.6327 9.2986 19.9227 8.7386 19.1527 8.7386C18.6527 8.7386 18.2127 9.0086 17.8827 9.5586L12.9727 17.4586L10.6927 14.6586C10.3527 14.2286 9.9827 14.0586 9.5327 14.0586C8.7327 14.0586 8.0927 14.6786 8.0927 15.4786C8.0927 15.8586 8.2127 16.1886 8.5027 16.5386L11.5627 20.1886C11.9627 20.6886 12.4327 20.9486 13.0027 20.9486Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-down.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.046875 14.861328125" fill="currentColor" aria-hidden="true">
  <path d="M12.5237 14.8611C13.2037 14.8611 13.7837 14.6011 14.3137 14.0511L24.4337 3.7011C24.8437 3.2911 25.0437 2.8011 25.0437 2.2011C25.0437 0.9811 24.0737 0.0011 22.8737 0.0011C22.2837 0.0011 21.7237 0.2411 21.2737 0.7011L12.5337 9.7211L3.7837 0.7011C3.3337 0.2411 2.7737 0.0011 2.1737 0.0011C0.9737 0.0011 0.0037 0.9811 0.0037 2.2011C0.0037 2.7911 0.2037 3.2811 0.6137 3.7011L10.7337 14.0511C11.2937 14.6111 11.8537 14.8611 12.5237 14.8611Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.861328125 25.046875" fill="currentColor" aria-hidden="true">
  <path d="M0.0041 12.5245C0.0041 13.1945 0.2441 13.7545 0.8041 14.3045L11.1441 24.4345C11.5641 24.8445 12.0541 25.0445 12.6641 25.0445C13.8641 25.0445 14.8641 24.0745 14.8641 22.8745C14.8641 22.2545 14.6041 21.7145 14.1541 21.2645L5.1441 12.5145L14.1541 3.7745C14.6041 3.3345 14.8641 2.7745 14.8641 2.1745C14.8641 0.9845 13.8641 0.0045 12.6641 0.0045C12.0541 0.0045 11.5641 0.2045 11.1441 0.6145L0.8041 10.7445C0.2441 11.2745 0.0141 11.8445 0.0041 12.5245Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-right.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.84765625 25.046875" fill="currentColor" aria-hidden="true">
  <path d="M14.8496 12.5245C14.8496 11.8445 14.5996 11.2745 14.0396 10.7445L3.7096 0.6145C3.2996 0.2045 2.7896 0.0045 2.1896 0.0045C0.9796 0.0045 -0.0004 0.9845 -0.0004 2.1745C-0.0004 2.7745 0.2496 3.3345 0.6996 3.7745L9.7096 12.5145L0.6996 21.2645C0.2496 21.7145 -0.0004 22.2545 -0.0004 22.8745C-0.0004 24.0745 0.9796 25.0445 2.1896 25.0445C2.7896 25.0445 3.2996 24.8445 3.7096 24.4345L14.0396 14.3045C14.6196 13.7545 14.8496 13.1945 14.8496 12.5245Z"/>
</svg>
</file>

<file path="dieter/icons/svg/chevron-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.046875 14.861328125" fill="currentColor" aria-hidden="true">
  <path d="M0.6137 11.1577C0.2037 11.5677 0.0037 12.0677 0.0037 12.6577C0.0037 13.8777 0.9737 14.8577 2.1737 14.8577C2.7737 14.8577 3.3337 14.6177 3.7837 14.1677L12.5337 5.1577L21.2737 14.1677C21.7137 14.6277 22.2837 14.8577 22.8737 14.8577C24.0737 14.8577 25.0437 13.8777 25.0437 12.6577C25.0437 12.0577 24.8437 11.5677 24.4337 11.1577L14.3137 0.8077C13.7837 0.2577 13.2037 -0.0023 12.5237 -0.0023C11.8537 -0.0023 11.2937 0.2477 10.7337 0.8077Z"/>
</svg>
</file>

<file path="dieter/icons/svg/circle-grid-2x1.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.58203125 17.240234375" fill="currentColor" aria-hidden="true">
  <path d="M8.6127 17.2444C13.3527 17.2444 17.2227 13.3544 17.2227 8.6144C17.2227 3.8644 13.3527 0.0044 8.6127 0.0044C3.8527 0.0044 0.0027 3.8644 0.0027 8.6144C0.0027 13.3544 3.8527 17.2444 8.6127 17.2444ZM29.9527 17.2444C34.7027 17.2444 38.5827 13.3544 38.5827 8.6144C38.5827 3.8644 34.7027 0.0044 29.9527 0.0044C25.2127 0.0044 21.3427 3.8644 21.3427 8.6144C21.3427 13.3544 25.1927 17.2444 29.9527 17.2444ZM8.6127 13.8644C5.7327 13.8644 3.3627 11.5144 3.3627 8.6144C3.3627 5.7244 5.7327 3.3744 8.6127 3.3744C11.4827 3.3744 13.8627 5.7444 13.8627 8.6144C13.8627 11.4944 11.4827 13.8644 8.6127 13.8644ZM29.9527 13.8644C27.0727 13.8644 24.7227 11.5144 24.7227 8.6144C24.7227 5.7244 27.0727 3.3744 29.9527 3.3744C32.8427 3.3744 35.2027 5.7444 35.2027 8.6144C35.2027 11.4944 32.8427 13.8644 29.9527 13.8644Z"/>
</svg>
</file>

<file path="dieter/icons/svg/circlebadge-2.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.271484375 20.9453125" fill="currentColor" aria-hidden="true">
  <path d="M10.4727 20.9438C11.9627 20.9438 13.4027 20.6138 14.6927 20.0338C15.9527 20.6038 17.3327 20.9438 18.8027 20.9438C24.5027 20.9438 29.2727 16.1737 29.2727 10.4738C29.2727 4.7538 24.5027 0.0038 18.7827 0.0038C17.3227 0.0038 15.9427 0.3238 14.6927 0.9138C13.3827 0.3238 11.9527 0.0038 10.4627 0.0038C4.7427 0.0038 0.0027 4.7538 0.0027 10.4738C0.0027 16.1737 4.7627 20.9438 10.4727 20.9438ZM10.4727 17.4638C6.6827 17.4638 3.4727 14.2638 3.4727 10.4738C3.4727 6.6738 6.6727 3.4737 10.4627 3.4737C14.2627 3.4737 17.4627 6.6838 17.4627 10.4738C17.4627 14.2638 14.2627 17.4638 10.4727 17.4638ZM20.9427 10.4738C20.9427 7.8238 19.9027 5.3637 18.2227 3.5038C18.4127 3.4838 18.5927 3.4737 18.7827 3.4737C22.5827 3.4737 25.7827 6.6838 25.7827 10.4738C25.7827 14.2638 22.5827 17.4638 18.8027 17.4638C18.6027 17.4638 18.4127 17.4638 18.2427 17.4338C19.9027 15.5738 20.9427 13.1238 20.9427 10.4738Z"/>
</svg>
</file>

<file path="dieter/icons/svg/clear.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.140625 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8737 18.7277C9.3237 18.7277 9.6837 18.5977 9.9637 18.2977L13.0837 15.1777L16.2137 18.2977C16.5037 18.5777 16.8537 18.7277 17.2937 18.7277C18.1337 18.7277 18.7737 18.0877 18.7737 17.2577C18.7737 16.8577 18.6037 16.4977 18.3237 16.2277L15.1937 13.0877L18.3337 9.9277C18.6237 9.6277 18.7737 9.2877 18.7737 8.8977C18.7737 8.0677 18.1337 7.4277 17.3037 7.4277C16.8737 7.4277 16.5337 7.5577 16.2237 7.8577L13.0837 10.9877L9.9537 7.8777C9.6637 7.5777 9.3237 7.4377 8.8737 7.4377C8.0537 7.4377 7.4137 8.0777 7.4137 8.9177C7.4137 9.2977 7.5637 9.6477 7.8437 9.9277L10.9937 13.0877L7.8437 16.2277C7.5637 16.4977 7.4137 16.8677 7.4137 17.2577C7.4137 18.0877 8.0537 18.7277 8.8737 18.7277Z"/>
</svg>
</file>

<file path="dieter/icons/svg/cloud-hail.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32.443359375 33.318359375" fill="currentColor" aria-hidden="true">
  <path d="M6.9727 21.8086H24.1327C28.8727 21.8086 32.4427 18.1986 32.4427 13.6586C32.4427 9.0186 28.7927 5.5086 23.9927 5.5086C22.3527 2.3386 19.3327 -0.0014 14.8427 -0.0014C9.4327 -0.0014 5.1527 4.0186 4.5427 9.1486C1.9527 9.9986 0.0027 12.2386 0.0027 15.2986C0.0027 18.9486 2.7027 21.8086 6.9727 21.8086ZM7.0427 18.5786C4.4827 18.5786 3.2127 17.2086 3.2127 15.3686C3.2127 13.7786 4.1827 12.4986 6.4127 11.9186C7.2627 11.6986 7.5027 11.3186 7.6127 10.4586C8.1327 5.9286 11.1527 3.2286 14.8427 3.2286C17.6627 3.2286 19.9627 4.7986 21.4527 7.7086C21.8227 8.4186 22.2427 8.6786 23.1227 8.6786C27.1927 8.6786 29.2327 10.9386 29.2327 13.7286C29.2327 16.4486 27.1227 18.5786 24.1327 18.5786ZM9.0327 26.7686L9.7727 25.4886C10.0627 24.9886 9.9227 24.3786 9.4227 24.0886C8.9127 23.7986 8.3427 23.9786 8.0427 24.4886L7.3027 25.7886C7.0227 26.2686 7.1527 26.8686 7.6527 27.1486C8.1627 27.4386 8.7527 27.2486 9.0327 26.7686ZM15.0027 28.8586L16.9427 25.4986C17.2227 25.0086 17.0927 24.3886 16.5827 24.0986C16.0827 23.8186 15.5127 23.9986 15.2127 24.5186L13.2727 27.8886C12.9927 28.3586 13.1127 28.9586 13.6127 29.2586C14.1227 29.5286 14.7227 29.3386 15.0027 28.8586ZM23.3627 26.8086L24.1027 25.5286C24.3927 25.0286 24.2527 24.4286 23.7527 24.1486C23.2427 23.8486 22.6727 24.0186 22.3627 24.5386L21.6327 25.8386C21.3527 26.3186 21.4627 26.9186 21.9827 27.2086C22.4927 27.4986 23.0827 27.2986 23.3627 26.8086ZM6.2227 31.2286C7.1227 31.2286 7.8627 30.4786 7.8627 29.5686C7.8627 28.6886 7.1227 27.9486 6.2227 27.9486C5.3327 27.9486 4.5827 28.6886 4.5827 29.5686C4.5827 30.4786 5.3327 31.2286 6.2227 31.2286ZM20.5527 31.2786C21.4527 31.2786 22.1927 30.5286 22.1927 29.6286C22.1927 28.7386 21.4527 27.9986 20.5527 27.9986C19.6627 27.9986 18.9127 28.7386 18.9127 29.6286C18.9127 30.5286 19.6627 31.2786 20.5527 31.2786ZM12.1927 33.3186C13.0827 33.3186 13.8327 32.5786 13.8327 31.6686C13.8327 30.7886 13.0827 30.0386 12.1927 30.0386C11.2927 30.0386 10.5527 30.7886 10.5527 31.6686C10.5527 32.5786 11.2927 33.3186 12.1927 33.3186Z"/>
</svg>
</file>

<file path="dieter/icons/svg/delete-left.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.201171875 26.140625" fill="currentColor" aria-hidden="true">
  <path d="M25.3709 26.1377C28.4909 26.1377 30.2009 24.7477 30.2009 21.6377V4.7977C30.2009 1.6977 28.4909 -0.0023 25.3709 -0.0023H13.6309C11.3909 -0.0023 10.1209 0.5177 8.7109 2.1377L1.5209 10.1077C0.3409 11.4477 0.0009 12.1777 0.0009 13.0577C0.0009 13.9477 0.3509 14.7077 1.5209 16.0377L8.7109 23.9677C10.1409 25.5977 11.3909 26.1377 13.6309 26.1377ZM24.9809 22.6177H13.4009C12.5809 22.6177 12.0309 22.3777 11.4409 21.7377L4.2909 13.8777C3.9909 13.5577 3.9009 13.3177 3.9009 13.0577C3.9009 12.7977 3.9909 12.5777 4.2909 12.2477L11.4409 4.3477C12.0209 3.7077 12.5809 3.5277 13.3809 3.5277H24.9809C26.0909 3.5277 26.6709 4.0777 26.6709 5.2377V20.9177C26.6709 22.0777 26.0909 22.6177 24.9809 22.6177ZM13.4509 18.7577C13.9009 18.7577 14.2609 18.6077 14.5509 18.3177L17.6609 15.2077L20.7909 18.3177C21.0809 18.6077 21.4409 18.7577 21.8709 18.7577C22.7109 18.7577 23.3509 18.0977 23.3509 17.2677C23.3509 16.8877 23.1909 16.5277 22.9009 16.2377L19.7709 13.0977L22.9109 9.9377C23.2009 9.6477 23.3509 9.2977 23.3509 8.9277C23.3509 8.0777 22.7109 7.4377 21.8909 7.4377C21.4509 7.4377 21.1209 7.5777 20.8109 7.8877L17.6609 11.0177L14.5309 7.8877C14.2509 7.5977 13.9009 7.4677 13.4509 7.4677C12.6309 7.4677 11.9909 8.0977 11.9909 8.9277C11.9909 9.3077 12.1409 9.6677 12.4309 9.9577L15.5709 13.0977L12.4309 16.2577C12.1409 16.5277 11.9909 16.8877 11.9909 17.2677C11.9909 18.0977 12.6309 18.7577 13.4509 18.7577Z"/>
</svg>
</file>

<file path="dieter/icons/svg/document.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24.240234375 30.091796875" fill="currentColor" aria-hidden="true">
  <path d="M4.8037 30.0902H19.4437C22.5437 30.0902 24.2437 28.3802 24.2437 25.2702V12.8802C24.2437 10.7502 23.9237 9.6802 22.5737 8.3102L16.0137 1.6802C14.6837 0.3402 13.5737 0.0002 11.5537 0.0002H4.8037C1.6937 0.0002 0.0037 1.7102 0.0037 4.8302V25.2702C0.0037 28.4002 1.6937 30.0902 4.8037 30.0902ZM5.2237 26.5602C4.0637 26.5602 3.5237 25.9802 3.5237 24.8802V5.2202C3.5237 4.1302 4.0637 3.5302 5.2237 3.5302H10.5937V10.2302C10.5937 12.6102 11.7337 13.7302 14.0937 13.7302H20.7137V24.8802C20.7137 25.9802 20.1837 26.5602 19.0137 26.5602ZM14.3537 10.8302C13.7637 10.8302 13.4937 10.5502 13.4937 9.9702V3.8102L20.4437 10.8302Z"/>
</svg>
</file>

<file path="dieter/icons/svg/ellipsis-circle.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 28.888671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM8.1027 16.6286C9.3127 16.6286 10.2927 15.6386 10.2927 14.4386C10.2927 13.2386 9.3127 12.2486 8.1027 12.2486C6.9027 12.2486 5.9227 13.2386 5.9227 14.4386C5.9227 15.6386 6.9027 16.6286 8.1027 16.6286ZM14.4227 16.6286C15.6227 16.6286 16.5927 15.6386 16.5927 14.4386C16.5927 13.2386 15.6227 12.2486 14.4227 12.2486C13.2027 12.2486 12.2327 13.2386 12.2327 14.4386C12.2327 15.6386 13.2027 16.6286 14.4227 16.6286ZM20.7227 16.6286C21.9327 16.6286 22.9027 15.6386 22.9027 14.4386C22.9027 13.2386 21.9327 12.2486 20.7227 12.2486C19.5227 12.2486 18.5427 13.2386 18.5427 14.4386C18.5427 15.6386 19.5227 16.6286 20.7227 16.6286Z"/>
</svg>
</file>

<file path="dieter/icons/svg/eraser-line-dashed.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 39.70937776856488 29.626643659003065" fill="currentColor" aria-hidden="true">
  <path d="M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421ZM16.5517 28.7721H25.9417C26.9117 28.7721 27.7017 27.9821 27.7017 27.0121C27.7017 26.0421 26.9117 25.2421 25.9417 25.2421H20.0717ZM31.4517 28.7721H37.9417C38.9117 28.7721 39.7117 27.9821 39.7117 27.0121C39.7117 26.0421 38.9117 25.2421 37.9417 25.2421H31.4517C30.4817 25.2421 29.6917 26.0421 29.6917 27.0121C29.6917 27.9821 30.4817 28.7721 31.4517 28.7721Z"/>
</svg>
</file>

<file path="dieter/icons/svg/eraser.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.61962396511093 29.626643659003065" fill="currentColor" aria-hidden="true">
  <path d="M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421Z"/>
</svg>
</file>

<file path="dieter/icons/svg/externaldrive.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.04296875 24.7734375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 17.9341C0.0037 21.9141 2.8737 24.7741 7.0537 24.7741H26.9837C31.1737 24.7741 34.0437 21.9141 34.0437 17.9341C34.0437 16.6941 33.6837 15.5841 33.2637 14.6041L28.4537 3.6541C27.4237 1.2941 25.4437 0.0041 22.7237 0.0041H11.3337C8.6137 0.0041 6.6337 1.2941 5.6037 3.6541L0.8637 14.4641C0.4137 15.4941 0.0037 16.6241 0.0037 17.9341ZM5.7237 11.2941L8.6937 4.3441C9.0937 3.3541 10.0337 2.8141 11.2537 2.8141H22.8137C24.0237 2.8141 24.9637 3.3541 25.3737 4.3441L28.3237 11.2941C27.9037 11.1741 27.4637 11.1041 26.9837 11.1041H7.0537C6.5937 11.1041 6.1437 11.1741 5.7237 11.2941ZM3.2937 17.9341C3.2937 15.8741 4.7837 14.3841 7.0537 14.3841H26.9837C29.2537 14.3841 30.7637 15.8741 30.7637 17.9341C30.7637 20.1541 29.2537 21.4941 26.9837 21.4941H7.0537C4.7837 21.4941 3.2937 20.0041 3.2937 17.9341ZM24.9337 17.9341C24.9337 18.9941 25.7837 19.8241 26.8337 19.8241C27.8637 19.8241 28.7137 18.9941 28.7137 17.9341C28.7137 16.9241 27.8537 16.0541 26.8337 16.0541C25.8037 16.0541 24.9337 16.9241 24.9337 17.9341Z"/>
</svg>
</file>

<file path="dieter/icons/svg/folder-badge-plus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37.1875 26.728515625" fill="currentColor" aria-hidden="true">
  <path d="M29.9937 14.4097C33.9237 14.4097 37.1837 11.1297 37.1837 7.1897C37.1837 3.2497 33.9337 -0.0003 29.9937 -0.0003C26.0437 -0.0003 22.7937 3.2697 22.7937 7.1897C22.7937 11.1397 26.0437 14.4097 29.9937 14.4097ZM4.8237 26.7297H27.2337C30.1337 26.7297 31.8237 25.0197 31.8237 21.9297V16.2697C30.7937 16.5297 29.4337 16.5297 28.3037 16.2697V21.5097C28.3037 22.6497 27.7137 23.1997 26.6237 23.1997H5.2137C4.1137 23.1997 3.5237 22.6497 3.5237 21.4897V11.9897H22.2537C21.6537 11.1297 21.2037 10.1397 20.9637 9.0897H3.5237V5.6697C3.5237 4.5897 4.1737 3.9897 5.2537 3.9897H7.4337C8.4937 3.9897 9.1037 4.2197 9.9937 4.9097L10.6737 5.4697C11.7437 6.2897 12.4837 6.5597 14.0437 6.5597H20.8537C20.8737 5.2997 21.1337 4.1797 21.7137 3.0397H14.9937C13.9437 3.0397 13.3037 2.7897 12.4237 2.1197L11.7437 1.5697C10.6737 0.7397 9.9537 0.4697 8.3837 0.4697H4.5637C1.7337 0.4697 0.0037 2.1697 0.0037 5.2597V21.9297C0.0037 25.0297 1.7137 26.7297 4.8237 26.7297ZM29.9937 11.8497C29.3237 11.8497 28.9037 11.4197 28.9037 10.7697V8.2997H26.4437C25.8037 8.2997 25.3637 7.8597 25.3437 7.2097C25.3437 6.5497 25.7837 6.1097 26.4437 6.1097H28.9037V3.6597C28.9037 3.0197 29.3237 2.5797 29.9937 2.5697C30.6537 2.5597 31.0937 3.0097 31.0937 3.6597V6.1097H33.5537C34.1937 6.1097 34.6337 6.5497 34.6337 7.2097C34.6337 7.8597 34.1937 8.2997 33.5537 8.2997H31.0937V10.7697C31.0937 11.4197 30.6537 11.8497 29.9937 11.8497Z"/>
</svg>
</file>

<file path="dieter/icons/svg/folder.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.828125 26.263671875" fill="currentColor" aria-hidden="true">
  <path d="M4.8237 26.2648H27.2337C30.1337 26.2648 31.8237 24.5548 31.8237 21.4648V7.3648C31.8237 4.2648 30.1237 2.5748 27.0037 2.5748H14.9937C13.9437 2.5748 13.3037 2.3248 12.4237 1.6548L11.7437 1.1048C10.6737 0.2748 9.9537 0.0048 8.3837 0.0048H4.5637C1.7337 0.0048 0.0037 1.7048 0.0037 4.7948V21.4648C0.0037 24.5648 1.7137 26.2648 4.8237 26.2648ZM3.5237 5.2048C3.5237 4.1248 4.1737 3.5248 5.2537 3.5248H7.4337C8.4937 3.5248 9.1037 3.7548 9.9937 4.4448L10.6737 5.0048C11.7437 5.8248 12.4837 6.0948 14.0437 6.0948H26.6237C27.7137 6.0948 28.3037 6.6348 28.3037 7.7948V8.6248H3.5237ZM5.2137 22.7348C4.1137 22.7348 3.5237 22.1848 3.5237 21.0248V11.5248H28.3037V21.0448C28.3037 22.1848 27.7137 22.7348 26.6237 22.7348Z"/>
</svg>
</file>

<file path="dieter/icons/svg/gearshape.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.4609375 30.4609375" fill="currentColor" aria-hidden="true">
  <path d="M13.8327 30.4616H16.6227C17.8927 30.4616 18.9227 29.6516 19.1927 28.4416L19.7027 26.2616L19.9327 26.1816L21.8327 27.3616C22.9027 28.0116 24.1827 27.8316 25.0727 26.9316L27.0027 25.0216C27.9027 24.0916 28.0527 22.8216 27.4027 21.7816L26.2327 19.8916L26.3027 19.6716L28.4627 19.1716C29.6727 18.8716 30.4627 17.8516 30.4627 16.6016V13.9216C30.4627 12.6616 29.6827 11.6316 28.4627 11.3316L26.3327 10.8116L26.2327 10.5916L27.4127 8.7116C28.0827 7.6716 27.9227 6.4016 27.0027 5.4516L25.0727 3.5416C24.2027 2.6416 22.9127 2.4616 21.8427 3.1216L19.9427 4.2816L19.7027 4.2016L19.1927 2.0216C18.9227 0.8116 17.8927 0.0016 16.6227 0.0016H13.8327C12.5627 0.0016 11.5527 0.8216 11.2627 2.0216L10.7627 4.2016L10.5127 4.2816L8.6127 3.1216C7.5427 2.4716 6.2627 2.6416 5.3827 3.5416L3.4627 5.4516C2.5527 6.4016 2.3927 7.6716 3.0527 8.7116L4.2227 10.5916L4.1427 10.8116L1.9927 11.3316C0.7827 11.6316 0.0027 12.6616 0.0027 13.9216V16.6016C0.0027 17.8516 0.7927 18.8716 1.9927 19.1716L4.1527 19.6716L4.2427 19.8916L3.0627 21.7816C2.3927 22.8216 2.5527 24.0916 3.4627 25.0216L5.3827 26.9316C6.2727 27.8316 7.5627 28.0116 8.6227 27.3616L10.5227 26.1816L10.7627 26.2616L11.2627 28.4416C11.5527 29.6516 12.5627 30.4616 13.8327 30.4616ZM14.3827 27.3716C14.1627 27.3716 14.0527 27.2616 14.0227 27.0716L13.2327 23.7316C12.3027 23.5616 11.3927 23.1716 10.5827 22.6416L7.6727 24.4416C7.5027 24.5516 7.3427 24.5416 7.1927 24.3916L6.0127 23.2116C5.8527 23.0616 5.8627 22.9016 5.9627 22.7316L7.7627 19.8216C7.2827 19.0316 6.9027 18.1416 6.7127 17.2116L3.3727 16.4316C3.1827 16.3916 3.0727 16.3016 3.0727 16.0616V14.4416C3.0727 14.1916 3.1827 14.0916 3.3727 14.0516L6.7127 13.2716C6.9227 12.3316 7.3027 11.4016 7.7527 10.6516L5.9627 7.7416C5.8527 7.5716 5.8427 7.4116 5.9927 7.2616L7.1827 6.1016C7.3427 5.9516 7.4827 5.9316 7.6727 6.0416L10.5727 7.8216C11.2427 7.3716 12.2627 6.9416 13.2327 6.7216L14.0227 3.3916C14.0527 3.2016 14.1627 3.0916 14.3827 3.0916H16.0827C16.3127 3.0916 16.4027 3.2016 16.4427 3.3916L17.2427 6.7416C18.2127 6.9416 19.1027 7.3416 19.8827 7.8216L22.7727 6.0616C22.9727 5.9516 23.1027 5.9616 23.2727 6.1116L24.4627 7.2716C24.6127 7.4416 24.5927 7.5916 24.4827 7.7616L22.7127 10.6516C23.1627 11.4016 23.5527 12.3316 23.7527 13.2616L27.0827 14.0516C27.2927 14.0916 27.3827 14.1916 27.3827 14.4416V16.0616C27.3827 16.3016 27.2727 16.3916 27.0827 16.4316L23.7527 17.2216C23.5527 18.1316 23.1727 19.0616 22.6927 19.8216L24.4827 22.7216C24.5827 22.8916 24.5927 23.0516 24.4327 23.2016L23.2527 24.3816C23.0927 24.5316 22.9427 24.5416 22.7727 24.4316L19.8827 22.6416C19.0627 23.1716 18.2527 23.5316 17.2427 23.7316L16.4427 27.0716C16.4027 27.2616 16.3127 27.3716 16.0827 27.3716ZM15.2327 20.3816C18.0627 20.3816 20.3727 18.0716 20.3727 15.2316C20.3727 12.4116 18.0627 10.1016 15.2327 10.1016C12.4027 10.1016 10.0727 12.4116 10.0727 15.2316C10.0727 18.0716 12.4027 20.3816 15.2327 20.3816ZM15.2327 17.6416C13.9227 17.6416 12.8427 16.5616 12.8427 15.2316C12.8427 13.9316 13.9227 12.8516 15.2327 12.8516C16.5127 12.8516 17.5927 13.9316 17.5927 15.2316C17.5927 16.5416 16.5127 17.6416 15.2327 17.6416Z"/>
</svg>
</file>

<file path="dieter/icons/svg/heart.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.451171875 26.4140625" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 8.9843C0.0037 14.8443 4.9337 20.6943 12.4537 25.6043C13.0837 26.0143 13.7637 26.4143 14.2237 26.4143C14.6837 26.4143 15.3637 26.0143 15.9937 25.6043C23.5137 20.6943 28.4537 14.8443 28.4537 8.9843C28.4537 3.6143 24.7237 0.0043 20.1637 0.0043C17.4437 0.0043 15.4237 1.1943 14.2237 2.9143C13.0337 1.1943 11.0037 0.0043 8.2837 0.0043C3.7337 0.0043 0.0037 3.6143 0.0037 8.9843ZM3.7337 8.9443C3.7337 5.7843 5.8837 3.6143 8.7337 3.6143C11.0337 3.6143 12.2737 4.9243 13.1137 6.1143C13.4937 6.6743 13.8037 6.9043 14.2237 6.9043C14.6437 6.9043 14.9137 6.6743 15.3437 6.1143C16.2237 4.9243 17.4137 3.6143 19.7037 3.6143C22.5737 3.6143 24.7237 5.7843 24.7237 8.9443C24.7237 13.3543 20.2637 18.4543 14.4337 22.3243C14.3437 22.3843 14.2737 22.4343 14.2237 22.4343C14.1737 22.4343 14.1137 22.3843 14.0137 22.3243C8.1937 18.4543 3.7337 13.3543 3.7337 8.9443Z"/>
</svg>
</file>

<file path="dieter/icons/svg/humidity.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.18133278998727 24.650390625" fill="currentColor" aria-hidden="true">
  <path d="M5.9575 8.2071C12.2875 8.2071 15.5275 3.0471 21.0875 3.0471C22.3875 3.0471 23.4975 3.3371 24.8075 4.0971C25.5475 4.5071 26.3375 4.2771 26.7775 3.6671C27.2875 2.9271 27.1075 1.9171 26.1575 1.3571C24.5775 0.4471 22.8975 -0.0029 21.0875 -0.0029C14.7075 -0.0029 11.4775 5.1671 5.9575 5.1671C4.6575 5.1671 3.5575 4.8671 2.2375 4.1171C1.4975 3.6871 0.6875 3.9371 0.2675 4.5671C-0.2225 5.3071 -0.0425 6.3071 0.8875 6.8471C2.4675 7.7471 4.1475 8.2071 5.9575 8.2071ZM23.9175 24.6471C27.4075 24.6471 30.1775 21.9271 30.1775 18.5271C30.1775 16.6671 29.2675 14.8471 28.5175 13.4371L25.4675 7.7671C25.0975 7.0971 24.6275 6.7671 23.9175 6.7671C23.2075 6.7671 22.7475 7.0971 22.3875 7.7671L19.3575 13.4371C18.5975 14.8471 17.6675 16.6671 17.6675 18.5271C17.6675 21.9271 20.4575 24.6471 23.9175 24.6471ZM5.9675 15.5471C11.0375 15.5471 14.2775 12.0071 18.3875 10.8871C18.9975 9.7071 19.6375 8.5471 20.2675 7.3671C14.3175 7.8171 11.2975 12.4971 5.9675 12.4971C4.6675 12.4971 3.5775 12.1971 2.2675 11.4471C1.5075 11.0171 0.7075 11.2671 0.2975 11.8971C-0.2125 12.6371 -0.0325 13.6271 0.8975 14.1771C2.4775 15.0771 4.1675 15.5471 5.9675 15.5471ZM23.9175 22.0671C21.8875 22.0671 20.2575 20.5071 20.2575 18.5271C20.2575 17.2671 20.8975 16.0471 21.6475 14.6471L23.7975 10.6371C23.8675 10.4971 23.9975 10.4971 24.0875 10.6371L26.2075 14.6471C26.9575 16.0471 27.6075 17.2671 27.6075 18.5271C27.6075 20.5071 25.9875 22.0671 23.9175 22.0671ZM5.9575 22.8771C9.9475 22.8771 12.7475 20.7271 15.7175 19.2471C15.5675 18.2071 15.7075 16.9371 16.0675 15.7871C12.5475 17.3071 9.8375 19.8271 5.9575 19.8271C4.6575 19.8271 3.5575 19.5271 2.2375 18.7671C1.4975 18.3471 0.6875 18.5971 0.2675 19.2271C-0.2225 19.9571 -0.0425 20.9571 0.8875 21.5071C2.4675 22.4071 4.1475 22.8771 5.9575 22.8771Z"/>
</svg>
</file>

<file path="dieter/icons/svg/link.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30.120862082483555 30.10546875" fill="currentColor" aria-hidden="true">
  <path d="M13.6938 21.0327L16.2238 18.5027C14.8838 18.3527 13.7538 17.8527 13.0138 17.1127C10.8138 14.9127 10.8138 11.8427 12.9838 9.6627L17.6638 4.9927C19.8538 2.8127 22.9138 2.8127 25.1138 4.9927C27.3138 7.2127 27.3138 10.2727 25.1238 12.4527L23.3738 14.2127C23.8938 15.4327 24.1338 16.9827 23.7338 18.3427L27.4938 14.6127C31.0038 11.1227 30.9938 6.1427 27.4838 2.6327C23.9538 -0.8773 19.0038 -0.8673 15.5138 2.6227L10.6238 7.5127C7.1338 11.0027 7.1238 15.9627 10.6338 19.4727C11.3338 20.1727 12.3838 20.7627 13.6938 21.0327ZM16.4338 9.0727L13.8938 11.6027C15.2438 11.7527 16.3638 12.2527 17.1038 12.9927C19.3038 15.1927 19.3138 18.2727 17.1338 20.4427L12.4538 25.1127C10.2638 27.2927 7.2038 27.2927 5.0138 25.1127C2.8038 22.8927 2.8038 19.8427 4.9838 17.6527L6.7338 15.9027C6.2238 14.6927 5.9838 13.1227 6.3838 11.7627L2.6238 15.5127C-0.8762 18.9827 -0.8762 23.9627 2.6338 27.4727C6.1638 30.9827 11.1138 30.9727 14.6038 27.4827L19.4938 22.5927C22.9838 19.1027 22.9938 14.1427 19.4838 10.6327C18.7838 9.9427 17.7338 9.3427 16.4338 9.0727Z"/>
</svg>
</file>

<file path="dieter/icons/svg/minus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.40625 4.142578125" fill="currentColor" aria-hidden="true">
  <path d="M2.0337 4.1419H21.3537C22.4537 4.1419 23.4037 3.2019 23.4037 2.0619C23.4037 0.9419 22.4537 0.0019 21.3537 0.0019H2.0337C0.9937 0.0019 0.0037 0.9419 0.0037 2.0619C0.0037 3.2019 0.9937 4.1419 2.0337 4.1419Z"/>
</svg>
</file>

<file path="dieter/icons/svg/paperclip.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.506760745330002 30.83056564117573" fill="currentColor" aria-hidden="true">
  <path d="M22.8357 15.8659L12.6757 26.0159C10.1757 28.5259 6.8357 28.3059 4.6857 26.1459C2.5157 23.9859 2.3157 20.6659 4.8157 18.1459L18.7857 4.2059C20.1757 2.7959 22.3157 2.4559 23.7257 3.8659C25.1457 5.2959 24.7857 7.4059 23.3957 8.7959L9.5957 22.6159C9.1057 23.1159 8.5357 22.9759 8.1857 22.6459C7.8657 22.3059 7.7257 21.7359 8.2157 21.2359L17.8157 11.6459C18.4057 11.0559 18.4257 10.1759 17.8557 9.6059C17.2857 9.0559 16.4057 9.0559 15.8157 9.6459L6.1757 19.2859C4.5957 20.8859 4.6657 23.3359 6.0857 24.7559C7.6157 26.2859 9.9557 26.2459 11.5357 24.6559L25.4157 10.7759C28.2057 7.9959 28.1257 4.3159 25.6457 1.8359C23.2157 -0.5841 19.4857 -0.7141 16.6957 2.0559L2.6257 16.1359C-0.9743 19.7459 -0.7543 24.9759 2.5457 28.2759C5.8657 31.5759 11.0857 31.8059 14.6957 28.2159L24.9257 17.9759C25.4857 17.4259 25.4857 16.3859 24.8957 15.8359C24.3457 15.2559 23.4057 15.3059 22.8357 15.8659Z"/>
</svg>
</file>

<file path="dieter/icons/svg/paperplane.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29.4765625 29.4765625" fill="currentColor" aria-hidden="true">
  <path d="M17.5282 29.4764C18.6882 29.4764 19.4982 28.6064 19.9982 27.2764L29.1382 3.3764C29.3582 2.8064 29.4782 2.2864 29.4782 1.8364C29.4782 0.7264 28.7482 -0.0036 27.6482 -0.0036C27.1782 -0.0036 26.6582 0.1264 26.0982 0.3464L2.1282 9.5064C0.8982 9.9764 -0.0018 10.7764 -0.0018 11.9464C-0.0018 13.3264 0.9982 13.9464 2.4082 14.3564L12.2382 17.2364L15.0982 27.0064C15.5182 28.4364 16.1282 29.4764 17.5282 29.4764ZM13.2982 14.0564L6.2182 11.8764C6.0682 11.8364 6.0182 11.7764 6.0182 11.6864C6.0182 11.6064 6.0682 11.5364 6.2082 11.4864L19.0082 6.5264C20.2982 6.0064 21.5782 5.4164 23.1582 4.6864C22.0382 5.5964 20.7082 6.6964 19.7582 7.6464ZM17.7982 23.4764C17.7082 23.4764 17.6482 23.4064 17.6082 23.2464L15.4182 16.1764L21.8382 9.7364C22.7382 8.8064 23.9282 7.3964 24.7882 6.3064C24.0782 7.8864 23.4782 9.1764 22.9682 10.4764L17.9882 23.2664C17.9482 23.4064 17.8782 23.4764 17.7982 23.4764Z"/>
</svg>
</file>

<file path="dieter/icons/svg/party-popper.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36.749139892045925 35.328048033378394" fill="currentColor" aria-hidden="true">
  <path d="M13.2728 3.688C14.3028 3.688 15.1228 2.868 15.1228 1.858C15.1228 0.838 14.3028 -0.002 13.2728 -0.002C12.2328 -0.002 11.4328 0.838 11.4328 1.858C11.4328 2.868 12.2328 3.688 13.2728 3.688ZM21.9828 5.878C23.5928 5.878 24.8828 4.578 24.8828 2.968C24.8828 1.338 23.5928 0.068 21.9828 0.068C20.3528 0.068 19.0728 1.338 19.0728 2.968C19.0728 4.578 20.3528 5.878 21.9828 5.878ZM33.5128 4.078C34.3528 4.078 35.0428 3.388 35.0428 2.528C35.0428 1.668 34.3528 0.968 33.5128 0.968C32.6328 0.968 31.9528 1.668 31.9528 2.528C31.9528 3.388 32.6328 4.078 33.5128 4.078ZM29.1428 4.608L26.6028 7.148C26.1128 7.668 26.1128 8.488 26.6028 8.998C27.1128 9.498 27.9428 9.498 28.4528 9.008L30.9928 6.468C31.4828 5.958 31.4828 5.128 30.9928 4.608C30.4628 4.118 29.6428 4.128 29.1428 4.608ZM22.9728 27.128C25.0228 26.278 25.2328 24.368 24.5528 22.228C26.2328 22.208 27.9028 22.358 29.5828 22.668C30.3128 22.848 30.9628 22.148 30.9628 21.408C30.9628 20.698 30.3928 20.248 29.7328 20.098C27.6128 19.698 25.5128 19.568 23.3928 19.678C22.7228 18.528 21.9028 17.408 21.0628 16.448L25.6728 11.858C26.1228 11.378 26.1628 10.538 25.6728 10.038C25.1528 9.518 24.3228 9.558 23.8428 10.018L19.2328 14.598C18.2628 13.738 17.1528 12.888 16.0128 12.208C16.1228 10.128 15.9728 8.048 15.5828 5.958C15.4328 5.308 14.9928 4.748 14.2828 4.748C13.5628 4.748 12.8528 5.378 13.0128 6.128C13.3328 7.748 13.4828 9.388 13.4828 11.038C11.4328 10.388 9.5828 10.678 8.6128 12.798L0.3228 31.188C-0.8772 33.878 1.4328 36.148 4.0628 35.038ZM19.3828 10.388C20.2628 10.388 20.9428 9.698 20.9428 8.818C20.9428 7.988 20.2628 7.278 19.3828 7.278C18.5428 7.278 17.8428 7.968 17.8428 8.818C17.8428 9.698 18.5428 10.388 19.3828 10.388ZM28.7528 17.418C30.1428 17.418 31.2828 16.328 31.2828 14.928C31.2828 13.538 30.1628 12.398 28.7528 12.398C27.3528 12.398 26.2628 13.538 26.2628 14.928C26.2628 16.328 27.3528 17.418 28.7528 17.418ZM34.9028 16.858C35.9128 16.858 36.7528 16.048 36.7528 15.008C36.7528 13.988 35.9128 13.168 34.9028 13.168C33.8528 13.168 33.0428 13.988 33.0428 15.008C33.0428 16.048 33.8628 16.858 34.9028 16.858ZM11.2828 13.648C11.5928 13.318 12.3128 13.368 13.3028 13.808C13.2328 14.438 13.1428 15.078 13.0128 15.718C12.8528 16.478 13.5528 17.078 14.2728 17.088C14.9428 17.088 15.4328 16.588 15.5828 15.878C15.6128 15.668 15.6528 15.448 15.6928 15.248C16.2028 15.628 16.7228 16.068 17.2828 16.558L16.7028 17.128C16.2028 17.638 16.2128 18.468 16.7028 18.978C17.2128 19.468 18.0428 19.478 18.5528 18.978L19.1228 18.398C19.6328 18.948 20.0728 19.478 20.4528 19.988C20.2428 20.028 20.0428 20.068 19.8228 20.098C19.1228 20.258 18.6228 20.758 18.6228 21.408C18.6228 22.138 19.2328 22.828 19.9728 22.698C20.6328 22.568 21.2728 22.458 21.9328 22.398C22.3828 23.418 22.4328 24.168 22.1028 24.488C21.3728 25.248 18.4428 24.008 15.1028 20.658C11.7528 17.308 10.5128 14.378 11.2828 13.648ZM3.0928 31.728L9.4628 17.598C10.2428 19.238 11.5428 20.998 13.1528 22.618C14.7128 24.188 16.4328 25.448 18.0228 26.218L3.5528 32.228C3.1828 32.388 2.8928 32.138 3.0928 31.728ZM34.1528 24.018C35.1628 24.018 35.9828 23.198 35.9828 22.178C35.9828 21.148 35.1628 20.328 34.1528 20.328C33.1228 20.328 32.3028 21.148 32.3028 22.178C32.3028 23.198 33.1228 24.018 34.1528 24.018Z"/>
</svg>
</file>

<file path="dieter/icons/svg/pause.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.4921875 23.7890625" fill="currentColor" aria-hidden="true">
  <path d="M2.0737 23.792C3.2637 23.792 4.1537 22.932 4.1537 21.762V2.012C4.1537 0.862 3.2637 0.002 2.0737 0.002C0.8937 0.002 0.0037 0.862 0.0037 2.012V21.762C0.0037 22.932 0.8937 23.792 2.0737 23.792ZM12.4137 23.792C13.6037 23.792 14.4937 22.932 14.4937 21.762V2.012C14.4937 0.862 13.6037 0.002 12.4137 0.002C11.2237 0.002 10.3337 0.862 10.3337 2.012V21.762C10.3337 22.932 11.2237 23.792 12.4137 23.792Z"/>
</svg>
</file>

<file path="dieter/icons/svg/person-2.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 38.759765625 25.921875" fill="currentColor" aria-hidden="true">
  <path d="M26.6037 13.0959C29.9937 13.0959 32.7337 10.1459 32.7337 6.4759C32.7337 2.8959 29.9837 -0.0041 26.6037 -0.0041C23.2437 -0.0041 20.4837 2.9159 20.4937 6.4959C20.5037 10.1459 23.2137 13.0959 26.6037 13.0959ZM10.6137 13.2859C13.5637 13.2859 15.9537 10.6959 15.9537 7.4659C15.9537 4.3359 13.5537 1.7659 10.6137 1.7659C7.6737 1.7659 5.2537 4.3659 5.2537 7.4759C5.2637 10.7059 7.6437 13.2859 10.6137 13.2859ZM26.6037 10.1959C24.8937 10.1959 23.4637 8.5959 23.4637 6.4759C23.4437 4.4659 24.9137 2.8859 26.6037 2.8859C28.3237 2.8859 29.7537 4.4559 29.7537 6.4759C29.7537 8.5759 28.3237 10.1959 26.6037 10.1959ZM10.6137 10.4459C9.2537 10.4459 8.1037 9.1459 8.1037 7.4759C8.0937 5.9059 9.2537 4.6059 10.6137 4.6059C11.9637 4.6059 13.1137 5.8759 13.1137 7.4659C13.1137 9.1459 11.9737 10.4459 10.6137 10.4459ZM3.2137 25.9259H13.6437C12.7537 25.3759 12.2537 24.1159 12.3637 23.0759H3.4037C3.1737 23.0759 3.0937 22.9559 3.0937 22.7759C3.0937 20.0559 6.4637 17.3359 10.5937 17.3359C11.8237 17.3359 13.3337 17.6659 14.3037 18.1459C14.7937 17.2959 15.4737 16.5659 16.4337 15.9859C14.7537 15.0559 12.5237 14.5059 10.5937 14.5059C4.7437 14.5059 0.0037 18.6059 0.0037 23.1459C0.0037 24.9559 1.0637 25.9259 3.2137 25.9259ZM18.1937 25.9059H35.0137C37.5137 25.9059 38.7637 25.0559 38.7637 23.2859C38.7637 19.2659 33.7937 14.5159 26.6037 14.5159C19.4037 14.5159 14.4537 19.2659 14.4537 23.2859C14.4537 25.0559 15.6937 25.9059 18.1937 25.9059ZM18.0837 23.0259C17.8237 23.0259 17.7437 22.9159 17.7437 22.7059C17.7437 20.8759 20.9737 17.4059 26.6037 17.4059C32.2337 17.4059 35.4637 20.8759 35.4637 22.7059C35.4637 22.9159 35.3837 23.0259 35.1137 23.0259Z"/>
</svg>
</file>

<file path="dieter/icons/svg/person.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24.30859375 25.908203125" fill="currentColor" aria-hidden="true">
  <path d="M12.1537 13.0959C15.5437 13.0959 18.2837 10.1459 18.2837 6.4759C18.2837 2.8959 15.5337 -0.0041 12.1537 -0.0041C8.7937 -0.0041 6.0337 2.9159 6.0437 6.4959C6.0537 10.1459 8.7637 13.0959 12.1537 13.0959ZM12.1537 10.1959C10.4437 10.1959 9.0237 8.6559 9.0137 6.4759C8.9937 4.4059 10.4637 2.8859 12.1537 2.8859C13.8737 2.8859 15.3037 4.3859 15.3037 6.4759C15.3037 8.6359 13.8737 10.1959 12.1537 10.1959ZM3.7437 25.9059H20.5637C23.0637 25.9059 24.3037 25.0559 24.3037 23.2859C24.3037 19.2659 19.3437 14.5159 12.1537 14.5159C4.9537 14.5159 0.0037 19.2659 0.0037 23.2859C0.0037 25.0559 1.2437 25.9059 3.7437 25.9059ZM3.6337 23.0259C3.3737 23.0259 3.2937 22.9159 3.2937 22.7059C3.2937 20.8759 6.5237 17.4059 12.1537 17.4059C17.7837 17.4059 21.0137 20.8759 21.0137 22.7059C21.0137 22.9159 20.9337 23.0259 20.6537 23.0259Z"/>
</svg>
</file>

<file path="dieter/icons/svg/personalhotspot.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40.33203125 23.5703125" fill="currentColor" aria-hidden="true">
  <path d="M8.4527 16.9379H9.2427C9.0927 15.8279 9.0327 14.6879 9.2327 13.7379H8.6127C5.5127 13.7379 3.3527 11.5779 3.3527 8.4579C3.3527 5.3579 5.5227 3.1879 8.6127 3.1879H20.6327C23.7027 3.1879 25.8927 5.3579 25.8927 8.4579C25.8927 11.5779 23.7227 13.7379 20.6327 13.7379H16.9527C16.2427 14.3579 16.2827 16.1879 17.1127 16.9379H20.7827C25.7327 16.9379 29.2327 13.4379 29.2327 8.4579C29.2327 3.4979 25.7327 -0.0021 20.7827 -0.0021H8.4527C3.5127 -0.0021 0.0027 3.4979 0.0027 8.4579C0.0027 13.4379 3.5127 16.9379 8.4527 16.9379ZM19.5527 23.5679H31.8827C36.8227 23.5679 40.3327 20.0679 40.3327 15.1079C40.3327 10.1279 36.8227 6.6279 31.8827 6.6279H31.0927C31.2527 7.7279 31.2927 8.8779 31.1027 9.8279H31.7227C34.8227 9.8279 36.9827 11.9879 36.9827 15.1079C36.9827 18.2079 34.8127 20.3879 31.7227 20.3879H19.7027C16.6227 20.3879 14.4327 18.2079 14.4327 15.1079C14.4327 11.9879 16.6127 9.8279 19.7027 9.8279H23.3827C24.0127 9.1279 23.9627 7.3779 23.2027 6.6279H19.5527C14.6027 6.6279 11.1027 10.1279 11.1027 15.1079C11.1027 20.0679 14.6027 23.5679 19.5527 23.5679Z"/>
</svg>
</file>

<file path="dieter/icons/svg/play.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22.5859375 25.224609375" fill="currentColor" aria-hidden="true">
  <path d="M2.3237 25.2229C2.9537 25.2229 3.5237 25.0229 4.2937 24.5829L20.7037 15.0629C21.9537 14.3429 22.5837 13.6729 22.5837 12.6029C22.5837 11.5529 21.9537 10.8829 20.7037 10.1429L4.2937 0.6329C3.5237 0.1929 2.9537 0.0029 2.3237 0.0029C1.0437 0.0029 0.0037 0.9729 0.0037 2.6129V22.6029C0.0037 24.2429 1.0437 25.2229 2.3237 25.2229ZM3.8237 20.6129C3.7637 20.6129 3.7237 20.5629 3.7237 20.4829V4.7329C3.7237 4.6329 3.7637 4.5829 3.8237 4.5829C3.8837 4.5829 3.9237 4.6029 3.9937 4.6329L17.5537 12.4729C17.6137 12.5129 17.6537 12.5529 17.6537 12.6029C17.6537 12.6729 17.6137 12.7029 17.5537 12.7429L3.9937 20.5629C3.9237 20.6029 3.8837 20.6129 3.8237 20.6129Z"/>
</svg>
</file>

<file path="dieter/icons/svg/plus.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.4609375 23.474609375" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 11.7316C0.0037 12.8816 0.9337 13.8116 2.0737 13.8116H9.6637V21.3916C9.6637 22.5316 10.5837 23.4716 11.7337 23.4716C12.8837 23.4716 13.8037 22.5316 13.8037 21.3916V13.8116H21.3937C22.5337 13.8116 23.4637 12.8816 23.4637 11.7316C23.4637 10.5916 22.5337 9.6616 21.3937 9.6616H13.8037V2.0816C13.8037 0.9416 12.8837 0.0016 11.7337 0.0016C10.5837 0.0016 9.6637 0.9416 9.6637 2.0816V9.6616H2.0737C0.9337 9.6616 0.0037 10.5916 0.0037 11.7316Z"/>
</svg>
</file>

<file path="dieter/icons/svg/power.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28.875 29.763671875" fill="currentColor" aria-hidden="true">
  <path d="M14.4327 15.6636C15.5827 15.6636 16.3527 14.8436 16.3527 13.6336V2.0336C16.3527 0.8036 15.5827 0.0036 14.4327 0.0036C13.2927 0.0036 12.5227 0.8036 12.5227 2.0336V13.6336C12.5227 14.8436 13.2927 15.6636 14.4327 15.6636ZM14.4327 29.7636C22.3627 29.7636 28.8727 23.2436 28.8727 15.3136C28.8727 11.2936 27.1827 7.6936 24.7327 5.2736C22.9527 3.4436 20.2727 5.6836 22.1327 7.6936C24.0727 9.6436 25.2827 12.3336 25.2827 15.3136C25.2927 21.3236 20.4527 26.1636 14.4327 26.1636C8.4327 26.1636 3.6127 21.3236 3.6127 15.3136C3.6127 12.3136 4.8127 9.6436 6.7527 7.6836C8.6127 5.6736 5.9227 3.4436 4.1527 5.2636C1.6927 7.6936 0.0027 11.2936 0.0027 15.3136C0.0027 23.2436 6.5227 29.7636 14.4327 29.7636Z"/>
</svg>
</file>

<file path="dieter/icons/svg/progress-indicator.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.265625 33.4140625" fill="currentColor" aria-hidden="true">
  <path d="M0.0028 2.7202H25.2628V0.0002H0.0028ZM0.0028 8.8602H25.2628V6.1202H0.0028ZM0.0028 15.0002H25.2628V12.2802H0.0028ZM0.0028 21.1402H25.2628V18.4002H0.0028ZM0.0028 27.2802H25.2628V24.5502H0.0028ZM0.0028 33.4102H25.2628V30.6802H0.0028Z"/>
</svg>
</file>

<file path="dieter/icons/svg/rectangle-and-pencil-and-ellipsis.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 43.740236861188485 27.363502517625186" fill="currentColor" aria-hidden="true">
  <path d="M42.3137 3.9043L43.2337 2.9743C43.8837 2.3143 43.9137 1.3843 43.2837 0.7843L42.8437 0.3443C42.3037 -0.1857 41.3437 -0.0857 40.7237 0.5243L39.8237 1.4243ZM26.8137 17.6043L29.8637 16.3543L41.2037 5.0143L38.7237 2.5343L27.3837 13.8843L26.1037 16.8743C25.9237 17.3243 26.4037 17.7643 26.8137 17.6043ZM4.0837 27.3643H35.0137C37.6237 27.3643 39.0837 25.9143 39.0837 23.3343V10.7943L35.4937 14.4043V22.5643C35.4937 23.5043 34.9337 24.0643 33.9637 24.0643H5.1237C4.1537 24.0643 3.6137 23.5043 3.6137 22.5643V11.3143C3.6137 10.3443 4.1537 9.8043 5.1237 9.8043H27.7037L30.9937 6.5243H4.0837C1.4737 6.5243 0.0037 7.9643 0.0037 10.5643V23.3343C0.0037 25.9143 1.4737 27.3643 4.0837 27.3643ZM8.6437 19.1043C9.8437 19.1043 10.8037 18.1343 10.8037 16.9443C10.8037 15.7443 9.8437 14.7743 8.6437 14.7743C7.4337 14.7743 6.4637 15.7443 6.4637 16.9443C6.4637 18.1343 7.4337 19.1043 8.6437 19.1043ZM14.9337 19.1043C16.1237 19.1043 17.1037 18.1343 17.1037 16.9443C17.1037 15.7443 16.1237 14.7743 14.9337 14.7743C13.7437 14.7743 12.7537 15.7443 12.7537 16.9443C12.7537 18.1343 13.7437 19.1043 14.9337 19.1043ZM21.2237 19.1043C22.4237 19.1043 23.3937 18.1343 23.3937 16.9443C23.3937 15.7443 22.4237 14.7743 21.2237 14.7743C20.0137 14.7743 19.0537 15.7443 19.0537 16.9443C19.0537 18.1343 20.0137 19.1043 21.2237 19.1043Z"/>
</svg>
</file>

<file path="dieter/icons/svg/repeat.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.623046875 27.412109375" fill="currentColor" aria-hidden="true">
  <path d="M1.8437 14.6578C2.8737 14.6578 3.6737 13.8478 3.6737 12.8078V11.7478C3.6737 9.3378 5.2737 7.8578 7.8737 7.8578H18.2837V10.9078C18.2837 11.7578 18.7837 12.2678 19.6237 12.2678C20.0137 12.2678 20.3337 12.1278 20.5937 11.9078L26.3037 7.0978C26.9337 6.5578 26.9437 5.6978 26.3037 5.1678L20.5937 0.3578C20.3337 0.1378 20.0137 -0.0022 19.6237 -0.0022C18.7837 -0.0022 18.2837 0.5178 18.2837 1.3678V4.2678H8.0637C3.0937 4.2678 0.0037 6.9178 0.0037 11.2778V12.8078C0.0037 13.8478 0.8237 14.6578 1.8437 14.6578ZM29.7937 12.7678C28.7637 12.7678 27.9637 13.5878 27.9637 14.6178V15.6778C27.9637 18.0878 26.3437 19.5678 23.7637 19.5678H13.3537V16.5178C13.3537 15.6678 12.8337 15.1478 12.0037 15.1478C11.6237 15.1478 11.2937 15.2878 11.0337 15.5078L5.3137 20.3178C4.6937 20.8678 4.6937 21.7078 5.3137 22.2478L11.0337 27.0578C11.2937 27.2778 11.6237 27.4078 12.0037 27.4078C12.8337 27.4078 13.3537 26.9078 13.3537 26.0578V23.1578H23.5537C28.5337 23.1578 31.6237 20.5078 31.6237 16.1478V14.6178C31.6237 13.5878 30.8137 12.7678 29.7937 12.7678Z"/>
</svg>
</file>

<file path="dieter/icons/svg/sparkles.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26.38671875 31.869140625" fill="currentColor" aria-hidden="true">
  <path d="M12.1109 6.8369C12.3309 6.8369 12.4709 6.6869 12.5109 6.4969C12.8809 4.3069 12.8409 4.2669 15.1909 3.8169C15.4109 3.7769 15.5409 3.6369 15.5409 3.4169C15.5409 3.2169 15.3909 3.0669 15.1909 3.0369C12.8409 2.6569 12.8609 2.5869 12.5109 0.3569C12.4709 0.1469 12.3309 -0.0031 12.1109 -0.0031C11.8909 -0.0031 11.7609 0.1469 11.7309 0.3669C11.3909 2.5269 11.4009 2.5869 9.0409 3.0369C8.8309 3.0769 8.6909 3.2169 8.6909 3.4169C8.6909 3.6369 8.8309 3.7769 9.0609 3.8169C11.3909 4.2269 11.3709 4.2769 11.7309 6.4769C11.7609 6.6869 11.8909 6.8369 12.1109 6.8369ZM5.4709 16.6569C5.7809 16.6569 6.0409 16.4169 6.0809 16.1069C6.5509 12.5269 6.6309 12.4969 10.3909 11.8169C10.7009 11.7569 10.9409 11.5269 10.9409 11.1969C10.9409 10.8669 10.7009 10.6269 10.3909 10.5869C6.6609 10.0769 6.5509 9.9769 6.0809 6.3169C6.0409 5.9769 5.8009 5.7469 5.4709 5.7469C5.1409 5.7469 4.8909 5.9769 4.8509 6.3269C4.4209 9.8869 4.2909 9.8969 0.5509 10.5869C0.2309 10.6369 0.0009 10.8669 0.0009 11.1969C0.0009 11.5369 0.2309 11.7569 0.6109 11.8169C4.2909 12.3769 4.4209 12.4969 4.8509 16.0669C4.8909 16.4169 5.1409 16.6569 5.4709 16.6569ZM15.2609 31.8669C15.7909 31.8669 16.2009 31.4869 16.3009 30.9269C17.2909 23.6669 18.3109 22.5969 25.4009 21.7969C25.9809 21.7369 26.3909 21.2869 26.3909 20.7369C26.3909 20.2069 25.9809 19.7669 25.4209 19.6869C18.3309 18.8169 17.3909 17.8169 16.3009 10.5669C16.2009 10.0069 15.7809 9.6269 15.2609 9.6269C14.7209 9.6269 14.3009 10.0069 14.2209 10.5669C13.2109 17.8169 12.1909 18.8969 5.1109 19.6869C4.5409 19.7569 4.1309 20.1969 4.1309 20.7369C4.1309 21.2869 4.5209 21.7069 5.1009 21.7969C12.1709 22.7669 13.0809 23.6669 14.2209 30.9269C14.3109 31.4869 14.7209 31.8669 15.2609 31.8669Z"/>
</svg>
</file>

<file path="dieter/icons/svg/square-and-arrow-up-on-square.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32.798828125 39.033203125" fill="currentColor" aria-hidden="true">
  <path d="M12.7437 20.7992C13.6337 20.7992 14.3237 20.0692 14.3237 19.2392V5.9192L14.1937 3.9192L14.9037 4.9792L16.5537 6.7392C16.8137 7.0292 17.1837 7.1892 17.5837 7.1892C18.3037 7.1892 18.9537 6.6492 18.9537 5.8692C18.9537 5.4692 18.8037 5.1792 18.5237 4.9092L14.0037 0.5492C13.5737 0.1392 13.1637 -0.0008 12.7437 -0.0008C12.3137 -0.0008 11.9037 0.1392 11.4937 0.5492L6.9637 4.9092C6.6837 5.1792 6.5337 5.4692 6.5337 5.8692C6.5337 6.6492 7.1737 7.1892 7.9037 7.1892C8.2837 7.1892 8.6637 7.0292 8.9237 6.7392L10.5837 4.9792L11.2937 3.9192L11.1737 5.9192V19.2392C11.1737 20.0692 11.8637 20.7992 12.7437 20.7992ZM4.8237 32.0292H8.3837V34.2392C8.3837 37.3392 10.0937 39.0292 13.2037 39.0292H27.9737C31.0937 39.0292 32.8037 37.3392 32.8037 34.2392V20.0792C32.8037 16.9792 31.0937 15.2892 27.9737 15.2892H25.4837V14.1092C25.4837 11.0092 23.7937 9.3092 20.6537 9.3092H17.1437V12.8392H20.2737C21.3737 12.8392 21.9537 13.3692 21.9537 14.5292V26.7992C21.9537 27.9592 21.3737 28.5092 20.2737 28.5092H5.2137C4.1137 28.5092 3.5237 27.9592 3.5237 26.7992V14.5292C3.5237 13.3692 4.1137 12.8392 5.2137 12.8392H8.4037V9.3092H4.8237C1.7137 9.3092 0.0037 11.0092 0.0037 14.1092V27.2392C0.0037 30.3392 1.7137 32.0292 4.8237 32.0292ZM13.6037 35.5092C12.5137 35.5092 11.9037 34.9692 11.9037 33.8092V32.0292H20.6537C23.7937 32.0292 25.4837 30.3292 25.4837 27.2392V18.8092H27.5737C28.6837 18.8092 29.2737 19.3492 29.2737 20.5092V33.8092C29.2737 34.9692 28.6837 35.5092 27.5737 35.5092Z"/>
</svg>
</file>

<file path="dieter/icons/svg/square-and-arrow-up.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.484375 32.046875" fill="currentColor" aria-hidden="true">
  <path d="M12.7437 20.808C13.6337 20.808 14.3237 20.088 14.3237 19.248V5.938L14.1937 3.938L14.9037 4.988L16.5537 6.738C16.8137 7.038 17.1837 7.188 17.5837 7.188C18.3037 7.188 18.9537 6.658 18.9537 5.878C18.9537 5.478 18.8037 5.198 18.5237 4.918L14.0037 0.558C13.5737 0.148 13.1637 -0.002 12.7437 -0.002C12.3137 -0.002 11.9037 0.148 11.4937 0.558L6.9637 4.918C6.6837 5.198 6.5337 5.478 6.5337 5.878C6.5337 6.658 7.1737 7.188 7.9037 7.188C8.2837 7.188 8.6637 7.038 8.9237 6.738L10.5837 4.988L11.2937 3.928L11.1737 5.938V19.248C11.1737 20.088 11.8637 20.808 12.7437 20.808ZM4.8237 32.048H20.6537C23.7937 32.048 25.4837 30.338 25.4837 27.248V14.108C25.4837 11.018 23.7937 9.328 20.6537 9.328H17.1437V12.848H20.2737C21.3737 12.848 21.9537 13.388 21.9537 14.548V26.808C21.9537 27.968 21.3737 28.508 20.2737 28.508H5.2137C4.1137 28.508 3.5237 27.968 3.5237 26.808V14.548C3.5237 13.388 4.1137 12.848 5.2137 12.848H8.4037V9.328H4.8237C1.7137 9.328 0.0037 11.008 0.0037 14.108V27.248C0.0037 30.348 1.7137 32.048 4.8237 32.048Z"/>
</svg>
</file>

<file path="dieter/icons/svg/stop.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.501953125 23.48828125" fill="currentColor" aria-hidden="true">
  <path d="M0.0037 19.9652C0.0037 22.1452 1.3637 23.4852 3.6537 23.4852H19.8337C22.1337 23.4852 23.5037 22.1452 23.5037 19.9652V3.5252C23.5037 1.3552 22.1337 -0.0048 19.8337 -0.0048H3.6537C1.3637 -0.0048 0.0037 1.3552 0.0037 3.5252ZM3.5237 18.7552V4.7352C3.5237 3.9352 3.9937 3.4752 4.7837 3.4752H18.8437C19.6237 3.4752 20.0837 3.9352 20.0837 4.7352V18.7552C20.0837 19.5652 19.6237 20.0252 18.8437 20.0252H4.7837C3.9937 20.0252 3.5237 19.5652 3.5237 18.7552Z"/>
</svg>
</file>

<file path="dieter/icons/svg/sun-max.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.8828125 31.8828125" fill="currentColor" aria-hidden="true">
  <path d="M15.9427 6.0325C16.8527 6.0325 17.6227 5.2625 17.6227 4.3525V1.6825C17.6227 0.7625 16.8527 0.0025 15.9427 0.0025C15.0227 0.0025 14.2627 0.7625 14.2627 1.6825V4.3525C14.2627 5.2625 15.0227 6.0325 15.9427 6.0325ZM22.9527 8.9825C23.5827 9.6125 24.6827 9.6125 25.3327 8.9525L27.2227 7.0725C27.8527 6.4225 27.8327 5.3325 27.1927 4.6725C26.5627 4.0425 25.4727 4.0625 24.8327 4.7025L22.9327 6.6025C22.3027 7.2425 22.3027 8.3425 22.9527 8.9825ZM8.9127 8.9825C9.5727 8.3425 9.5727 7.2325 8.9527 6.6025L7.0727 4.7025C6.4227 4.0725 5.3327 4.0425 4.6927 4.6725C4.0427 5.3325 4.0327 6.4225 4.6627 7.0525L6.5527 8.9525C7.1927 9.6125 8.2827 9.6125 8.9127 8.9825ZM15.9427 23.5025C20.0727 23.5025 23.4927 20.0825 23.4927 15.9425C23.4927 11.8025 20.0727 8.3825 15.9427 8.3825C11.8027 8.3825 8.3827 11.8025 8.3827 15.9425C8.3827 20.0825 11.8027 23.5025 15.9427 23.5025ZM15.9427 20.1625C13.6327 20.1625 11.7027 18.2525 11.7027 15.9425C11.7027 13.6325 13.6327 11.7025 15.9427 11.7025C18.2427 11.7025 20.1627 13.6325 20.1627 15.9425C20.1627 18.2525 18.2427 20.1625 15.9427 20.1625ZM25.8527 15.9425C25.8527 16.8525 26.6227 17.6225 27.5327 17.6225H30.2027C31.1127 17.6225 31.8827 16.8525 31.8827 15.9425C31.8827 15.0225 31.1127 14.2625 30.2027 14.2625H27.5327C26.6227 14.2625 25.8527 15.0225 25.8527 15.9425ZM6.0327 15.9425C6.0327 15.0225 5.2627 14.2625 4.3427 14.2625H1.6827C0.7627 14.2625 0.0027 15.0225 0.0027 15.9425C0.0027 16.8525 0.7627 17.6225 1.6827 17.6225H4.3427C5.2627 17.6225 6.0327 16.8525 6.0327 15.9425ZM22.9327 22.9325C22.3027 23.5725 22.3027 24.6525 22.9527 25.3025L24.8527 27.2025C25.4827 27.8325 26.5827 27.8225 27.2327 27.1625C27.8627 26.5325 27.8627 25.4425 27.2027 24.8025L25.3027 22.9125C24.6627 22.2825 23.5727 22.2825 22.9327 22.9325ZM8.9527 22.9325C8.3027 22.2825 7.2027 22.2825 6.5627 22.9125L4.6627 24.7825C4.0227 25.4325 4.0027 26.5225 4.6327 27.1625C5.2927 27.8125 6.3827 27.8225 7.0227 27.1925L8.9127 25.3025C9.5727 24.6525 9.5727 23.5725 8.9527 22.9325ZM15.9427 25.8425C15.0227 25.8425 14.2627 26.6025 14.2627 27.5225V30.2025C14.2627 31.1125 15.0227 31.8825 15.9427 31.8825C16.8527 31.8825 17.6227 31.1125 17.6227 30.2025V27.5225C17.6227 26.6025 16.8527 25.8425 15.9427 25.8425Z"/>
</svg>
</file>

<file path="dieter/icons/svg/trash.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27.822265625 31.568359375" fill="currentColor" aria-hidden="true">
  <path d="M7.5982 31.572H20.2182C22.5582 31.572 23.9982 30.272 24.1082 27.932L25.0082 8.542H26.2782C27.1682 8.542 27.8182 7.912 27.8182 7.042C27.8182 6.182 27.1482 5.552 26.2782 5.552H20.4782V3.572C20.4782 1.282 19.0482 0.002 16.4982 0.002H11.2882C8.7482 0.002 7.3282 1.282 7.3282 3.572V5.552H1.5282C0.6682 5.552 -0.0018 6.182 -0.0018 7.042C-0.0018 7.912 0.6682 8.542 1.5282 8.542H2.8182L3.7182 27.932C3.8282 30.282 5.2482 31.572 7.5982 31.572ZM10.4682 3.682C10.4682 3.092 10.8782 2.732 11.5282 2.732H16.2682C16.9282 2.732 17.3382 3.092 17.3382 3.682V5.552H10.4682ZM8.0082 28.522C7.2982 28.522 6.8382 28.012 6.7982 27.212L5.9182 8.542H21.8782L21.0182 27.212C20.9882 28.032 20.5182 28.522 19.7982 28.522ZM9.9082 26.542C10.5982 26.542 11.0182 26.102 11.0082 25.472L10.5982 11.662C10.5782 11.022 10.1282 10.612 9.4882 10.612C8.8182 10.612 8.3982 11.032 8.4182 11.672L8.8182 25.482C8.8282 26.112 9.2882 26.542 9.9082 26.542ZM13.9082 26.542C14.5582 26.542 15.0082 26.112 15.0082 25.482V11.652C15.0082 11.022 14.5582 10.612 13.9082 10.612C13.2582 10.612 12.8082 11.022 12.8082 11.652V25.482C12.8082 26.112 13.2582 26.542 13.9082 26.542ZM17.9082 26.542C18.5382 26.542 18.9782 26.122 18.9882 25.482L19.3982 11.672C19.4182 11.032 18.9882 10.612 18.3382 10.612C17.6782 10.612 17.2382 11.022 17.2282 11.662L16.8182 25.472C16.7982 26.102 17.2282 26.542 17.9082 26.542Z"/>
</svg>
</file>

<file path="dieter/icons/icons.json">
{
  "version": "4.0",
  "precision": 2,
  "fontSize": 28,
  "symbols": {
    "square.and.arrow.up": {
      "bold": {
        "path": "M12.7437 20.808C13.6337 20.808 14.3237 20.088 14.3237 19.248V5.938L14.1937 3.938L14.9037 4.988L16.5537 6.738C16.8137 7.038 17.1837 7.188 17.5837 7.188C18.3037 7.188 18.9537 6.658 18.9537 5.878C18.9537 5.478 18.8037 5.198 18.5237 4.918L14.0037 0.558C13.5737 0.148 13.1637 -0.002 12.7437 -0.002C12.3137 -0.002 11.9037 0.148 11.4937 0.558L6.9637 4.918C6.6837 5.198 6.5337 5.478 6.5337 5.878C6.5337 6.658 7.1737 7.188 7.9037 7.188C8.2837 7.188 8.6637 7.038 8.9237 6.738L10.5837 4.988L11.2937 3.928L11.1737 5.938V19.248C11.1737 20.088 11.8637 20.808 12.7437 20.808ZM4.8237 32.048H20.6537C23.7937 32.048 25.4837 30.338 25.4837 27.248V14.108C25.4837 11.018 23.7937 9.328 20.6537 9.328H17.1437V12.848H20.2737C21.3737 12.848 21.9537 13.388 21.9537 14.548V26.808C21.9537 27.968 21.3737 28.508 20.2737 28.508H5.2137C4.1137 28.508 3.5237 27.968 3.5237 26.808V14.548C3.5237 13.388 4.1137 12.848 5.2137 12.848H8.4037V9.328H4.8237C1.7137 9.328 0.0037 11.008 0.0037 14.108V27.248C0.0037 30.348 1.7137 32.048 4.8237 32.048Z",
        "geometry": {
          "width": 25.484375,
          "height": 32.046875
        }
      }
    },
    "square.and.arrow.up.on.square": {
      "bold": {
        "path": "M12.7437 20.7992C13.6337 20.7992 14.3237 20.0692 14.3237 19.2392V5.9192L14.1937 3.9192L14.9037 4.9792L16.5537 6.7392C16.8137 7.0292 17.1837 7.1892 17.5837 7.1892C18.3037 7.1892 18.9537 6.6492 18.9537 5.8692C18.9537 5.4692 18.8037 5.1792 18.5237 4.9092L14.0037 0.5492C13.5737 0.1392 13.1637 -0.0008 12.7437 -0.0008C12.3137 -0.0008 11.9037 0.1392 11.4937 0.5492L6.9637 4.9092C6.6837 5.1792 6.5337 5.4692 6.5337 5.8692C6.5337 6.6492 7.1737 7.1892 7.9037 7.1892C8.2837 7.1892 8.6637 7.0292 8.9237 6.7392L10.5837 4.9792L11.2937 3.9192L11.1737 5.9192V19.2392C11.1737 20.0692 11.8637 20.7992 12.7437 20.7992ZM4.8237 32.0292H8.3837V34.2392C8.3837 37.3392 10.0937 39.0292 13.2037 39.0292H27.9737C31.0937 39.0292 32.8037 37.3392 32.8037 34.2392V20.0792C32.8037 16.9792 31.0937 15.2892 27.9737 15.2892H25.4837V14.1092C25.4837 11.0092 23.7937 9.3092 20.6537 9.3092H17.1437V12.8392H20.2737C21.3737 12.8392 21.9537 13.3692 21.9537 14.5292V26.7992C21.9537 27.9592 21.3737 28.5092 20.2737 28.5092H5.2137C4.1137 28.5092 3.5237 27.9592 3.5237 26.7992V14.5292C3.5237 13.3692 4.1137 12.8392 5.2137 12.8392H8.4037V9.3092H4.8237C1.7137 9.3092 0.0037 11.0092 0.0037 14.1092V27.2392C0.0037 30.3392 1.7137 32.0292 4.8237 32.0292ZM13.6037 35.5092C12.5137 35.5092 11.9037 34.9692 11.9037 33.8092V32.0292H20.6537C23.7937 32.0292 25.4837 30.3292 25.4837 27.2392V18.8092H27.5737C28.6837 18.8092 29.2737 19.3492 29.2737 20.5092V33.8092C29.2737 34.9692 28.6837 35.5092 27.5737 35.5092Z",
        "geometry": {
          "width": 32.798828125,
          "height": 39.033203125
        }
      }
    },
    "eraser": {
      "bold": {
        "path": "M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421Z",
        "geometry": {
          "width": 29.61962396511093,
          "height": 29.626643659003065
        }
      }
    },
    "eraser.line.dashed": {
      "bold": {
        "path": "M1.7717 21.9021L7.7317 27.8421C10.0417 30.1521 12.7517 30.2221 14.9517 28.0221L28.4717 14.4921C30.0117 12.9421 30.0017 10.8921 28.4317 9.3321L20.2917 1.1821C18.7217 -0.3779 16.6717 -0.3979 15.1417 1.1421L1.6017 14.6821C-0.5983 16.8621 -0.5283 19.5821 1.7717 21.9021ZM17.2017 4.0721C17.4817 3.7721 17.8717 3.7721 18.1617 4.0521L25.5717 11.4621C25.8417 11.7421 25.8317 12.1221 25.5617 12.4221L16.2717 21.6921L7.9217 13.3421ZM4.3817 19.5221C3.5617 18.6821 3.5017 17.7721 4.2417 17.0121L5.8217 15.4421L14.1717 23.8021L12.6017 25.3721C11.8617 26.1221 10.9317 26.0521 10.1117 25.2421ZM16.5517 28.7721H25.9417C26.9117 28.7721 27.7017 27.9821 27.7017 27.0121C27.7017 26.0421 26.9117 25.2421 25.9417 25.2421H20.0717ZM31.4517 28.7721H37.9417C38.9117 28.7721 39.7117 27.9821 39.7117 27.0121C39.7117 26.0421 38.9117 25.2421 37.9417 25.2421H31.4517C30.4817 25.2421 29.6917 26.0421 29.6917 27.0121C29.6917 27.9821 30.4817 28.7721 31.4517 28.7721Z",
        "geometry": {
          "width": 39.70937776856488,
          "height": 29.626643659003065
        }
      }
    },
    "rectangle.and.pencil.and.ellipsis": {
      "bold": {
        "path": "M42.3137 3.9043L43.2337 2.9743C43.8837 2.3143 43.9137 1.3843 43.2837 0.7843L42.8437 0.3443C42.3037 -0.1857 41.3437 -0.0857 40.7237 0.5243L39.8237 1.4243ZM26.8137 17.6043L29.8637 16.3543L41.2037 5.0143L38.7237 2.5343L27.3837 13.8843L26.1037 16.8743C25.9237 17.3243 26.4037 17.7643 26.8137 17.6043ZM4.0837 27.3643H35.0137C37.6237 27.3643 39.0837 25.9143 39.0837 23.3343V10.7943L35.4937 14.4043V22.5643C35.4937 23.5043 34.9337 24.0643 33.9637 24.0643H5.1237C4.1537 24.0643 3.6137 23.5043 3.6137 22.5643V11.3143C3.6137 10.3443 4.1537 9.8043 5.1237 9.8043H27.7037L30.9937 6.5243H4.0837C1.4737 6.5243 0.0037 7.9643 0.0037 10.5643V23.3343C0.0037 25.9143 1.4737 27.3643 4.0837 27.3643ZM8.6437 19.1043C9.8437 19.1043 10.8037 18.1343 10.8037 16.9443C10.8037 15.7443 9.8437 14.7743 8.6437 14.7743C7.4337 14.7743 6.4637 15.7443 6.4637 16.9443C6.4637 18.1343 7.4337 19.1043 8.6437 19.1043ZM14.9337 19.1043C16.1237 19.1043 17.1037 18.1343 17.1037 16.9443C17.1037 15.7443 16.1237 14.7743 14.9337 14.7743C13.7437 14.7743 12.7537 15.7443 12.7537 16.9443C12.7537 18.1343 13.7437 19.1043 14.9337 19.1043ZM21.2237 19.1043C22.4237 19.1043 23.3937 18.1343 23.3937 16.9443C23.3937 15.7443 22.4237 14.7743 21.2237 14.7743C20.0137 14.7743 19.0537 15.7443 19.0537 16.9443C19.0537 18.1343 20.0137 19.1043 21.2237 19.1043Z",
        "geometry": {
          "width": 43.740236861188485,
          "height": 27.363502517625186
        }
      }
    },
    "trash": {
      "bold": {
        "path": "M7.5982 31.572H20.2182C22.5582 31.572 23.9982 30.272 24.1082 27.932L25.0082 8.542H26.2782C27.1682 8.542 27.8182 7.912 27.8182 7.042C27.8182 6.182 27.1482 5.552 26.2782 5.552H20.4782V3.572C20.4782 1.282 19.0482 0.002 16.4982 0.002H11.2882C8.7482 0.002 7.3282 1.282 7.3282 3.572V5.552H1.5282C0.6682 5.552 -0.0018 6.182 -0.0018 7.042C-0.0018 7.912 0.6682 8.542 1.5282 8.542H2.8182L3.7182 27.932C3.8282 30.282 5.2482 31.572 7.5982 31.572ZM10.4682 3.682C10.4682 3.092 10.8782 2.732 11.5282 2.732H16.2682C16.9282 2.732 17.3382 3.092 17.3382 3.682V5.552H10.4682ZM8.0082 28.522C7.2982 28.522 6.8382 28.012 6.7982 27.212L5.9182 8.542H21.8782L21.0182 27.212C20.9882 28.032 20.5182 28.522 19.7982 28.522ZM9.9082 26.542C10.5982 26.542 11.0182 26.102 11.0082 25.472L10.5982 11.662C10.5782 11.022 10.1282 10.612 9.4882 10.612C8.8182 10.612 8.3982 11.032 8.4182 11.672L8.8182 25.482C8.8282 26.112 9.2882 26.542 9.9082 26.542ZM13.9082 26.542C14.5582 26.542 15.0082 26.112 15.0082 25.482V11.652C15.0082 11.022 14.5582 10.612 13.9082 10.612C13.2582 10.612 12.8082 11.022 12.8082 11.652V25.482C12.8082 26.112 13.2582 26.542 13.9082 26.542ZM17.9082 26.542C18.5382 26.542 18.9782 26.122 18.9882 25.482L19.3982 11.672C19.4182 11.032 18.9882 10.612 18.3382 10.612C17.6782 10.612 17.2382 11.022 17.2282 11.662L16.8182 25.472C16.7982 26.102 17.2282 26.542 17.9082 26.542Z",
        "geometry": {
          "width": 27.822265625,
          "height": 31.568359375
        }
      }
    },
    "folder": {
      "bold": {
        "path": "M4.8237 26.2648H27.2337C30.1337 26.2648 31.8237 24.5548 31.8237 21.4648V7.3648C31.8237 4.2648 30.1237 2.5748 27.0037 2.5748H14.9937C13.9437 2.5748 13.3037 2.3248 12.4237 1.6548L11.7437 1.1048C10.6737 0.2748 9.9537 0.0048 8.3837 0.0048H4.5637C1.7337 0.0048 0.0037 1.7048 0.0037 4.7948V21.4648C0.0037 24.5648 1.7137 26.2648 4.8237 26.2648ZM3.5237 5.2048C3.5237 4.1248 4.1737 3.5248 5.2537 3.5248H7.4337C8.4937 3.5248 9.1037 3.7548 9.9937 4.4448L10.6737 5.0048C11.7437 5.8248 12.4837 6.0948 14.0437 6.0948H26.6237C27.7137 6.0948 28.3037 6.6348 28.3037 7.7948V8.6248H3.5237ZM5.2137 22.7348C4.1137 22.7348 3.5237 22.1848 3.5237 21.0248V11.5248H28.3037V21.0448C28.3037 22.1848 27.7137 22.7348 26.6237 22.7348Z",
        "geometry": {
          "width": 31.828125,
          "height": 26.263671875
        }
      }
    },
    "folder.badge.plus": {
      "bold": {
        "path": "M29.9937 14.4097C33.9237 14.4097 37.1837 11.1297 37.1837 7.1897C37.1837 3.2497 33.9337 -0.0003 29.9937 -0.0003C26.0437 -0.0003 22.7937 3.2697 22.7937 7.1897C22.7937 11.1397 26.0437 14.4097 29.9937 14.4097ZM4.8237 26.7297H27.2337C30.1337 26.7297 31.8237 25.0197 31.8237 21.9297V16.2697C30.7937 16.5297 29.4337 16.5297 28.3037 16.2697V21.5097C28.3037 22.6497 27.7137 23.1997 26.6237 23.1997H5.2137C4.1137 23.1997 3.5237 22.6497 3.5237 21.4897V11.9897H22.2537C21.6537 11.1297 21.2037 10.1397 20.9637 9.0897H3.5237V5.6697C3.5237 4.5897 4.1737 3.9897 5.2537 3.9897H7.4337C8.4937 3.9897 9.1037 4.2197 9.9937 4.9097L10.6737 5.4697C11.7437 6.2897 12.4837 6.5597 14.0437 6.5597H20.8537C20.8737 5.2997 21.1337 4.1797 21.7137 3.0397H14.9937C13.9437 3.0397 13.3037 2.7897 12.4237 2.1197L11.7437 1.5697C10.6737 0.7397 9.9537 0.4697 8.3837 0.4697H4.5637C1.7337 0.4697 0.0037 2.1697 0.0037 5.2597V21.9297C0.0037 25.0297 1.7137 26.7297 4.8237 26.7297ZM29.9937 11.8497C29.3237 11.8497 28.9037 11.4197 28.9037 10.7697V8.2997H26.4437C25.8037 8.2997 25.3637 7.8597 25.3437 7.2097C25.3437 6.5497 25.7837 6.1097 26.4437 6.1097H28.9037V3.6597C28.9037 3.0197 29.3237 2.5797 29.9937 2.5697C30.6537 2.5597 31.0937 3.0097 31.0937 3.6597V6.1097H33.5537C34.1937 6.1097 34.6337 6.5497 34.6337 7.2097C34.6337 7.8597 34.1937 8.2997 33.5537 8.2997H31.0937V10.7697C31.0937 11.4197 30.6537 11.8497 29.9937 11.8497Z",
        "geometry": {
          "width": 37.1875,
          "height": 26.728515625
        }
      }
    },
    "paperplane": {
      "bold": {
        "path": "M17.5282 29.4764C18.6882 29.4764 19.4982 28.6064 19.9982 27.2764L29.1382 3.3764C29.3582 2.8064 29.4782 2.2864 29.4782 1.8364C29.4782 0.7264 28.7482 -0.0036 27.6482 -0.0036C27.1782 -0.0036 26.6582 0.1264 26.0982 0.3464L2.1282 9.5064C0.8982 9.9764 -0.0018 10.7764 -0.0018 11.9464C-0.0018 13.3264 0.9982 13.9464 2.4082 14.3564L12.2382 17.2364L15.0982 27.0064C15.5182 28.4364 16.1282 29.4764 17.5282 29.4764ZM13.2982 14.0564L6.2182 11.8764C6.0682 11.8364 6.0182 11.7764 6.0182 11.6864C6.0182 11.6064 6.0682 11.5364 6.2082 11.4864L19.0082 6.5264C20.2982 6.0064 21.5782 5.4164 23.1582 4.6864C22.0382 5.5964 20.7082 6.6964 19.7582 7.6464ZM17.7982 23.4764C17.7082 23.4764 17.6482 23.4064 17.6082 23.2464L15.4182 16.1764L21.8382 9.7364C22.7382 8.8064 23.9282 7.3964 24.7882 6.3064C24.0782 7.8864 23.4782 9.1764 22.9682 10.4764L17.9882 23.2664C17.9482 23.4064 17.8782 23.4764 17.7982 23.4764Z",
        "geometry": {
          "width": 29.4765625,
          "height": 29.4765625
        }
      }
    },
    "externaldrive": {
      "bold": {
        "path": "M0.0037 17.9341C0.0037 21.9141 2.8737 24.7741 7.0537 24.7741H26.9837C31.1737 24.7741 34.0437 21.9141 34.0437 17.9341C34.0437 16.6941 33.6837 15.5841 33.2637 14.6041L28.4537 3.6541C27.4237 1.2941 25.4437 0.0041 22.7237 0.0041H11.3337C8.6137 0.0041 6.6337 1.2941 5.6037 3.6541L0.8637 14.4641C0.4137 15.4941 0.0037 16.6241 0.0037 17.9341ZM5.7237 11.2941L8.6937 4.3441C9.0937 3.3541 10.0337 2.8141 11.2537 2.8141H22.8137C24.0237 2.8141 24.9637 3.3541 25.3737 4.3441L28.3237 11.2941C27.9037 11.1741 27.4637 11.1041 26.9837 11.1041H7.0537C6.5937 11.1041 6.1437 11.1741 5.7237 11.2941ZM3.2937 17.9341C3.2937 15.8741 4.7837 14.3841 7.0537 14.3841H26.9837C29.2537 14.3841 30.7637 15.8741 30.7637 17.9341C30.7637 20.1541 29.2537 21.4941 26.9837 21.4941H7.0537C4.7837 21.4941 3.2937 20.0041 3.2937 17.9341ZM24.9337 17.9341C24.9337 18.9941 25.7837 19.8241 26.8337 19.8241C27.8637 19.8241 28.7137 18.9941 28.7137 17.9341C28.7137 16.9241 27.8537 16.0541 26.8337 16.0541C25.8037 16.0541 24.9337 16.9241 24.9337 17.9341Z",
        "geometry": {
          "width": 34.04296875,
          "height": 24.7734375
        }
      }
    },
    "archivebox": {
      "bold": {
        "path": "M6.7237 26.1377H21.7137C24.7437 26.1377 26.4537 24.4577 26.4537 21.4377V8.7377C27.7137 8.2277 28.4537 7.0277 28.4537 5.4377V3.5777C28.4537 1.4377 27.1137 -0.0023 24.9337 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.0277 0.7337 8.2177 1.9937 8.7377V21.4377C1.9937 24.4577 3.7037 26.1377 6.7237 26.1377ZM3.9737 5.8377C3.4437 5.8377 3.1737 5.5677 3.1737 5.0277V3.9877C3.1737 3.4577 3.4437 3.1877 3.9737 3.1877H24.4737C25.0037 3.1877 25.2637 3.4577 25.2637 3.9877V5.0277C25.2637 5.5677 25.0037 5.8377 24.4737 5.8377ZM7.0837 22.6977C6.0537 22.6977 5.5237 22.1877 5.5237 21.1277V9.0277H22.9237V21.1277C22.9237 22.1877 22.3837 22.6977 21.3537 22.6977ZM9.9937 14.7077H18.4737C19.2337 14.7077 19.8137 14.1477 19.8137 13.3577V12.9177C19.8137 12.1277 19.2537 11.5677 18.4737 11.5677H9.9937C9.2137 11.5677 8.6537 12.1277 8.6537 12.9177V13.3577C8.6537 14.1477 9.2237 14.7077 9.9937 14.7077Z",
        "geometry": {
          "width": 28.451171875,
          "height": 26.140625
        }
      }
    },
    "arrow.up.bin": {
      "bold": {
        "path": "M9.8937 26.1377H24.7037C27.7237 26.1377 29.0537 24.5277 29.5137 21.5177L31.4637 9.0077C33.4037 8.8477 34.5937 7.4677 34.5937 5.4377V3.5777C34.5937 1.4377 33.2537 -0.0023 31.0937 -0.0023H3.5137C1.3937 -0.0023 0.0037 1.4377 0.0037 3.5777V5.4377C0.0037 7.4677 1.2037 8.8477 3.1337 9.0077L5.0737 21.5177C5.5537 24.5277 6.8637 26.1377 9.8937 26.1377ZM3.9737 5.9177C3.4437 5.9177 3.1737 5.6477 3.1737 5.1177V3.9077C3.1737 3.3777 3.4437 3.1077 3.9737 3.1077H30.6237C31.1537 3.1077 31.4137 3.3777 31.4137 3.9077V5.1177C31.4137 5.6477 31.1537 5.9177 30.6237 5.9177ZM10.2037 22.6977C9.1737 22.6977 8.6937 22.2577 8.5137 21.1277L6.5737 9.0277H28.0137L26.0837 21.1277C25.9037 22.2577 25.4137 22.6977 24.3937 22.6977ZM18.7737 19.6977V16.1377L18.6337 14.1877L19.4937 15.1077L20.1937 15.8477C20.3937 16.1077 20.7837 16.2977 21.1237 16.2977C21.8437 16.2977 22.4037 15.7777 22.4037 15.0677C22.4037 14.6677 22.2737 14.3877 21.9537 14.1077L18.4737 10.9477C18.1137 10.6277 17.7737 10.4277 17.3237 10.4277C16.8737 10.4277 16.5137 10.6277 16.1637 10.9477L12.6837 14.1077C12.3737 14.3877 12.2337 14.6677 12.2337 15.0677C12.2337 15.7777 12.7837 16.2977 13.5037 16.2977C13.8637 16.2977 14.2237 16.1077 14.4537 15.8477L15.1437 15.1077L15.9937 14.1877L15.8637 16.1377V19.6977C15.8637 20.5077 16.5337 21.0677 17.3237 21.0677C18.1137 21.0677 18.7737 20.5077 18.7737 19.6977Z",
        "geometry": {
          "width": 34.58984375,
          "height": 26.140625
        }
      }
    },
    "document": {
      "bold": {
        "path": "M4.8037 30.0902H19.4437C22.5437 30.0902 24.2437 28.3802 24.2437 25.2702V12.8802C24.2437 10.7502 23.9237 9.6802 22.5737 8.3102L16.0137 1.6802C14.6837 0.3402 13.5737 0.0002 11.5537 0.0002H4.8037C1.6937 0.0002 0.0037 1.7102 0.0037 4.8302V25.2702C0.0037 28.4002 1.6937 30.0902 4.8037 30.0902ZM5.2237 26.5602C4.0637 26.5602 3.5237 25.9802 3.5237 24.8802V5.2202C3.5237 4.1302 4.0637 3.5302 5.2237 3.5302H10.5937V10.2302C10.5937 12.6102 11.7337 13.7302 14.0937 13.7302H20.7137V24.8802C20.7137 25.9802 20.1837 26.5602 19.0137 26.5602ZM14.3537 10.8302C13.7637 10.8302 13.4937 10.5502 13.4937 9.9702V3.8102L20.4437 10.8302Z",
        "geometry": {
          "width": 24.240234375,
          "height": 30.091796875
        }
      }
    },
    "arrowshape.left": {
      "bold": {
        "path": "M0.0049 13.0304C0.0049 13.6204 0.2549 14.3104 0.8049 14.8304L11.6849 24.9804C12.5049 25.7304 13.1749 26.0704 14.0249 26.0704C15.3149 26.0704 16.2649 25.1004 16.2649 23.8304V19.4304H26.1849C28.7149 19.4304 30.1849 17.9504 30.1849 15.4504V10.7004C30.1849 8.1904 28.7149 6.7104 26.1849 6.7104H16.2649V2.2804C16.2649 1.0104 15.3149 0.0004 14.0149 0.0004C13.1949 0.0004 12.5949 0.3304 11.6849 1.1504L0.8049 11.2404C0.2449 11.7604 0.0049 12.4304 0.0049 13.0304ZM3.9349 13.0304C3.9349 12.9504 3.9749 12.8904 4.0849 12.7804L12.8149 4.4804C12.8749 4.4304 12.9649 4.3904 13.0249 4.3904C13.1649 4.3904 13.2649 4.4804 13.2649 4.6204V9.4104C13.2649 9.7204 13.3949 9.8404 13.6949 9.8404H25.8349C26.6349 9.8404 27.0549 10.2404 27.0549 11.0604V15.0804C27.0549 15.9004 26.6349 16.3004 25.8349 16.3004H13.6949C13.3949 16.3004 13.2649 16.4304 13.2649 16.7304V21.4004C13.2649 21.5304 13.1649 21.6304 13.0449 21.6304C12.9649 21.6304 12.8949 21.6004 12.8149 21.5204L4.0849 13.2704C3.9749 13.1804 3.9349 13.1104 3.9349 13.0304Z",
        "geometry": {
          "width": 30.1875,
          "height": 26.072265625
        }
      }
    },
    "arrowshape.forward": {
      "bold": {
        "path": "M30.1888 13.0304C30.1888 12.4304 29.9388 11.7604 29.3988 11.2404L18.4988 1.1504C17.5988 0.3304 16.9988 0.0004 16.1788 0.0004C14.8888 0.0004 13.9188 1.0104 13.9188 2.2804V6.7104H4.0088C1.4787 6.7104 -0.0013 8.1904 -0.0013 10.7004V15.4504C-0.0013 17.9504 1.4787 19.4304 4.0088 19.4304H13.9188V23.8304C13.9188 25.1004 14.8888 26.0704 16.1588 26.0704C17.0088 26.0704 17.6788 25.7304 18.4988 24.9804L29.3787 14.8304C29.9288 14.3104 30.1888 13.6204 30.1888 13.0304ZM26.2488 13.0304C26.2488 13.1104 26.2087 13.1804 26.1088 13.2704L17.3788 21.5204C17.2987 21.6004 17.2288 21.6304 17.1488 21.6304C17.0188 21.6304 16.9288 21.5304 16.9288 21.4004V16.7304C16.9288 16.4304 16.7888 16.3004 16.4888 16.3004H4.3488C3.5588 16.3004 3.1288 15.9004 3.1288 15.0804V11.0604C3.1288 10.2404 3.5588 9.8404 4.3488 9.8404H16.4888C16.7888 9.8404 16.9288 9.7204 16.9288 9.4104V4.6204C16.9288 4.4804 17.0188 4.3904 17.1588 4.3904C17.2288 4.3904 17.3088 4.4304 17.3788 4.4804L26.1088 12.7804C26.2087 12.8904 26.2488 12.9504 26.2488 13.0304Z",
        "geometry": {
          "width": 30.1875,
          "height": 26.072265625
        }
      }
    },
    "paperclip": {
      "bold": {
        "path": "M22.8357 15.8659L12.6757 26.0159C10.1757 28.5259 6.8357 28.3059 4.6857 26.1459C2.5157 23.9859 2.3157 20.6659 4.8157 18.1459L18.7857 4.2059C20.1757 2.7959 22.3157 2.4559 23.7257 3.8659C25.1457 5.2959 24.7857 7.4059 23.3957 8.7959L9.5957 22.6159C9.1057 23.1159 8.5357 22.9759 8.1857 22.6459C7.8657 22.3059 7.7257 21.7359 8.2157 21.2359L17.8157 11.6459C18.4057 11.0559 18.4257 10.1759 17.8557 9.6059C17.2857 9.0559 16.4057 9.0559 15.8157 9.6459L6.1757 19.2859C4.5957 20.8859 4.6657 23.3359 6.0857 24.7559C7.6157 26.2859 9.9557 26.2459 11.5357 24.6559L25.4157 10.7759C28.2057 7.9959 28.1257 4.3159 25.6457 1.8359C23.2157 -0.5841 19.4857 -0.7141 16.6957 2.0559L2.6257 16.1359C-0.9743 19.7459 -0.7543 24.9759 2.5457 28.2759C5.8657 31.5759 11.0857 31.8059 14.6957 28.2159L24.9257 17.9759C25.4857 17.4259 25.4857 16.3859 24.8957 15.8359C24.3457 15.2559 23.4057 15.3059 22.8357 15.8659Z",
        "geometry": {
          "width": 27.506760745330002,
          "height": 30.83056564117573
        }
      }
    },
    "link": {
      "bold": {
        "path": "M13.6938 21.0327L16.2238 18.5027C14.8838 18.3527 13.7538 17.8527 13.0138 17.1127C10.8138 14.9127 10.8138 11.8427 12.9838 9.6627L17.6638 4.9927C19.8538 2.8127 22.9138 2.8127 25.1138 4.9927C27.3138 7.2127 27.3138 10.2727 25.1238 12.4527L23.3738 14.2127C23.8938 15.4327 24.1338 16.9827 23.7338 18.3427L27.4938 14.6127C31.0038 11.1227 30.9938 6.1427 27.4838 2.6327C23.9538 -0.8773 19.0038 -0.8673 15.5138 2.6227L10.6238 7.5127C7.1338 11.0027 7.1238 15.9627 10.6338 19.4727C11.3338 20.1727 12.3838 20.7627 13.6938 21.0327ZM16.4338 9.0727L13.8938 11.6027C15.2438 11.7527 16.3638 12.2527 17.1038 12.9927C19.3038 15.1927 19.3138 18.2727 17.1338 20.4427L12.4538 25.1127C10.2638 27.2927 7.2038 27.2927 5.0138 25.1127C2.8038 22.8927 2.8038 19.8427 4.9838 17.6527L6.7338 15.9027C6.2238 14.6927 5.9838 13.1227 6.3838 11.7627L2.6238 15.5127C-0.8762 18.9827 -0.8762 23.9627 2.6338 27.4727C6.1638 30.9827 11.1138 30.9727 14.6038 27.4827L19.4938 22.5927C22.9838 19.1027 22.9938 14.1427 19.4838 10.6327C18.7838 9.9427 17.7338 9.3427 16.4338 9.0727Z",
        "geometry": {
          "width": 30.120862082483555,
          "height": 30.10546875
        }
      }
    },
    "personalhotspot": {
      "bold": {
        "path": "M8.4527 16.9379H9.2427C9.0927 15.8279 9.0327 14.6879 9.2327 13.7379H8.6127C5.5127 13.7379 3.3527 11.5779 3.3527 8.4579C3.3527 5.3579 5.5227 3.1879 8.6127 3.1879H20.6327C23.7027 3.1879 25.8927 5.3579 25.8927 8.4579C25.8927 11.5779 23.7227 13.7379 20.6327 13.7379H16.9527C16.2427 14.3579 16.2827 16.1879 17.1127 16.9379H20.7827C25.7327 16.9379 29.2327 13.4379 29.2327 8.4579C29.2327 3.4979 25.7327 -0.0021 20.7827 -0.0021H8.4527C3.5127 -0.0021 0.0027 3.4979 0.0027 8.4579C0.0027 13.4379 3.5127 16.9379 8.4527 16.9379ZM19.5527 23.5679H31.8827C36.8227 23.5679 40.3327 20.0679 40.3327 15.1079C40.3327 10.1279 36.8227 6.6279 31.8827 6.6279H31.0927C31.2527 7.7279 31.2927 8.8779 31.1027 9.8279H31.7227C34.8227 9.8279 36.9827 11.9879 36.9827 15.1079C36.9827 18.2079 34.8127 20.3879 31.7227 20.3879H19.7027C16.6227 20.3879 14.4327 18.2079 14.4327 15.1079C14.4327 11.9879 16.6127 9.8279 19.7027 9.8279H23.3827C24.0127 9.1279 23.9627 7.3779 23.2027 6.6279H19.5527C14.6027 6.6279 11.1027 10.1279 11.1027 15.1079C11.1027 20.0679 14.6027 23.5679 19.5527 23.5679Z",
        "geometry": {
          "width": 40.33203125,
          "height": 23.5703125
        }
      }
    },
    "person": {
      "bold": {
        "path": "M12.1537 13.0959C15.5437 13.0959 18.2837 10.1459 18.2837 6.4759C18.2837 2.8959 15.5337 -0.0041 12.1537 -0.0041C8.7937 -0.0041 6.0337 2.9159 6.0437 6.4959C6.0537 10.1459 8.7637 13.0959 12.1537 13.0959ZM12.1537 10.1959C10.4437 10.1959 9.0237 8.6559 9.0137 6.4759C8.9937 4.4059 10.4637 2.8859 12.1537 2.8859C13.8737 2.8859 15.3037 4.3859 15.3037 6.4759C15.3037 8.6359 13.8737 10.1959 12.1537 10.1959ZM3.7437 25.9059H20.5637C23.0637 25.9059 24.3037 25.0559 24.3037 23.2859C24.3037 19.2659 19.3437 14.5159 12.1537 14.5159C4.9537 14.5159 0.0037 19.2659 0.0037 23.2859C0.0037 25.0559 1.2437 25.9059 3.7437 25.9059ZM3.6337 23.0259C3.3737 23.0259 3.2937 22.9159 3.2937 22.7059C3.2937 20.8759 6.5237 17.4059 12.1537 17.4059C17.7837 17.4059 21.0137 20.8759 21.0137 22.7059C21.0137 22.9159 20.9337 23.0259 20.6537 23.0259Z",
        "geometry": {
          "width": 24.30859375,
          "height": 25.908203125
        }
      }
    },
    "person.2": {
      "bold": {
        "path": "M26.6037 13.0959C29.9937 13.0959 32.7337 10.1459 32.7337 6.4759C32.7337 2.8959 29.9837 -0.0041 26.6037 -0.0041C23.2437 -0.0041 20.4837 2.9159 20.4937 6.4959C20.5037 10.1459 23.2137 13.0959 26.6037 13.0959ZM10.6137 13.2859C13.5637 13.2859 15.9537 10.6959 15.9537 7.4659C15.9537 4.3359 13.5537 1.7659 10.6137 1.7659C7.6737 1.7659 5.2537 4.3659 5.2537 7.4759C5.2637 10.7059 7.6437 13.2859 10.6137 13.2859ZM26.6037 10.1959C24.8937 10.1959 23.4637 8.5959 23.4637 6.4759C23.4437 4.4659 24.9137 2.8859 26.6037 2.8859C28.3237 2.8859 29.7537 4.4559 29.7537 6.4759C29.7537 8.5759 28.3237 10.1959 26.6037 10.1959ZM10.6137 10.4459C9.2537 10.4459 8.1037 9.1459 8.1037 7.4759C8.0937 5.9059 9.2537 4.6059 10.6137 4.6059C11.9637 4.6059 13.1137 5.8759 13.1137 7.4659C13.1137 9.1459 11.9737 10.4459 10.6137 10.4459ZM3.2137 25.9259H13.6437C12.7537 25.3759 12.2537 24.1159 12.3637 23.0759H3.4037C3.1737 23.0759 3.0937 22.9559 3.0937 22.7759C3.0937 20.0559 6.4637 17.3359 10.5937 17.3359C11.8237 17.3359 13.3337 17.6659 14.3037 18.1459C14.7937 17.2959 15.4737 16.5659 16.4337 15.9859C14.7537 15.0559 12.5237 14.5059 10.5937 14.5059C4.7437 14.5059 0.0037 18.6059 0.0037 23.1459C0.0037 24.9559 1.0637 25.9259 3.2137 25.9259ZM18.1937 25.9059H35.0137C37.5137 25.9059 38.7637 25.0559 38.7637 23.2859C38.7637 19.2659 33.7937 14.5159 26.6037 14.5159C19.4037 14.5159 14.4537 19.2659 14.4537 23.2859C14.4537 25.0559 15.6937 25.9059 18.1937 25.9059ZM18.0837 23.0259C17.8237 23.0259 17.7437 22.9159 17.7437 22.7059C17.7437 20.8759 20.9737 17.4059 26.6037 17.4059C32.2337 17.4059 35.4637 20.8759 35.4637 22.7059C35.4637 22.9159 35.3837 23.0259 35.1137 23.0259Z",
        "geometry": {
          "width": 38.759765625,
          "height": 25.921875
        }
      }
    },
    "power": {
      "bold": {
        "path": "M14.4327 15.6636C15.5827 15.6636 16.3527 14.8436 16.3527 13.6336V2.0336C16.3527 0.8036 15.5827 0.0036 14.4327 0.0036C13.2927 0.0036 12.5227 0.8036 12.5227 2.0336V13.6336C12.5227 14.8436 13.2927 15.6636 14.4327 15.6636ZM14.4327 29.7636C22.3627 29.7636 28.8727 23.2436 28.8727 15.3136C28.8727 11.2936 27.1827 7.6936 24.7327 5.2736C22.9527 3.4436 20.2727 5.6836 22.1327 7.6936C24.0727 9.6436 25.2827 12.3336 25.2827 15.3136C25.2927 21.3236 20.4527 26.1636 14.4327 26.1636C8.4327 26.1636 3.6127 21.3236 3.6127 15.3136C3.6127 12.3136 4.8127 9.6436 6.7527 7.6836C8.6127 5.6736 5.9227 3.4436 4.1527 5.2636C1.6927 7.6936 0.0027 11.2936 0.0027 15.3136C0.0027 23.2436 6.5227 29.7636 14.4327 29.7636Z",
        "geometry": {
          "width": 28.875,
          "height": 29.763671875
        }
      }
    },
    "clear": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8737 18.7277C9.3237 18.7277 9.6837 18.5977 9.9637 18.2977L13.0837 15.1777L16.2137 18.2977C16.5037 18.5777 16.8537 18.7277 17.2937 18.7277C18.1337 18.7277 18.7737 18.0877 18.7737 17.2577C18.7737 16.8577 18.6037 16.4977 18.3237 16.2277L15.1937 13.0877L18.3337 9.9277C18.6237 9.6277 18.7737 9.2877 18.7737 8.8977C18.7737 8.0677 18.1337 7.4277 17.3037 7.4277C16.8737 7.4277 16.5337 7.5577 16.2237 7.8577L13.0837 10.9877L9.9537 7.8777C9.6637 7.5777 9.3237 7.4377 8.8737 7.4377C8.0537 7.4377 7.4137 8.0777 7.4137 8.9177C7.4137 9.2977 7.5637 9.6477 7.8437 9.9277L10.9937 13.0877L7.8437 16.2277C7.5637 16.4977 7.4137 16.8677 7.4137 17.2577C7.4137 18.0877 8.0537 18.7277 8.8737 18.7277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "delete.left": {
      "bold": {
        "path": "M25.3709 26.1377C28.4909 26.1377 30.2009 24.7477 30.2009 21.6377V4.7977C30.2009 1.6977 28.4909 -0.0023 25.3709 -0.0023H13.6309C11.3909 -0.0023 10.1209 0.5177 8.7109 2.1377L1.5209 10.1077C0.3409 11.4477 0.0009 12.1777 0.0009 13.0577C0.0009 13.9477 0.3509 14.7077 1.5209 16.0377L8.7109 23.9677C10.1409 25.5977 11.3909 26.1377 13.6309 26.1377ZM24.9809 22.6177H13.4009C12.5809 22.6177 12.0309 22.3777 11.4409 21.7377L4.2909 13.8777C3.9909 13.5577 3.9009 13.3177 3.9009 13.0577C3.9009 12.7977 3.9909 12.5777 4.2909 12.2477L11.4409 4.3477C12.0209 3.7077 12.5809 3.5277 13.3809 3.5277H24.9809C26.0909 3.5277 26.6709 4.0777 26.6709 5.2377V20.9177C26.6709 22.0777 26.0909 22.6177 24.9809 22.6177ZM13.4509 18.7577C13.9009 18.7577 14.2609 18.6077 14.5509 18.3177L17.6609 15.2077L20.7909 18.3177C21.0809 18.6077 21.4409 18.7577 21.8709 18.7577C22.7109 18.7577 23.3509 18.0977 23.3509 17.2677C23.3509 16.8877 23.1909 16.5277 22.9009 16.2377L19.7709 13.0977L22.9109 9.9377C23.2009 9.6477 23.3509 9.2977 23.3509 8.9277C23.3509 8.0777 22.7109 7.4377 21.8909 7.4377C21.4509 7.4377 21.1209 7.5777 20.8109 7.8877L17.6609 11.0177L14.5309 7.8877C14.2509 7.5977 13.9009 7.4677 13.4509 7.4677C12.6309 7.4677 11.9909 8.0977 11.9909 8.9277C11.9909 9.3077 12.1409 9.6677 12.4309 9.9577L15.5709 13.0977L12.4309 16.2577C12.1409 16.5277 11.9909 16.8877 11.9909 17.2677C11.9909 18.0977 12.6309 18.7577 13.4509 18.7577Z",
        "geometry": {
          "width": 30.201171875,
          "height": 26.140625
        }
      }
    },
    "progress.indicator": {
      "bold": {
        "path": "M0.0028 2.7202H25.2628V0.0002H0.0028ZM0.0028 8.8602H25.2628V6.1202H0.0028ZM0.0028 15.0002H25.2628V12.2802H0.0028ZM0.0028 21.1402H25.2628V18.4002H0.0028ZM0.0028 27.2802H25.2628V24.5502H0.0028ZM0.0028 33.4102H25.2628V30.6802H0.0028Z",
        "geometry": {
          "width": 25.265625,
          "height": 33.4140625
        }
      }
    },
    "sun.max": {
      "bold": {
        "path": "M15.9427 6.0325C16.8527 6.0325 17.6227 5.2625 17.6227 4.3525V1.6825C17.6227 0.7625 16.8527 0.0025 15.9427 0.0025C15.0227 0.0025 14.2627 0.7625 14.2627 1.6825V4.3525C14.2627 5.2625 15.0227 6.0325 15.9427 6.0325ZM22.9527 8.9825C23.5827 9.6125 24.6827 9.6125 25.3327 8.9525L27.2227 7.0725C27.8527 6.4225 27.8327 5.3325 27.1927 4.6725C26.5627 4.0425 25.4727 4.0625 24.8327 4.7025L22.9327 6.6025C22.3027 7.2425 22.3027 8.3425 22.9527 8.9825ZM8.9127 8.9825C9.5727 8.3425 9.5727 7.2325 8.9527 6.6025L7.0727 4.7025C6.4227 4.0725 5.3327 4.0425 4.6927 4.6725C4.0427 5.3325 4.0327 6.4225 4.6627 7.0525L6.5527 8.9525C7.1927 9.6125 8.2827 9.6125 8.9127 8.9825ZM15.9427 23.5025C20.0727 23.5025 23.4927 20.0825 23.4927 15.9425C23.4927 11.8025 20.0727 8.3825 15.9427 8.3825C11.8027 8.3825 8.3827 11.8025 8.3827 15.9425C8.3827 20.0825 11.8027 23.5025 15.9427 23.5025ZM15.9427 20.1625C13.6327 20.1625 11.7027 18.2525 11.7027 15.9425C11.7027 13.6325 13.6327 11.7025 15.9427 11.7025C18.2427 11.7025 20.1627 13.6325 20.1627 15.9425C20.1627 18.2525 18.2427 20.1625 15.9427 20.1625ZM25.8527 15.9425C25.8527 16.8525 26.6227 17.6225 27.5327 17.6225H30.2027C31.1127 17.6225 31.8827 16.8525 31.8827 15.9425C31.8827 15.0225 31.1127 14.2625 30.2027 14.2625H27.5327C26.6227 14.2625 25.8527 15.0225 25.8527 15.9425ZM6.0327 15.9425C6.0327 15.0225 5.2627 14.2625 4.3427 14.2625H1.6827C0.7627 14.2625 0.0027 15.0225 0.0027 15.9425C0.0027 16.8525 0.7627 17.6225 1.6827 17.6225H4.3427C5.2627 17.6225 6.0327 16.8525 6.0327 15.9425ZM22.9327 22.9325C22.3027 23.5725 22.3027 24.6525 22.9527 25.3025L24.8527 27.2025C25.4827 27.8325 26.5827 27.8225 27.2327 27.1625C27.8627 26.5325 27.8627 25.4425 27.2027 24.8025L25.3027 22.9125C24.6627 22.2825 23.5727 22.2825 22.9327 22.9325ZM8.9527 22.9325C8.3027 22.2825 7.2027 22.2825 6.5627 22.9125L4.6627 24.7825C4.0227 25.4325 4.0027 26.5225 4.6327 27.1625C5.2927 27.8125 6.3827 27.8225 7.0227 27.1925L8.9127 25.3025C9.5727 24.6525 9.5727 23.5725 8.9527 22.9325ZM15.9427 25.8425C15.0227 25.8425 14.2627 26.6025 14.2627 27.5225V30.2025C14.2627 31.1125 15.0227 31.8825 15.9427 31.8825C16.8527 31.8825 17.6227 31.1125 17.6227 30.2025V27.5225C17.6227 26.6025 16.8527 25.8425 15.9427 25.8425Z",
        "geometry": {
          "width": 31.8828125,
          "height": 31.8828125
        }
      }
    },
    "sparkles": {
      "bold": {
        "path": "M12.1109 6.8369C12.3309 6.8369 12.4709 6.6869 12.5109 6.4969C12.8809 4.3069 12.8409 4.2669 15.1909 3.8169C15.4109 3.7769 15.5409 3.6369 15.5409 3.4169C15.5409 3.2169 15.3909 3.0669 15.1909 3.0369C12.8409 2.6569 12.8609 2.5869 12.5109 0.3569C12.4709 0.1469 12.3309 -0.0031 12.1109 -0.0031C11.8909 -0.0031 11.7609 0.1469 11.7309 0.3669C11.3909 2.5269 11.4009 2.5869 9.0409 3.0369C8.8309 3.0769 8.6909 3.2169 8.6909 3.4169C8.6909 3.6369 8.8309 3.7769 9.0609 3.8169C11.3909 4.2269 11.3709 4.2769 11.7309 6.4769C11.7609 6.6869 11.8909 6.8369 12.1109 6.8369ZM5.4709 16.6569C5.7809 16.6569 6.0409 16.4169 6.0809 16.1069C6.5509 12.5269 6.6309 12.4969 10.3909 11.8169C10.7009 11.7569 10.9409 11.5269 10.9409 11.1969C10.9409 10.8669 10.7009 10.6269 10.3909 10.5869C6.6609 10.0769 6.5509 9.9769 6.0809 6.3169C6.0409 5.9769 5.8009 5.7469 5.4709 5.7469C5.1409 5.7469 4.8909 5.9769 4.8509 6.3269C4.4209 9.8869 4.2909 9.8969 0.5509 10.5869C0.2309 10.6369 0.0009 10.8669 0.0009 11.1969C0.0009 11.5369 0.2309 11.7569 0.6109 11.8169C4.2909 12.3769 4.4209 12.4969 4.8509 16.0669C4.8909 16.4169 5.1409 16.6569 5.4709 16.6569ZM15.2609 31.8669C15.7909 31.8669 16.2009 31.4869 16.3009 30.9269C17.2909 23.6669 18.3109 22.5969 25.4009 21.7969C25.9809 21.7369 26.3909 21.2869 26.3909 20.7369C26.3909 20.2069 25.9809 19.7669 25.4209 19.6869C18.3309 18.8169 17.3909 17.8169 16.3009 10.5669C16.2009 10.0069 15.7809 9.6269 15.2609 9.6269C14.7209 9.6269 14.3009 10.0069 14.2209 10.5669C13.2109 17.8169 12.1909 18.8969 5.1109 19.6869C4.5409 19.7569 4.1309 20.1969 4.1309 20.7369C4.1309 21.2869 4.5209 21.7069 5.1009 21.7969C12.1709 22.7669 13.0809 23.6669 14.2209 30.9269C14.3109 31.4869 14.7209 31.8669 15.2609 31.8669Z",
        "geometry": {
          "width": 26.38671875,
          "height": 31.869140625
        }
      }
    },
    "cloud.hail": {
      "bold": {
        "path": "M6.9727 21.8086H24.1327C28.8727 21.8086 32.4427 18.1986 32.4427 13.6586C32.4427 9.0186 28.7927 5.5086 23.9927 5.5086C22.3527 2.3386 19.3327 -0.0014 14.8427 -0.0014C9.4327 -0.0014 5.1527 4.0186 4.5427 9.1486C1.9527 9.9986 0.0027 12.2386 0.0027 15.2986C0.0027 18.9486 2.7027 21.8086 6.9727 21.8086ZM7.0427 18.5786C4.4827 18.5786 3.2127 17.2086 3.2127 15.3686C3.2127 13.7786 4.1827 12.4986 6.4127 11.9186C7.2627 11.6986 7.5027 11.3186 7.6127 10.4586C8.1327 5.9286 11.1527 3.2286 14.8427 3.2286C17.6627 3.2286 19.9627 4.7986 21.4527 7.7086C21.8227 8.4186 22.2427 8.6786 23.1227 8.6786C27.1927 8.6786 29.2327 10.9386 29.2327 13.7286C29.2327 16.4486 27.1227 18.5786 24.1327 18.5786ZM9.0327 26.7686L9.7727 25.4886C10.0627 24.9886 9.9227 24.3786 9.4227 24.0886C8.9127 23.7986 8.3427 23.9786 8.0427 24.4886L7.3027 25.7886C7.0227 26.2686 7.1527 26.8686 7.6527 27.1486C8.1627 27.4386 8.7527 27.2486 9.0327 26.7686ZM15.0027 28.8586L16.9427 25.4986C17.2227 25.0086 17.0927 24.3886 16.5827 24.0986C16.0827 23.8186 15.5127 23.9986 15.2127 24.5186L13.2727 27.8886C12.9927 28.3586 13.1127 28.9586 13.6127 29.2586C14.1227 29.5286 14.7227 29.3386 15.0027 28.8586ZM23.3627 26.8086L24.1027 25.5286C24.3927 25.0286 24.2527 24.4286 23.7527 24.1486C23.2427 23.8486 22.6727 24.0186 22.3627 24.5386L21.6327 25.8386C21.3527 26.3186 21.4627 26.9186 21.9827 27.2086C22.4927 27.4986 23.0827 27.2986 23.3627 26.8086ZM6.2227 31.2286C7.1227 31.2286 7.8627 30.4786 7.8627 29.5686C7.8627 28.6886 7.1227 27.9486 6.2227 27.9486C5.3327 27.9486 4.5827 28.6886 4.5827 29.5686C4.5827 30.4786 5.3327 31.2286 6.2227 31.2286ZM20.5527 31.2786C21.4527 31.2786 22.1927 30.5286 22.1927 29.6286C22.1927 28.7386 21.4527 27.9986 20.5527 27.9986C19.6627 27.9986 18.9127 28.7386 18.9127 29.6286C18.9127 30.5286 19.6627 31.2786 20.5527 31.2786ZM12.1927 33.3186C13.0827 33.3186 13.8327 32.5786 13.8327 31.6686C13.8327 30.7886 13.0827 30.0386 12.1927 30.0386C11.2927 30.0386 10.5527 30.7886 10.5527 31.6686C10.5527 32.5786 11.2927 33.3186 12.1927 33.3186Z",
        "geometry": {
          "width": 32.443359375,
          "height": 33.318359375
        }
      }
    },
    "humidity": {
      "bold": {
        "path": "M5.9575 8.2071C12.2875 8.2071 15.5275 3.0471 21.0875 3.0471C22.3875 3.0471 23.4975 3.3371 24.8075 4.0971C25.5475 4.5071 26.3375 4.2771 26.7775 3.6671C27.2875 2.9271 27.1075 1.9171 26.1575 1.3571C24.5775 0.4471 22.8975 -0.0029 21.0875 -0.0029C14.7075 -0.0029 11.4775 5.1671 5.9575 5.1671C4.6575 5.1671 3.5575 4.8671 2.2375 4.1171C1.4975 3.6871 0.6875 3.9371 0.2675 4.5671C-0.2225 5.3071 -0.0425 6.3071 0.8875 6.8471C2.4675 7.7471 4.1475 8.2071 5.9575 8.2071ZM23.9175 24.6471C27.4075 24.6471 30.1775 21.9271 30.1775 18.5271C30.1775 16.6671 29.2675 14.8471 28.5175 13.4371L25.4675 7.7671C25.0975 7.0971 24.6275 6.7671 23.9175 6.7671C23.2075 6.7671 22.7475 7.0971 22.3875 7.7671L19.3575 13.4371C18.5975 14.8471 17.6675 16.6671 17.6675 18.5271C17.6675 21.9271 20.4575 24.6471 23.9175 24.6471ZM5.9675 15.5471C11.0375 15.5471 14.2775 12.0071 18.3875 10.8871C18.9975 9.7071 19.6375 8.5471 20.2675 7.3671C14.3175 7.8171 11.2975 12.4971 5.9675 12.4971C4.6675 12.4971 3.5775 12.1971 2.2675 11.4471C1.5075 11.0171 0.7075 11.2671 0.2975 11.8971C-0.2125 12.6371 -0.0325 13.6271 0.8975 14.1771C2.4775 15.0771 4.1675 15.5471 5.9675 15.5471ZM23.9175 22.0671C21.8875 22.0671 20.2575 20.5071 20.2575 18.5271C20.2575 17.2671 20.8975 16.0471 21.6475 14.6471L23.7975 10.6371C23.8675 10.4971 23.9975 10.4971 24.0875 10.6371L26.2075 14.6471C26.9575 16.0471 27.6075 17.2671 27.6075 18.5271C27.6075 20.5071 25.9875 22.0671 23.9175 22.0671ZM5.9575 22.8771C9.9475 22.8771 12.7475 20.7271 15.7175 19.2471C15.5675 18.2071 15.7075 16.9371 16.0675 15.7871C12.5475 17.3071 9.8375 19.8271 5.9575 19.8271C4.6575 19.8271 3.5575 19.5271 2.2375 18.7671C1.4975 18.3471 0.6875 18.5971 0.2675 19.2271C-0.2225 19.9571 -0.0425 20.9571 0.8875 21.5071C2.4675 22.4071 4.1475 22.8771 5.9575 22.8771Z",
        "geometry": {
          "width": 30.18133278998727,
          "height": 24.650390625
        }
      }
    },
    "play": {
      "bold": {
        "path": "M2.3237 25.2229C2.9537 25.2229 3.5237 25.0229 4.2937 24.5829L20.7037 15.0629C21.9537 14.3429 22.5837 13.6729 22.5837 12.6029C22.5837 11.5529 21.9537 10.8829 20.7037 10.1429L4.2937 0.6329C3.5237 0.1929 2.9537 0.0029 2.3237 0.0029C1.0437 0.0029 0.0037 0.9729 0.0037 2.6129V22.6029C0.0037 24.2429 1.0437 25.2229 2.3237 25.2229ZM3.8237 20.6129C3.7637 20.6129 3.7237 20.5629 3.7237 20.4829V4.7329C3.7237 4.6329 3.7637 4.5829 3.8237 4.5829C3.8837 4.5829 3.9237 4.6029 3.9937 4.6329L17.5537 12.4729C17.6137 12.5129 17.6537 12.5529 17.6537 12.6029C17.6537 12.6729 17.6137 12.7029 17.5537 12.7429L3.9937 20.5629C3.9237 20.6029 3.8837 20.6129 3.8237 20.6129Z",
        "geometry": {
          "width": 22.5859375,
          "height": 25.224609375
        }
      }
    },
    "pause": {
      "bold": {
        "path": "M2.0737 23.792C3.2637 23.792 4.1537 22.932 4.1537 21.762V2.012C4.1537 0.862 3.2637 0.002 2.0737 0.002C0.8937 0.002 0.0037 0.862 0.0037 2.012V21.762C0.0037 22.932 0.8937 23.792 2.0737 23.792ZM12.4137 23.792C13.6037 23.792 14.4937 22.932 14.4937 21.762V2.012C14.4937 0.862 13.6037 0.002 12.4137 0.002C11.2237 0.002 10.3337 0.862 10.3337 2.012V21.762C10.3337 22.932 11.2237 23.792 12.4137 23.792Z",
        "geometry": {
          "width": 14.4921875,
          "height": 23.7890625
        }
      }
    },
    "stop": {
      "bold": {
        "path": "M0.0037 19.9652C0.0037 22.1452 1.3637 23.4852 3.6537 23.4852H19.8337C22.1337 23.4852 23.5037 22.1452 23.5037 19.9652V3.5252C23.5037 1.3552 22.1337 -0.0048 19.8337 -0.0048H3.6537C1.3637 -0.0048 0.0037 1.3552 0.0037 3.5252ZM3.5237 18.7552V4.7352C3.5237 3.9352 3.9937 3.4752 4.7837 3.4752H18.8437C19.6237 3.4752 20.0837 3.9352 20.0837 4.7352V18.7552C20.0837 19.5652 19.6237 20.0252 18.8437 20.0252H4.7837C3.9937 20.0252 3.5237 19.5652 3.5237 18.7552Z",
        "geometry": {
          "width": 23.501953125,
          "height": 23.48828125
        }
      }
    },
    "repeat": {
      "bold": {
        "path": "M1.8437 14.6578C2.8737 14.6578 3.6737 13.8478 3.6737 12.8078V11.7478C3.6737 9.3378 5.2737 7.8578 7.8737 7.8578H18.2837V10.9078C18.2837 11.7578 18.7837 12.2678 19.6237 12.2678C20.0137 12.2678 20.3337 12.1278 20.5937 11.9078L26.3037 7.0978C26.9337 6.5578 26.9437 5.6978 26.3037 5.1678L20.5937 0.3578C20.3337 0.1378 20.0137 -0.0022 19.6237 -0.0022C18.7837 -0.0022 18.2837 0.5178 18.2837 1.3678V4.2678H8.0637C3.0937 4.2678 0.0037 6.9178 0.0037 11.2778V12.8078C0.0037 13.8478 0.8237 14.6578 1.8437 14.6578ZM29.7937 12.7678C28.7637 12.7678 27.9637 13.5878 27.9637 14.6178V15.6778C27.9637 18.0878 26.3437 19.5678 23.7637 19.5678H13.3537V16.5178C13.3537 15.6678 12.8337 15.1478 12.0037 15.1478C11.6237 15.1478 11.2937 15.2878 11.0337 15.5078L5.3137 20.3178C4.6937 20.8678 4.6937 21.7078 5.3137 22.2478L11.0337 27.0578C11.2937 27.2778 11.6237 27.4078 12.0037 27.4078C12.8337 27.4078 13.3537 26.9078 13.3537 26.0578V23.1578H23.5537C28.5337 23.1578 31.6237 20.5078 31.6237 16.1478V14.6178C31.6237 13.5878 30.8137 12.7678 29.7937 12.7678Z",
        "geometry": {
          "width": 31.623046875,
          "height": 27.412109375
        }
      }
    },
    "arrow.trianglehead.clockwise": {
      "bold": {
        "path": "M0.0027 17.3644C0.0027 25.2944 6.5227 31.8044 14.4327 31.8044C22.3627 31.8044 28.8727 25.2944 28.8727 17.3644C28.8727 13.2344 26.8827 8.9444 23.8727 6.5644C22.9127 5.7444 21.8227 5.7944 21.1827 6.5644C20.4627 7.3944 20.7427 8.4444 21.5027 9.2244C23.8327 11.2544 25.2827 14.0844 25.2827 17.3644C25.2927 23.3744 20.4527 28.2044 14.4327 28.2044C8.4327 28.2044 3.6127 23.3744 3.6127 17.3644C3.6127 12.4244 6.8527 8.3144 11.3327 7.0044V8.9244C11.3327 10.0944 12.2927 10.4444 13.2927 9.7244L18.2927 6.0944C19.1027 5.5244 19.0827 4.5844 18.2927 4.0044L13.3027 0.3844C12.3027 -0.3456 11.3327 -0.0156 11.3327 1.1644V3.2844C4.8827 4.6944 0.0027 10.5044 0.0027 17.3644Z",
        "geometry": {
          "width": 28.875,
          "height": 31.80084709867549
        }
      }
    },
    "arrow.trianglehead.2.clockwise.rotate.90": {
      "bold": {
        "path": "M7.8465 3.9249C6.9465 4.7049 6.9365 5.7949 7.5065 6.4849C8.0965 7.2049 9.1465 7.4149 10.1865 6.5749C12.0765 4.7449 14.6665 3.5949 17.5265 3.5949C22.9965 3.5949 27.3565 7.5349 28.2165 12.4849H26.0865C24.9265 12.4849 24.5865 13.4549 25.3065 14.4549L28.9165 19.4449C29.5065 20.2449 30.4365 20.2349 31.0265 19.4449L34.6265 14.4549C35.3665 13.4549 35.0365 12.4849 33.8565 12.4849H31.8665C30.9665 5.5949 24.9065 0.0049 17.5265 0.0049C13.7365 0.0049 10.3065 1.5449 7.8465 3.9249ZM0.3865 14.4149C-0.3435 15.4049 -0.0135 16.3749 1.1665 16.3749H3.1865C4.0865 23.2649 10.1465 28.8749 17.5265 28.8749C21.3165 28.8749 24.7565 27.3149 27.2165 24.9249C28.1065 24.1549 28.1265 23.0649 27.5665 22.3849C26.9565 21.6449 25.9265 21.4549 24.8865 22.2849C23.0065 24.1149 20.3965 25.2749 17.5265 25.2749C12.0565 25.2749 7.6965 21.3449 6.8365 16.3749H8.9265C10.0865 16.3749 10.4465 15.4249 9.7165 14.4249L6.0965 9.4149C5.5265 8.6149 4.5965 8.6249 4.0065 9.4149Z",
        "geometry": {
          "width": 35.02322493761829,
          "height": 28.875
        }
      }
    },
    "circlebadge.2": {
      "bold": {
        "path": "M10.4727 20.9438C11.9627 20.9438 13.4027 20.6138 14.6927 20.0338C15.9527 20.6038 17.3327 20.9438 18.8027 20.9438C24.5027 20.9438 29.2727 16.1737 29.2727 10.4738C29.2727 4.7538 24.5027 0.0038 18.7827 0.0038C17.3227 0.0038 15.9427 0.3238 14.6927 0.9138C13.3827 0.3238 11.9527 0.0038 10.4627 0.0038C4.7427 0.0038 0.0027 4.7538 0.0027 10.4738C0.0027 16.1737 4.7627 20.9438 10.4727 20.9438ZM10.4727 17.4638C6.6827 17.4638 3.4727 14.2638 3.4727 10.4738C3.4727 6.6738 6.6727 3.4737 10.4627 3.4737C14.2627 3.4737 17.4627 6.6838 17.4627 10.4738C17.4627 14.2638 14.2627 17.4638 10.4727 17.4638ZM20.9427 10.4738C20.9427 7.8238 19.9027 5.3637 18.2227 3.5038C18.4127 3.4838 18.5927 3.4737 18.7827 3.4737C22.5827 3.4737 25.7827 6.6838 25.7827 10.4738C25.7827 14.2638 22.5827 17.4638 18.8027 17.4638C18.6027 17.4638 18.4127 17.4638 18.2427 17.4338C19.9027 15.5738 20.9427 13.1238 20.9427 10.4738Z",
        "geometry": {
          "width": 29.271484375,
          "height": 20.9453125
        }
      }
    },
    "circle.grid.2x1": {
      "bold": {
        "path": "M8.6127 17.2444C13.3527 17.2444 17.2227 13.3544 17.2227 8.6144C17.2227 3.8644 13.3527 0.0044 8.6127 0.0044C3.8527 0.0044 0.0027 3.8644 0.0027 8.6144C0.0027 13.3544 3.8527 17.2444 8.6127 17.2444ZM29.9527 17.2444C34.7027 17.2444 38.5827 13.3544 38.5827 8.6144C38.5827 3.8644 34.7027 0.0044 29.9527 0.0044C25.2127 0.0044 21.3427 3.8644 21.3427 8.6144C21.3427 13.3544 25.1927 17.2444 29.9527 17.2444ZM8.6127 13.8644C5.7327 13.8644 3.3627 11.5144 3.3627 8.6144C3.3627 5.7244 5.7327 3.3744 8.6127 3.3744C11.4827 3.3744 13.8627 5.7444 13.8627 8.6144C13.8627 11.4944 11.4827 13.8644 8.6127 13.8644ZM29.9527 13.8644C27.0727 13.8644 24.7227 11.5144 24.7227 8.6144C24.7227 5.7244 27.0727 3.3744 29.9527 3.3744C32.8427 3.3744 35.2027 5.7444 35.2027 8.6144C35.2027 11.4944 32.8427 13.8644 29.9527 13.8644Z",
        "geometry": {
          "width": 38.58203125,
          "height": 17.240234375
        }
      }
    },
    "heart": {
      "bold": {
        "path": "M0.0037 8.9843C0.0037 14.8443 4.9337 20.6943 12.4537 25.6043C13.0837 26.0143 13.7637 26.4143 14.2237 26.4143C14.6837 26.4143 15.3637 26.0143 15.9937 25.6043C23.5137 20.6943 28.4537 14.8443 28.4537 8.9843C28.4537 3.6143 24.7237 0.0043 20.1637 0.0043C17.4437 0.0043 15.4237 1.1943 14.2237 2.9143C13.0337 1.1943 11.0037 0.0043 8.2837 0.0043C3.7337 0.0043 0.0037 3.6143 0.0037 8.9843ZM3.7337 8.9443C3.7337 5.7843 5.8837 3.6143 8.7337 3.6143C11.0337 3.6143 12.2737 4.9243 13.1137 6.1143C13.4937 6.6743 13.8037 6.9043 14.2237 6.9043C14.6437 6.9043 14.9137 6.6743 15.3437 6.1143C16.2237 4.9243 17.4137 3.6143 19.7037 3.6143C22.5737 3.6143 24.7237 5.7843 24.7237 8.9443C24.7237 13.3543 20.2637 18.4543 14.4337 22.3243C14.3437 22.3843 14.2737 22.4343 14.2237 22.4343C14.1737 22.4343 14.1137 22.3843 14.0137 22.3243C8.1937 18.4543 3.7337 13.3543 3.7337 8.9443Z",
        "geometry": {
          "width": 28.451171875,
          "height": 26.4140625
        }
      }
    },
    "bell": {
      "bold": {
        "path": "M0.0007 21.8584C0.0007 23.2984 1.0207 24.2684 2.6707 24.2684H8.0407C8.1507 26.8684 10.4207 29.3984 13.9007 29.3984C17.3907 29.3984 19.6607 26.8784 19.7707 24.2684H25.1407C26.7707 24.2684 27.8107 23.2984 27.8107 21.8584C27.8107 20.2584 26.5807 18.9884 25.2507 17.8284C24.1707 16.8984 23.9707 15.1084 23.6807 12.6784C23.3507 7.8584 21.6607 4.4284 18.2007 3.1884C17.5707 1.3084 15.9807 -0.0016 13.9007 -0.0016C11.8307 -0.0016 10.2407 1.3084 9.6107 3.1884C6.1507 4.4284 4.4607 7.8584 4.1307 12.6784C3.8407 15.1084 3.6407 16.8984 2.5607 17.8284C1.2307 18.9884 0.0007 20.2584 0.0007 21.8584ZM4.3307 20.9884V20.8384C4.8807 20.4684 5.6307 19.8684 6.2307 19.1284C7.1007 18.0884 7.4907 15.7484 7.6707 13.2884C7.9207 8.4784 9.4907 6.7284 11.4607 6.1884C11.7707 6.1284 11.9607 5.9784 12.0007 5.5484C12.1107 4.2284 12.8107 3.4084 13.9007 3.4084C15.0007 3.4084 15.6907 4.2284 15.8007 5.5484C15.8507 5.9784 16.0407 6.1284 16.3507 6.1884C18.3207 6.7284 19.8907 8.4784 20.1207 13.2884C20.3007 15.7484 20.7307 18.0884 21.5707 19.1284C22.1807 19.8684 22.8507 20.4684 23.3907 20.8384V20.9884ZM11.4207 24.2684H16.3907C16.3007 25.7484 15.2807 26.7284 13.9007 26.7284C12.5207 26.7284 11.5107 25.7484 11.4207 24.2684Z",
        "geometry": {
          "width": 27.80859375,
          "height": 29.39453125
        }
      }
    },
    "gearshape": {
      "bold": {
        "path": "M13.8327 30.4616H16.6227C17.8927 30.4616 18.9227 29.6516 19.1927 28.4416L19.7027 26.2616L19.9327 26.1816L21.8327 27.3616C22.9027 28.0116 24.1827 27.8316 25.0727 26.9316L27.0027 25.0216C27.9027 24.0916 28.0527 22.8216 27.4027 21.7816L26.2327 19.8916L26.3027 19.6716L28.4627 19.1716C29.6727 18.8716 30.4627 17.8516 30.4627 16.6016V13.9216C30.4627 12.6616 29.6827 11.6316 28.4627 11.3316L26.3327 10.8116L26.2327 10.5916L27.4127 8.7116C28.0827 7.6716 27.9227 6.4016 27.0027 5.4516L25.0727 3.5416C24.2027 2.6416 22.9127 2.4616 21.8427 3.1216L19.9427 4.2816L19.7027 4.2016L19.1927 2.0216C18.9227 0.8116 17.8927 0.0016 16.6227 0.0016H13.8327C12.5627 0.0016 11.5527 0.8216 11.2627 2.0216L10.7627 4.2016L10.5127 4.2816L8.6127 3.1216C7.5427 2.4716 6.2627 2.6416 5.3827 3.5416L3.4627 5.4516C2.5527 6.4016 2.3927 7.6716 3.0527 8.7116L4.2227 10.5916L4.1427 10.8116L1.9927 11.3316C0.7827 11.6316 0.0027 12.6616 0.0027 13.9216V16.6016C0.0027 17.8516 0.7927 18.8716 1.9927 19.1716L4.1527 19.6716L4.2427 19.8916L3.0627 21.7816C2.3927 22.8216 2.5527 24.0916 3.4627 25.0216L5.3827 26.9316C6.2727 27.8316 7.5627 28.0116 8.6227 27.3616L10.5227 26.1816L10.7627 26.2616L11.2627 28.4416C11.5527 29.6516 12.5627 30.4616 13.8327 30.4616ZM14.3827 27.3716C14.1627 27.3716 14.0527 27.2616 14.0227 27.0716L13.2327 23.7316C12.3027 23.5616 11.3927 23.1716 10.5827 22.6416L7.6727 24.4416C7.5027 24.5516 7.3427 24.5416 7.1927 24.3916L6.0127 23.2116C5.8527 23.0616 5.8627 22.9016 5.9627 22.7316L7.7627 19.8216C7.2827 19.0316 6.9027 18.1416 6.7127 17.2116L3.3727 16.4316C3.1827 16.3916 3.0727 16.3016 3.0727 16.0616V14.4416C3.0727 14.1916 3.1827 14.0916 3.3727 14.0516L6.7127 13.2716C6.9227 12.3316 7.3027 11.4016 7.7527 10.6516L5.9627 7.7416C5.8527 7.5716 5.8427 7.4116 5.9927 7.2616L7.1827 6.1016C7.3427 5.9516 7.4827 5.9316 7.6727 6.0416L10.5727 7.8216C11.2427 7.3716 12.2627 6.9416 13.2327 6.7216L14.0227 3.3916C14.0527 3.2016 14.1627 3.0916 14.3827 3.0916H16.0827C16.3127 3.0916 16.4027 3.2016 16.4427 3.3916L17.2427 6.7416C18.2127 6.9416 19.1027 7.3416 19.8827 7.8216L22.7727 6.0616C22.9727 5.9516 23.1027 5.9616 23.2727 6.1116L24.4627 7.2716C24.6127 7.4416 24.5927 7.5916 24.4827 7.7616L22.7127 10.6516C23.1627 11.4016 23.5527 12.3316 23.7527 13.2616L27.0827 14.0516C27.2927 14.0916 27.3827 14.1916 27.3827 14.4416V16.0616C27.3827 16.3016 27.2727 16.3916 27.0827 16.4316L23.7527 17.2216C23.5527 18.1316 23.1727 19.0616 22.6927 19.8216L24.4827 22.7216C24.5827 22.8916 24.5927 23.0516 24.4327 23.2016L23.2527 24.3816C23.0927 24.5316 22.9427 24.5416 22.7727 24.4316L19.8827 22.6416C19.0627 23.1716 18.2527 23.5316 17.2427 23.7316L16.4427 27.0716C16.4027 27.2616 16.3127 27.3716 16.0827 27.3716ZM15.2327 20.3816C18.0627 20.3816 20.3727 18.0716 20.3727 15.2316C20.3727 12.4116 18.0627 10.1016 15.2327 10.1016C12.4027 10.1016 10.0727 12.4116 10.0727 15.2316C10.0727 18.0716 12.4027 20.3816 15.2327 20.3816ZM15.2327 17.6416C13.9227 17.6416 12.8427 16.5616 12.8427 15.2316C12.8427 13.9316 13.9227 12.8516 15.2327 12.8516C16.5127 12.8516 17.5927 13.9316 17.5927 15.2316C17.5927 16.5416 16.5127 17.6416 15.2327 17.6416Z",
        "geometry": {
          "width": 30.4609375,
          "height": 30.4609375
        }
      }
    },
    "ellipsis.circle": {
      "bold": {
        "path": "M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM8.1027 16.6286C9.3127 16.6286 10.2927 15.6386 10.2927 14.4386C10.2927 13.2386 9.3127 12.2486 8.1027 12.2486C6.9027 12.2486 5.9227 13.2386 5.9227 14.4386C5.9227 15.6386 6.9027 16.6286 8.1027 16.6286ZM14.4227 16.6286C15.6227 16.6286 16.5927 15.6386 16.5927 14.4386C16.5927 13.2386 15.6227 12.2486 14.4227 12.2486C13.2027 12.2486 12.2327 13.2386 12.2327 14.4386C12.2327 15.6386 13.2027 16.6286 14.4227 16.6286ZM20.7227 16.6286C21.9327 16.6286 22.9027 15.6386 22.9027 14.4386C22.9027 13.2386 21.9327 12.2486 20.7227 12.2486C19.5227 12.2486 18.5427 13.2386 18.5427 14.4386C18.5427 15.6386 19.5227 16.6286 20.7227 16.6286Z",
        "geometry": {
          "width": 28.875,
          "height": 28.888671875
        }
      }
    },
    "bag": {
      "bold": {
        "path": "M0.0037 24.9471C0.0037 28.0571 1.7137 29.7471 4.8237 29.7471H20.8937C23.7937 29.7471 25.4837 28.0571 25.4837 24.9471V10.8371C25.4837 7.7471 23.7737 6.0471 20.6537 6.0471H19.1137C19.0737 2.6771 16.2537 -0.0029 12.7437 -0.0029C9.2437 -0.0029 6.4237 2.6771 6.3737 6.0471H4.8237C1.7137 6.0471 0.0037 7.7371 0.0037 10.8371ZM9.6637 6.0471C9.7037 4.2971 10.9637 2.9271 12.7437 2.9271C14.5237 2.9271 15.7937 4.2971 15.8337 6.0471ZM3.5237 24.5271V11.2771C3.5237 10.1171 4.1137 9.5671 5.2137 9.5671H20.2737C21.3737 9.5671 21.9537 10.1171 21.9537 11.2771V24.5271C21.9537 25.6871 21.3737 26.2271 20.5037 26.2271H5.2137C4.1137 26.2271 3.5237 25.6871 3.5237 24.5271Z",
        "geometry": {
          "width": 25.484375,
          "height": 29.75
        }
      }
    },
    "party.popper": {
      "bold": {
        "path": "M13.2728 3.688C14.3028 3.688 15.1228 2.868 15.1228 1.858C15.1228 0.838 14.3028 -0.002 13.2728 -0.002C12.2328 -0.002 11.4328 0.838 11.4328 1.858C11.4328 2.868 12.2328 3.688 13.2728 3.688ZM21.9828 5.878C23.5928 5.878 24.8828 4.578 24.8828 2.968C24.8828 1.338 23.5928 0.068 21.9828 0.068C20.3528 0.068 19.0728 1.338 19.0728 2.968C19.0728 4.578 20.3528 5.878 21.9828 5.878ZM33.5128 4.078C34.3528 4.078 35.0428 3.388 35.0428 2.528C35.0428 1.668 34.3528 0.968 33.5128 0.968C32.6328 0.968 31.9528 1.668 31.9528 2.528C31.9528 3.388 32.6328 4.078 33.5128 4.078ZM29.1428 4.608L26.6028 7.148C26.1128 7.668 26.1128 8.488 26.6028 8.998C27.1128 9.498 27.9428 9.498 28.4528 9.008L30.9928 6.468C31.4828 5.958 31.4828 5.128 30.9928 4.608C30.4628 4.118 29.6428 4.128 29.1428 4.608ZM22.9728 27.128C25.0228 26.278 25.2328 24.368 24.5528 22.228C26.2328 22.208 27.9028 22.358 29.5828 22.668C30.3128 22.848 30.9628 22.148 30.9628 21.408C30.9628 20.698 30.3928 20.248 29.7328 20.098C27.6128 19.698 25.5128 19.568 23.3928 19.678C22.7228 18.528 21.9028 17.408 21.0628 16.448L25.6728 11.858C26.1228 11.378 26.1628 10.538 25.6728 10.038C25.1528 9.518 24.3228 9.558 23.8428 10.018L19.2328 14.598C18.2628 13.738 17.1528 12.888 16.0128 12.208C16.1228 10.128 15.9728 8.048 15.5828 5.958C15.4328 5.308 14.9928 4.748 14.2828 4.748C13.5628 4.748 12.8528 5.378 13.0128 6.128C13.3328 7.748 13.4828 9.388 13.4828 11.038C11.4328 10.388 9.5828 10.678 8.6128 12.798L0.3228 31.188C-0.8772 33.878 1.4328 36.148 4.0628 35.038ZM19.3828 10.388C20.2628 10.388 20.9428 9.698 20.9428 8.818C20.9428 7.988 20.2628 7.278 19.3828 7.278C18.5428 7.278 17.8428 7.968 17.8428 8.818C17.8428 9.698 18.5428 10.388 19.3828 10.388ZM28.7528 17.418C30.1428 17.418 31.2828 16.328 31.2828 14.928C31.2828 13.538 30.1628 12.398 28.7528 12.398C27.3528 12.398 26.2628 13.538 26.2628 14.928C26.2628 16.328 27.3528 17.418 28.7528 17.418ZM34.9028 16.858C35.9128 16.858 36.7528 16.048 36.7528 15.008C36.7528 13.988 35.9128 13.168 34.9028 13.168C33.8528 13.168 33.0428 13.988 33.0428 15.008C33.0428 16.048 33.8628 16.858 34.9028 16.858ZM11.2828 13.648C11.5928 13.318 12.3128 13.368 13.3028 13.808C13.2328 14.438 13.1428 15.078 13.0128 15.718C12.8528 16.478 13.5528 17.078 14.2728 17.088C14.9428 17.088 15.4328 16.588 15.5828 15.878C15.6128 15.668 15.6528 15.448 15.6928 15.248C16.2028 15.628 16.7228 16.068 17.2828 16.558L16.7028 17.128C16.2028 17.638 16.2128 18.468 16.7028 18.978C17.2128 19.468 18.0428 19.478 18.5528 18.978L19.1228 18.398C19.6328 18.948 20.0728 19.478 20.4528 19.988C20.2428 20.028 20.0428 20.068 19.8228 20.098C19.1228 20.258 18.6228 20.758 18.6228 21.408C18.6228 22.138 19.2328 22.828 19.9728 22.698C20.6328 22.568 21.2728 22.458 21.9328 22.398C22.3828 23.418 22.4328 24.168 22.1028 24.488C21.3728 25.248 18.4428 24.008 15.1028 20.658C11.7528 17.308 10.5128 14.378 11.2828 13.648ZM3.0928 31.728L9.4628 17.598C10.2428 19.238 11.5428 20.998 13.1528 22.618C14.7128 24.188 16.4328 25.448 18.0228 26.218L3.5528 32.228C3.1828 32.388 2.8928 32.138 3.0928 31.728ZM34.1528 24.018C35.1628 24.018 35.9828 23.198 35.9828 22.178C35.9828 21.148 35.1628 20.328 34.1528 20.328C33.1228 20.328 32.3028 21.148 32.3028 22.178C32.3028 23.198 33.1228 24.018 34.1528 24.018Z",
        "geometry": {
          "width": 36.749139892045925,
          "height": 35.328048033378394
        }
      }
    },
    "plus": {
      "bold": {
        "path": "M0.0037 11.7316C0.0037 12.8816 0.9337 13.8116 2.0737 13.8116H9.6637V21.3916C9.6637 22.5316 10.5837 23.4716 11.7337 23.4716C12.8837 23.4716 13.8037 22.5316 13.8037 21.3916V13.8116H21.3937C22.5337 13.8116 23.4637 12.8816 23.4637 11.7316C23.4637 10.5916 22.5337 9.6616 21.3937 9.6616H13.8037V2.0816C13.8037 0.9416 12.8837 0.0016 11.7337 0.0016C10.5837 0.0016 9.6637 0.9416 9.6637 2.0816V9.6616H2.0737C0.9337 9.6616 0.0037 10.5916 0.0037 11.7316Z",
        "geometry": {
          "width": 23.4609375,
          "height": 23.474609375
        }
      }
    },
    "minus": {
      "bold": {
        "path": "M2.0337 4.1419H21.3537C22.4537 4.1419 23.4037 3.2019 23.4037 2.0619C23.4037 0.9419 22.4537 0.0019 21.3537 0.0019H2.0337C0.9937 0.0019 0.0037 0.9419 0.0037 2.0619C0.0037 3.2019 0.9937 4.1419 2.0337 4.1419Z",
        "geometry": {
          "width": 23.40625,
          "height": 4.142578125
        }
      }
    },
    "checkmark.circle": {
      "bold": {
        "path": "M14.4327 28.8886C22.3627 28.8886 28.8727 22.3686 28.8727 14.4386C28.8727 6.5186 22.3527 -0.0014 14.4327 -0.0014C6.5127 -0.0014 0.0027 6.5186 0.0027 14.4386C0.0027 22.3686 6.5227 28.8886 14.4327 28.8886ZM14.4327 25.2886C8.4327 25.2886 3.6127 20.4486 3.6127 14.4386C3.6127 8.4386 8.4227 3.5986 14.4327 3.5986C20.4427 3.5986 25.2827 8.4386 25.2827 14.4386C25.2827 20.4486 20.4527 25.2886 14.4327 25.2886ZM13.0027 20.9486C13.5627 20.9486 14.0727 20.6586 14.3927 20.1686L20.2627 11.0986C20.4827 10.7686 20.6327 10.4286 20.6327 10.0986C20.6327 9.2986 19.9227 8.7386 19.1527 8.7386C18.6527 8.7386 18.2127 9.0086 17.8827 9.5586L12.9727 17.4586L10.6927 14.6586C10.3527 14.2286 9.9827 14.0586 9.5327 14.0586C8.7327 14.0586 8.0927 14.6786 8.0927 15.4786C8.0927 15.8586 8.2127 16.1886 8.5027 16.5386L11.5627 20.1886C11.9627 20.6886 12.4327 20.9486 13.0027 20.9486Z",
        "geometry": {
          "width": 28.875,
          "height": 28.888671875
        }
      }
    },
    "chevron.left": {
      "bold": {
        "path": "M0.0041 12.5245C0.0041 13.1945 0.2441 13.7545 0.8041 14.3045L11.1441 24.4345C11.5641 24.8445 12.0541 25.0445 12.6641 25.0445C13.8641 25.0445 14.8641 24.0745 14.8641 22.8745C14.8641 22.2545 14.6041 21.7145 14.1541 21.2645L5.1441 12.5145L14.1541 3.7745C14.6041 3.3345 14.8641 2.7745 14.8641 2.1745C14.8641 0.9845 13.8641 0.0045 12.6641 0.0045C12.0541 0.0045 11.5641 0.2045 11.1441 0.6145L0.8041 10.7445C0.2441 11.2745 0.0141 11.8445 0.0041 12.5245Z",
        "geometry": {
          "width": 14.861328125,
          "height": 25.046875
        }
      }
    },
    "chevron.right": {
      "bold": {
        "path": "M14.8496 12.5245C14.8496 11.8445 14.5996 11.2745 14.0396 10.7445L3.7096 0.6145C3.2996 0.2045 2.7896 0.0045 2.1896 0.0045C0.9796 0.0045 -0.0004 0.9845 -0.0004 2.1745C-0.0004 2.7745 0.2496 3.3345 0.6996 3.7745L9.7096 12.5145L0.6996 21.2645C0.2496 21.7145 -0.0004 22.2545 -0.0004 22.8745C-0.0004 24.0745 0.9796 25.0445 2.1896 25.0445C2.7896 25.0445 3.2996 24.8445 3.7096 24.4345L14.0396 14.3045C14.6196 13.7545 14.8496 13.1945 14.8496 12.5245Z",
        "geometry": {
          "width": 14.84765625,
          "height": 25.046875
        }
      }
    },
    "chevron.up": {
      "bold": {
        "path": "M0.6137 11.1577C0.2037 11.5677 0.0037 12.0677 0.0037 12.6577C0.0037 13.8777 0.9737 14.8577 2.1737 14.8577C2.7737 14.8577 3.3337 14.6177 3.7837 14.1677L12.5337 5.1577L21.2737 14.1677C21.7137 14.6277 22.2837 14.8577 22.8737 14.8577C24.0737 14.8577 25.0437 13.8777 25.0437 12.6577C25.0437 12.0577 24.8437 11.5677 24.4337 11.1577L14.3137 0.8077C13.7837 0.2577 13.2037 -0.0023 12.5237 -0.0023C11.8537 -0.0023 11.2937 0.2477 10.7337 0.8077Z",
        "geometry": {
          "width": 25.046875,
          "height": 14.861328125
        }
      }
    },
    "chevron.down": {
      "bold": {
        "path": "M12.5237 14.8611C13.2037 14.8611 13.7837 14.6011 14.3137 14.0511L24.4337 3.7011C24.8437 3.2911 25.0437 2.8011 25.0437 2.2011C25.0437 0.9811 24.0737 0.0011 22.8737 0.0011C22.2837 0.0011 21.7237 0.2411 21.2737 0.7011L12.5337 9.7211L3.7837 0.7011C3.3337 0.2411 2.7737 0.0011 2.1737 0.0011C0.9737 0.0011 0.0037 0.9811 0.0037 2.2011C0.0037 2.7911 0.2037 3.2811 0.6137 3.7011L10.7337 14.0511C11.2937 14.6111 11.8537 14.8611 12.5237 14.8611Z",
        "geometry": {
          "width": 25.046875,
          "height": 14.861328125
        }
      }
    },
    "arrow.left": {
      "bold": {
        "path": "M0.0037 10.9806C0.0037 11.5106 0.2337 12.0706 0.6037 12.4406L9.5137 21.3306C9.9237 21.7406 10.4137 21.9406 10.8937 21.9406C12.0537 21.9406 12.8537 21.1406 12.8537 20.0706C12.8537 19.4806 12.5937 19.0006 12.2237 18.6506L9.1637 15.5906L6.1237 12.8006L9.1237 12.9606H24.5637C25.8037 12.9606 26.6237 12.1506 26.6237 10.9806C26.6237 9.7906 25.8037 9.0006 24.5637 9.0006H9.1237L6.1437 9.1606L9.1637 6.3706L12.2237 3.2906C12.5937 2.9406 12.8537 2.4706 12.8537 1.8706C12.8537 0.8106 12.0537 0.0006 10.8937 0.0006C10.4137 0.0006 9.9237 0.2006 9.5037 0.6306L0.6037 9.5106C0.2337 9.8806 0.0037 10.4406 0.0037 10.9806Z",
        "geometry": {
          "width": 26.619140625,
          "height": 21.943359375
        }
      }
    },
    "arrow.right": {
      "bold": {
        "path": "M26.6237 10.9806C26.6237 10.4406 26.3837 9.8806 26.0137 9.5106L17.1137 0.6306C16.6937 0.2006 16.2037 0.0006 15.7237 0.0006C14.5637 0.0006 13.7637 0.8106 13.7637 1.8706C13.7637 2.4706 14.0237 2.9406 14.3937 3.2906L17.4637 6.3706L20.4837 9.1606L17.5037 9.0006H2.0537C0.8237 9.0006 0.0037 9.7906 0.0037 10.9806C0.0037 12.1506 0.8237 12.9606 2.0537 12.9606H17.5037L20.4937 12.8006L17.4637 15.5906L14.3937 18.6506C14.0237 19.0006 13.7637 19.4806 13.7637 20.0706C13.7637 21.1406 14.5637 21.9406 15.7237 21.9406C16.2037 21.9406 16.6937 21.7406 17.1037 21.3306L26.0137 12.4406C26.3837 12.0706 26.6237 11.5106 26.6237 10.9806Z",
        "geometry": {
          "width": 26.619140625,
          "height": 21.943359375
        }
      }
    },
    "arrow.up": {
      "bold": {
        "path": "M10.9637 26.1851C12.1537 26.1851 12.9437 25.3651 12.9437 24.1351V8.9551L12.8237 5.9851L15.5737 9.1651L18.6437 12.2251C19.0137 12.5951 19.4837 12.8351 20.0737 12.8351C21.1337 12.8351 21.9437 12.0451 21.9437 10.9251C21.9437 10.4051 21.7337 9.9251 21.3237 9.5051L12.4237 0.6051C12.0537 0.2151 11.5137 -0.0049 10.9637 -0.0049C10.4337 -0.0049 9.8737 0.2151 9.5037 0.6051L0.6137 9.5051C0.2037 9.9251 0.0037 10.4051 0.0037 10.9251C0.0037 12.0451 0.8037 12.8351 1.8737 12.8351C2.4737 12.8351 2.9437 12.5951 3.2937 12.2251L6.3737 9.1651L9.1237 5.9851L8.9837 8.9551V24.1351C8.9837 25.3651 9.7937 26.1851 10.9637 26.1851Z",
        "geometry": {
          "width": 21.943359375,
          "height": 26.181640625
        }
      }
    },
    "arrow.down": {
      "bold": {
        "path": "M10.9637 -0.0049C9.7937 -0.0049 8.9837 0.8251 8.9837 2.0551V17.2251L9.1237 20.1951L6.3737 17.0251L3.2937 13.9551C2.9437 13.5851 2.4737 13.3451 1.8737 13.3451C0.8037 13.3451 0.0037 14.1351 0.0037 15.2551C0.0037 15.7751 0.2037 16.2551 0.6137 16.6751L9.5037 25.5851C9.8737 25.9651 10.4337 26.1851 10.9637 26.1851C11.5137 26.1851 12.0537 25.9651 12.4237 25.5851L21.3237 16.6751C21.7337 16.2551 21.9437 15.7751 21.9437 15.2551C21.9437 14.1351 21.1337 13.3451 20.0737 13.3451C19.4837 13.3451 19.0137 13.5851 18.6437 13.9551L15.5737 17.0251L12.8237 20.1951L12.9437 17.2251V2.0551C12.9437 0.8251 12.1537 -0.0049 10.9637 -0.0049Z",
        "geometry": {
          "width": 21.943359375,
          "height": 26.181640625
        }
      }
    },
    "arrow.up.backward.square": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM8.8437 16.9277C9.6637 16.9277 10.1837 16.3477 10.1837 15.4377V13.5777L9.9837 11.8777L11.6037 13.7177L15.9437 18.0477C16.2837 18.3777 16.6637 18.5277 17.1137 18.5277C17.9637 18.5277 18.6337 17.9277 18.6337 17.0177C18.6337 16.6077 18.4537 16.1977 18.1537 15.9177L13.7937 11.5377L11.9337 9.9077L13.5537 10.1277H15.5437C16.4437 10.1277 17.0337 9.6077 17.0337 8.7877C17.0337 7.9677 16.4437 7.4677 15.5337 7.4677H9.2937C8.1937 7.4677 7.5037 8.0677 7.5037 9.2277V15.4377C7.5037 16.3277 8.0237 16.9277 8.8437 16.9277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "arrow.up.right.square": {
      "bold": {
        "path": "M4.8237 26.1377H21.3137C24.4437 26.1377 26.1437 24.4477 26.1437 21.3377V4.7977C26.1437 1.6977 24.4437 -0.0023 21.3137 -0.0023H4.8237C1.7137 -0.0023 0.0037 1.6977 0.0037 4.7977V21.3377C0.0037 24.4477 1.7137 26.1377 4.8237 26.1377ZM5.2137 22.6177C4.1137 22.6177 3.5237 22.0777 3.5237 20.9177V5.2377C3.5237 4.0777 4.1137 3.5277 5.2137 3.5277H20.9337C22.0237 3.5277 22.6137 4.0777 22.6137 5.2377V20.9177C22.6137 22.0777 22.0237 22.6177 20.9337 22.6177ZM17.3037 16.9277C18.1337 16.9277 18.6337 16.3277 18.6337 15.4377V9.2277C18.6337 8.0677 17.9637 7.4677 16.8437 7.4677H10.6137C9.7037 7.4677 9.1237 7.9677 9.1237 8.7877C9.1237 9.6077 9.7037 10.1277 10.6137 10.1277H12.6037L14.2037 9.9077L12.3637 11.5377L7.9937 15.9177C7.6937 16.1977 7.5037 16.6077 7.5037 17.0177C7.5037 17.9277 8.1937 18.5277 9.0337 18.5277C9.4837 18.5277 9.8537 18.3777 10.2137 18.0477L14.5337 13.7177L16.1637 11.8777L15.9737 13.5777V15.4377C15.9737 16.3477 16.4837 16.9277 17.3037 16.9277Z",
        "geometry": {
          "width": 26.140625,
          "height": 26.140625
        }
      }
    },
    "arrow.left.arrow.right": {
      "bold": {
        "path": "M0.5854 7.4328C-0.2046 8.1928 -0.1946 9.3928 0.5854 10.1428L7.6454 17.0028C7.9854 17.3528 8.5054 17.5728 8.9754 17.5728C10.0354 17.5728 10.7754 16.8128 10.7754 15.7628C10.7754 15.2728 10.6154 14.8328 10.2554 14.4928L7.3754 11.7128L5.9854 10.5428L8.5054 10.6128H25.4554C26.4954 10.6128 27.2754 9.8328 27.2754 8.7928C27.2754 7.7428 26.4954 6.9628 25.4554 6.9628H8.5054L5.9854 7.0228L7.3754 5.8528L10.2554 3.0728C10.6154 2.7528 10.7754 2.3128 10.7754 1.8028C10.7754 0.7528 10.0354 0.0028 8.9754 0.0028C8.5054 0.0028 7.9854 0.2228 7.6454 0.5628ZM26.6854 26.1128C27.4854 25.3628 27.4654 24.1628 26.6854 23.4028L19.6354 16.5428C19.2954 16.2028 18.7754 15.9828 18.3054 15.9828C17.2454 15.9828 16.5054 16.7328 16.5054 17.7828C16.5054 18.2828 16.6654 18.7128 17.0254 19.0628L19.9054 21.8328L21.2854 23.0128L18.7754 22.9428H1.8354C0.7854 22.9428 0.0054 23.7228 0.0054 24.7628C0.0054 25.8128 0.7854 26.5928 1.8354 26.5928H18.7754L21.2854 26.5228L19.9054 27.7028L17.0254 30.4728C16.6654 30.8028 16.5054 31.2428 16.5054 31.7428C16.5054 32.8028 17.2454 33.5528 18.3054 33.5528C18.7754 33.5528 19.2954 33.3328 19.6354 32.9928Z",
        "geometry": {
          "width": 27.278830884007853,
          "height": 33.55078125
        }
      }
    },
    "arrow.uturn.left": {
      "bold": {
        "path": "M26.7837 17.3115C26.7837 11.5215 22.8837 7.5515 16.7337 7.5515H9.1037L6.0137 7.7015L8.0937 5.9915L10.8537 3.2915C11.2237 2.9415 11.4737 2.5015 11.4737 1.8915C11.4737 0.8115 10.7037 0.0015 9.5537 0.0015C9.0537 0.0015 8.5337 0.2215 8.1337 0.6115L0.5837 8.0615C0.2237 8.4315 0.0037 8.9915 0.0037 9.5315C0.0037 10.0715 0.2237 10.6215 0.5837 10.9915L8.1337 18.4415C8.5337 18.8415 9.0537 19.0615 9.5537 19.0615C10.7037 19.0615 11.4737 18.2515 11.4737 17.1715C11.4737 16.5615 11.2237 16.1215 10.8537 15.7615L8.0937 13.0815L6.0137 11.3715L9.1037 11.5115H16.5937C20.5537 11.5115 22.9037 13.8815 22.9037 17.2315C22.9037 20.5715 20.5537 22.9815 16.5937 22.9815H13.3537C12.1937 22.9815 11.3437 23.8615 11.3437 24.9515C11.3437 26.0615 12.2137 26.9315 13.3537 26.9315H16.8537C22.9437 26.9315 26.7837 23.1615 26.7837 17.3115Z",
        "geometry": {
          "width": 26.783203125,
          "height": 26.93359375
        }
      }
    }
  }
}
</file>

<file path="dieter/scripts/build-icons.mjs">
// AUTO-GENERATED BUILD SCRIPT PER SPEC
import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import url from 'url';

const __dirname = path.dirname(url.fileURLToPath(import.meta.url));
const ROOT = path.resolve(__dirname, '..');
const SRC_SVG_DIR = path.join(ROOT, 'icons', 'svg');
const DIST_DIR = path.join(ROOT, 'dist');
const DIST_ICONS_DIR = path.join(DIST_DIR, 'icons');
const DIST_INDEX_D_TS = path.join(DIST_DIR, 'icons.d.ts');
const DIST_INDEX_JS = path.join(DIST_DIR, 'icons.js');

fs.mkdirSync(DIST_ICONS_DIR, { recursive: true });

function optimizeOrCopy(inPath, outPath) {
  try {
    execSync(`npx --yes svgo -q -o "${outPath}" "${inPath}"`, { stdio: 'ignore' });
  } catch {
    fs.copyFileSync(inPath, outPath);
  }
}

function toIconName(file) {
  return path.basename(file).replace(/\.svg$/i, '').replace(/[_\s]+/g, '-').toLowerCase();
}

if (!fs.existsSync(SRC_SVG_DIR)) {
  console.error('[dieter:icons] Missing icons/svg folder.');
  process.exit(1);
}

const files = fs.readdirSync(SRC_SVG_DIR).filter(f => f.toLowerCase().endsWith('.svg'));
if (files.length === 0) {
  console.error('[dieter:icons] No SVGs found in icons/svg. Aborting.');
  process.exit(1);
}

const registry = [];
for (const f of files) {
  const name = toIconName(f);
  const src = path.join(SRC_SVG_DIR, f);
  const out = path.join(DIST_ICONS_DIR, `${name}.svg`);
  optimizeOrCopy(src, out);
  registry.push({ name, path: `/dieter/icons/${name}.svg` });
}

const union = registry.map(r => `'${r.name}'`).sort().join(' | ') || 'never';
const dts = `// AUTO-GENERATED. DO NOT EDIT.
export type IconName = ${union};
export type IconEntry = { name: IconName; path: string };
export declare const registry: ReadonlyArray<IconEntry>;
export declare function iconPath(name: IconName): string;
`;
fs.writeFileSync(DIST_INDEX_D_TS, dts, 'utf8');

const js = `// AUTO-GENERATED. DO NOT EDIT.
export const registry = ${JSON.stringify(registry)};
export function iconPath(name) {
  const hit = registry.find(r => r.name === name);
  if (!hit) throw new Error(` + "`" + `@ck/dieter: unknown icon "\${name}"` + "`" + `);
  return hit.path;
}
`;
fs.writeFileSync(DIST_INDEX_JS, js, 'utf8');

console.log(`[dieter:icons] Built ${registry.length} icons → ${DIST_ICONS_DIR}`);
</file>

<file path="dieter/design-system.md">
# Dieter Design System — Authoritative Rules (v0)

## Scope
Dieter is Clickeen’s presentation layer. It provides:
- Tokens (colors, typography, spacing, states, a11y)
- Theme contracts (light, dark, high-contrast via `data-theme="hc"`)
- Primitive components styled **only** with tokens
- Accessibility, performance, and responsiveness guardrails

## Non-Negotiables
1) **Tokens-Only**: No raw hex/px/hard-coded values in component CSS. Always use CSS variables from `dieter/tokens/tokens.css`.
2) **Font Source**: Inter must be loaded **only** from Google Fonts. No `rsms.me`, no Roboto/Ubuntu.
3) **Accessibility First**:
   - Visible `:focus-visible` rings using focus tokens.
   - 44px min touch targets for interactive controls.
   - Labels linked to controls; `aria-describedby` for help/error.
   - Inline errors + summary patterns for validation; use appropriate live regions.
4) **Theming Safety**:
   - Light/Dark auto with `prefers-color-scheme`.
   - High-contrast via `data-theme="hc"` on `<html>` or `<body>`.
   - No visible flash during theme changes; state layers use tokens.
5) **Performance & DX**:
   - Minimal CSS; no unused declarations.
   - REM-based sizing; no layout thrash.
   - Keep components dependency-free (tokens-only CSS).

## Tokens (Contract)
Source of truth: `dieter/tokens/tokens.css`

- **Typography**: REM scale with utilities (`.text-10` … `.text-32`, `.text-title-fluid`).
- **Spacing**: 4px grid via `--space-*` and utilities (`.p-*`, `.m-*`, `.px-*`, `.py-*`, `.mx-*`, `.my-*`).
- **Colors (Semantic Roles)**: `--color-text-*`, `--color-surface-*`, `--color-border-*`, `--color-primary-*`, `--color-success-*`, `--color-danger-*`, etc.
- **States / Layers**: hover/active/disabled overlays via tokens; no ad-hoc alpha hacks.
- **Focus / A11y**: `--focus-ring-width`, `--focus-ring-offset`, `--focus-ring-color`; reduced motion support.
- **Theming**: overrides for `:root`, `@media (prefers-color-scheme: dark)`, and `[data-theme="hc"]`.

If a needed value is missing, **add a new token** (with naming rationale) before using it.

## Components (v0, tokens-only)
- Button: sizes sm/md/lg; hover/active/focus states via tokens; min-height ≥ 44px.
- Input / Textarea: label/help/error wiring; `aria-invalid`; tokens for borders/backgrounds.
- Select (native): tokens-only; accessible focus; min-height ≥ 44px.
- Checkbox/Radio (native): labeled rows ≥ 44px; radiogroup via `<fieldset><legend>…`.
- Form Group & Validation: label/field layout; inline and summary patterns; live region semantics.

**Do not** introduce JS or third-party CSS here. Components remain CSS+HTML primitives using tokens.

## Playground & Verification
- `playground.html` demonstrates tokens, utilities, themes, and components.
- Theme toggles (Light/Dark/HC) and REM scaling control (14–20) are provided.
- Use the playground to verify regressions visually before committing.

## Contribution Rules
1) Never edit generated/third-party files (none today).
2) Only modify files listed in task prompts; no drive-by refactors.
3) Commit small and atomic; message explains **why** (`feat(dieter): …`).
4) Add an *Acceptance Note* in PRs: what changed, where, impact.

## Future Contracts (Placeholders, do not implement yet)
- `tokens.json` mirror + typed exports
- `components/index.ts` for prop contracts
- ESLint/Stylelint rules to enforce tokens-only usage
- Ladle/Docs site for internal browsing (post-foundation)

## Font Source (canonical)
Load Inter **only** from Google Fonts:
```html
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
</file>

<file path="dieter/tokens.css">
@import './tokens/tokens.css';
</file>

<file path="dieter/tsconfig.json">
{
  "compilerOptions": {
    "strict": true,
    "noEmit": true,
    "skipLibCheck": true,
    "module": "esnext",
    "target": "es2022",
    "moduleResolution": "bundler",
    "verbatimModuleSyntax": true,
    "baseUrl": ".",
    "types": []
  },
  "include": ["components/index.ts"]
}
</file>

<file path="documentation/systems/_template.md">
# System: <Codename> — <Purpose>

## Identity
- Tier: Core|Supporting
- Owner: Platform
- Status: Active

## Interfaces
- Inputs:
- Outputs:

## Dependencies
- Depends on:
- Used by:

## Deployment
- Location:
- Notes:

## Rules
- Key constraints:

## Links
- Back: ../..

---
</file>

<file path="documentation/systems/atlas.md">
# System: Atlas — Config & Cache Layer
## Identity
- Tier: Core
- Purpose: Edge cache for widget configs, decouple Venice from Michael
## Interfaces
- KV lookups, cache invalidations
## Dependencies
- Depends on: Michael
- Used by: Venice
## Deployment
- c-keen-embed (edge functions + KV)
## Rules
- Stale-while-revalidate
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/berlin.md">
# System: Berlin — Observability & Security
## Identity
- Tier: Supporting
- Purpose: Logs, metrics, rate limiting, Sentry
## Interfaces
- Logging sinks, metrics exporters, rate limit middleware
## Dependencies
- Used by: All services
## Deployment
- c-keen-app, c-keen-embed
## Rules
- PII-safe logs, enforce rate limits at edge where possible
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/bob.md">
# System: Bob — Widget Builder (includes Studio)
## Identity
- Tier: Core
- Purpose: Configuration UI, live preview, inline editing
## Interfaces
- Builder UI; Studio host shell at /studio (iframe loads /dieter/components.html)
## Dependencies
- Depends on: Paris, Michael, Oslo, Copenhagen
## Deployment
- c-keen-app
## Rules
- Studio shell imports NO Dieter CSS directly; only the iframe does
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/cairo.md">
# System: Cairo — Custom Domains
## Identity
- Tier: Supporting
- Purpose: Custom domain management
## Interfaces
- Domain provisioning APIs
## Dependencies
- Used by: Site, Bob
## Deployment
- c-keen-app
## Rules
- Enforce HTTPS; auto-renew certificates
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/copenhagen.md">
# System: Copenhagen — AI Service
## Identity
- Tier: Core
- Purpose: Centralized AI orchestration for all systems
## Interfaces
- Edge functions; request brokering
## Dependencies
- Used by: Bob, Paris
## Deployment
- Supabase Edge Functions
## Rules
- All AI calls centralized here
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/denver.md">
# System: Denver — Asset Storage & CDN
## Identity
- Tier: Supporting
- Purpose: File and asset storage with CDN delivery
## Interfaces
- Upload APIs, signed URLs
## Dependencies
- Used by: Venice, Bob, Site
## Deployment
- Vercel Blob and/or Supabase Storage
## Rules
- Public assets cacheable; private assets signed, time-limited
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/geneva.md">
# System: Geneva — Schema Registry
## Identity
- Tier: Supporting
- Purpose: Validation of template/config payloads
## Interfaces
- JSON schema registry and validation API
## Dependencies
- Used by: Paris, Michael
## Deployment
- c-keen-app (registry UI), Supabase (schemas)
## Rules
- Breaking schema changes require migrations
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/helsinki.md">
# System: Helsinki — Analytics Warehouse
## Identity
- Tier: Supporting
- Purpose: BI and analytics aggregates
## Interfaces
- ETL jobs, query endpoints
## Dependencies
- Depends on: Michael
- Used by: App, Site
## Deployment
- Supabase (warehouse)
## Rules
- Aggregates only; no PII persistence without approval
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/lisbon.md">
# System: Lisbon — Email/Notifications
## Identity
- Tier: Supporting
- Purpose: Transactional emails and notifications
## Interfaces
- Email send API, templates
## Dependencies
- Used by: Robert, Tokyo, Bob
## Deployment
- c-keen-app
## Rules
- DKIM/SPF required; unsubscribe headers for marketing
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/michael.md">
# System: Michael — Backend Data Plane
## Identity
- Tier: Core
- Purpose: Configs, submissions, operational data
## Interfaces
- CRUD for widget configs, submission ingestion
## Dependencies
- Depends on: Geneva
- Used by: Bob, Venice, Atlas, Helsinki
## Deployment
- Supabase
## Rules
- Operational data only (analytics aggregates → Helsinki)
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/milan.md">
# System: Milan — Localization
## Identity
- Tier: Supporting
- Purpose: i18n, language routing
## Interfaces
- Translation bundles, locale resolver
## Dependencies
- Used by: App, Site, Venice
## Deployment
- c-keen-app and c-keen-site
## Rules
- Default locale en-US, lazy-load others
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/oslo.md">
# System: Oslo — Design System
## Identity
- Tier: Core
- Purpose: Tokens, components, motion primitives (formerly "Dieter")
## Interfaces
- /dieter/tokens/tokens.css, /dieter/components/index.ts, /dieter/icons/*
## Dependencies
- Used by: Bob, Venice, Site
## Deployment
- Served by c-keen-app under /dieter/*
## Rules
- Pure CSS + TS contracts; no framework lock-in
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/paris.md">
# System: Paris — Templates

## Identity
- Tier: Core
- Purpose: Template catalog for widgets
- Owner: Platform

## Interfaces
- GET templates, GET template/:id (served via app UI; data in Supabase)
- Outputs TemplateConfig (validated by Geneva)

## Dependencies
- Depends on: Geneva
- Used by: Bob, Venice

## Deployment
- Data in Supabase; UI in c-keen-app

## Rules
- Template payloads small (<50KB)
- Must validate against Geneva

## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/phoenix.md">
# System: Phoenix — Event Bus
## Identity
- Tier: Supporting
- Purpose: Async messaging (V0 Redis/Vercel KV)
## Interfaces
- Publish/subscribe topics, event schemas
## Dependencies
- Used by: Bob, Michael, Atlas
## Deployment
- c-keen-embed (KV) and c-keen-app producers/consumers
## Rules
- At-least-once delivery; idempotent handlers
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/prague.md">
# System: Prague — Marketplace & Discovery
## Identity
- Tier: Supporting
- Purpose: SEO, gallery and discovery
## Interfaces
- Public gallery pages; search endpoints
## Dependencies
- Used by: Site
## Deployment
- c-keen-site
## Rules
- Fast, static-first pages
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/robert.md">
# System: Robert — User & Workspace Management
## Identity
- Tier: Core
- Purpose: Auth, roles, invites
## Interfaces
- Supabase Auth; REST endpoints via app
## Dependencies
- Used by: Bob, Tokyo
## Deployment
- Supabase + c-keen-app
## Rules
- Role-based access enforced at API
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/stockholm.md">
# System: Stockholm — Growth & Experimentation
## Identity
- Tier: Supporting
- Purpose: A/B tests, feature flags
## Interfaces
- Flag evaluation API, experiments dashboard
## Dependencies
- Used by: App, Site
## Deployment
- c-keen-app
## Rules
- Kill switches must be safe-by-default
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/tokyo.md">
# System: Tokyo — Billing & Upsell
## Identity
- Tier: Core
- Purpose: Stripe billing, entitlements
## Interfaces
- Webhooks, customer portal
## Dependencies
- Depends on: Robert
- Used by: Bob
## Deployment
- Supabase functions + c-keen-app UI
## Rules
- Entitlements cached at edge via Atlas
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/venice.md">
# System: Venice — Embed Runtime & Delivery
## Identity
- Tier: Core
- Purpose: Shadow DOM runtime (<28KB gzipped) + preview
## Interfaces
- Embed JS, beacon analytics, preview rendering
## Dependencies
- Depends on: Atlas, Michael
- Used by: External sites
## Deployment
- c-keen-embed (edge)
## Rules
- Size budget <28KB gzipped; no framework deps
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/systems/zurich.md">
# System: Zurich — Integrations
## Identity
- Tier: Supporting
- Purpose: Webhooks and third-party connectors (Zapier, etc.)
## Interfaces
- Incoming/outgoing webhooks, connector configs
## Dependencies
- Used by: Bob, Michael
## Deployment
- c-keen-app
## Rules
- Retries with backoff; signed webhooks
## Links
- Back: ../../CONTEXT.md
</file>

<file path="documentation/migrations.md">
# Migrations

- Track breaking changes across versions.  
- Every breaking change requires an entry in `breaking-changes.md`.

# Migration: v0 → v1

- Consolidate Dieter into Oslo (served by c-keen-app)  
- Preview path standardized to `/dieter/components.html`


# Breaking Changes

- 2025-09-09: Lockfile enforcement in CI; subdir installs must `cd` to repo root and use `--filter`.

### Migration — Tooling Consistency & Asset Copying (September 11, 2025)
**Why:** Prevent pnpm/version drift and symlink fragility in CI/Vercel.  
**Steps:**
1. Declare pnpm only in root `package.json` (`"packageManager": "pnpm@10.15.1"` or current).  
2. Ensure deployable packages declare `"engines": { "node": "20.x" }`.  
3. Remove pnpm version from workflows; keep frozen installs.  
4. Replace Dieter symlink with **copy-on-build** step to `apps/app/public/dieter/`.  
**Rollback:** Revert workflow/manifest changes together; CI should fail on drift.
</file>

<file path="documentation/Playbooks.md">
<!-- =============================== -->
<!-- File: debugging.updated.md -->
<!-- =============================== -->

# Debugging Playbook

## General
1. Verify Node 20.x and pnpm are installed.
2. Run `pnpm install --frozen-lockfile` at repo root.
3. Confirm you are working in the correct Vercel project for the affected app.
4. Use `pnpm -r build` to ensure all packages compile before local runs.

## Studio Shell Issues

### Studio assets not loading
**Symptoms:** Builder screens are blank; console shows 404 for Studio files.  
**Checks:**
- Host serves:
  - `/vendor/studio/studio.css`
  - `/vendor/studio/studio.js`
- Verify 200 responses in DevTools → Network.
- Confirm build step was run: `pnpm --filter @ck/studio-shell build` and artifacts were copied to host `/public/vendor/studio/`.

**Fixes:**
- Rebuild Studio package and re-copy `dist/*` to the host’s `/public/vendor/studio/`.
- Redeploy the host app (push to main / trigger Vercel deployment).

---

### `studio:ready` never fires
**Symptoms:** Host code waiting on `Studio.ready()` hangs or events never appear.  
**Checks:**
- Ensure `<script src="/vendor/studio/studio.js"></script>` is included exactly once and after DOM (or use `defer`).
- Required slot IDs are present in the host DOM:
  - `#slot-templateRow` (optional: auto-hides when empty)
  - `#slot-left`
  - `#slot-center` (must contain `#centerCanvas`)
  - `#slot-right`
- From console: `await window.Studio?.ready()` — should resolve with current state.

**Fixes:**
- Load Studio script earlier (with `defer`) or call host init after `Studio.ready()`.
- Add missing slots; ensure `#centerCanvas` exists inside `#slot-center`.

---

### Theme / viewport not applying
**Symptoms:** Toggling light/dark or desktop/mobile has no visual effect.  
**Checks:**
- Preview content is nested inside **`#centerCanvas`** (not elsewhere).
- DevTools: `#centerCanvas` has classes:
  - `.studio-theme-light` or `.studio-theme-dark`
  - `.studio-viewport-desktop` or `.studio-viewport-mobile`

**Fixes:**
- Move preview container inside `#centerCanvas`.
- Ensure host did not override or remove Studio-applied classes.

---

### Mount / unmount errors
**Symptoms:** Exceptions like “Slot center already occupied” or “Cannot unmount empty slot”.  
**Why:** Studio **throws** on slot conflicts by design.  
**Fixes:**
- Always `unmount(slot)` before re-`mount(slot, el)`.
- Reuse a single root element per slot; update its children instead of remounting the slot root.

---

### Panel collapse feedback loops
**Symptoms:** Infinite toggling, UI flapping.  
**Checks:**
- Listen for `studio:panel` payload `{ side, collapsed, source }`.
- If you programmatically call `togglePanel(..., 'host')`, ignore subsequent `studio:panel` events where `source === 'host'`.

**Fixes:**
- Gate your handler on `source === 'user'` when reflecting UI state back into your store.

---

### CSS collisions (Studio vs host content)
**Symptoms:** Unexpected spacing/overflow or fonts.  
**Checks:**
- Studio avoids Shadow DOM; use **CSS containment** around host content.
- Confirm Oslo/Dieter tokens are loaded and not overridden downstream.

**Fixes:**
- Wrap host content in a container with `contain: layout style;` or similar.
- Scope host styles away from `.studio-*` classes.

---

### Asset caching / stale files
**Symptoms:** Changes to Studio don’t appear after deploy.  
**Checks:**
- Vercel cache for `/vendor/studio/*`.
- Service Worker (if any) on the host app.

**Fixes:**
- Invalidate Vercel cache or bump asset filename/version.
- Clear or update SW precache list; redeploy.

---

## Quick Console Recipes
- Await readiness:
  ```js
  await window.Studio.ready();

  # Playbook: Incident Response

- Identify failing deployment (app/site/embed)
- Check Vercel logs; validate install step uses root lockfile
- Roll back to previous green deploy if needed


# Playbook: Deployment

## Production
- Push to `main` triggers Vercel deploys (app/site/embed)
- Clear cache when lockfile or root install strategy changes

## Common Pitfalls (recently fixed)
- Frozen lockfile failures when running install from subdir (Root Directory set) → run installs at repo root with `--filter` and ensure `use-lockfile=true`.
- Missing Next routes manifest → ensure build runs in the subdir with `pnpm build` and correct Root Directory.

#### Playbook — pnpm Version Conflict (ERR_PNPM_BAD_PM_VERSION)
**Symptoms:** “Multiple versions of pnpm specified” in CI logs.  
**Fix:**  
1. Confirm root `package.json` `"packageManager"` (canonical).  
2. Remove any pnpm `version:` from workflows.  
3. Ensure deployable packages set `"engines": { "node": "20.x" }`.  
4. Re-run CI with `pnpm install --frozen-lockfile`.  
**Do Not:** Use `--no-frozen-lockfile` or pin a different pnpm in CI.

#### Playbook — Frozen Lockfile Failure
**Symptoms:** `pnpm install --frozen-lockfile` fails in CI.  
**Fix:**  
1. DO NOT bypass.  
2. Run `pnpm install` locally with the canonical pnpm, commit updated lockfile.  
3. Re-run CI.  
**Guardrail:** CI step fails if `--no-frozen-lockfile` is used.
</file>

<file path="documentation/supabase-schema-sync.yml">
name: Supabase Schema Sync

on:
  schedule:
    - cron: "0 2 * * *"   # every day at 2am UTC
  workflow_dispatch:       # allow manual runs

jobs:
  schema-dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Supabase CLI
        run: npm install -g supabase
      - name: Dump schema
        run: supabase db dump --db-url ${{ secrets.SUPABASE_DB_URL }} --schema public > supabase/schema.sql
      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add supabase/schema.sql
          git commit -m "chore: update schema [skip ci]" || echo "No changes to commit"
          git push
</file>

<file path="packages/studio-shell/src/index.js">
(function() {
  const listeners = new Map();
  const slots = new Map();
  const validSlots = new Set([
    'slot-templateRow',
    'slot-left',
    'slot-center',
    'slot-right'
  ]);

  let state = Object.freeze({
    theme: 'light',
    viewport: 'desktop',
    leftCollapsed: false,
    rightCollapsed: false,
    panel: null
  });

  let readyResolve;
  const readyPromise = new Promise((resolve) => { readyResolve = resolve; });
  let readyFired = false;

  function freeze(obj) { return Object.freeze({ ...obj }); }

  function emit(event, payload) {
    const frozen = freeze(payload || {});
    const cbs = listeners.get(event);
    if (cbs) {
      cbs.forEach(cb => { try { cb(frozen); } catch (e) { setTimeout(() => { throw e; }); } });
    }
  }

  const validEvents = new Set(['studio:ready','studio:theme','studio:viewport','studio:panel']);

  function on(event, handler) {
    if (!validEvents.has(event)) throw new Error(`Unknown event: ${event}`);
    if (!listeners.has(event)) listeners.set(event, new Set());
    listeners.get(event).add(handler);
    return () => listeners.get(event)?.delete(handler);
  }

  function ensureSlotId(slotId) {
    if (!validSlots.has(slotId)) throw new Error(`Unknown slot: ${slotId}`);
    const el = document.getElementById(slotId);
    if (!el) throw new Error(`Slot element not found: ${slotId}`);
    return el;
  }

  function getSlot(slotId) {
    ensureSlotId(slotId);
    return slots.get(slotId) || null;
  }

  function mount(slotId, node) {
    const slotEl = ensureSlotId(slotId);
    if (slots.has(slotId)) throw new Error(`Slot already mounted: ${slotId}`);
    if (!(node instanceof Node)) throw new Error('mount expects a DOM Node');
    // Clear existing children before mount
    slotEl.replaceChildren(node);
    slots.set(slotId, node);
    return node;
  }

  function unmount(slotId) {
    ensureSlotId(slotId);
    if (!slots.has(slotId)) throw new Error(`Slot not mounted: ${slotId}`);
    const slotEl = document.getElementById(slotId);
    slotEl.replaceChildren();
    slots.delete(slotId);
  }

  function applyThemeViewport() {
    const center = document.getElementById('centerCanvas');
    if (!center) return;
    // remove previous classes
    center.classList.remove('studio-theme-light','studio-theme-dark','studio-viewport-desktop','studio-viewport-mobile');
    center.classList.add(`studio-theme-${state.theme}`);
    center.classList.add(`studio-viewport-${state.viewport}`);
  }

  function setTheme(theme, source = 'host') {
    if (!['light','dark'].includes(theme)) throw new Error('Invalid theme');
    state = freeze({ ...state, theme });
    applyThemeViewport();
    emit('studio:theme', { theme, source });
    return theme;
  }

  function setViewport(viewport, source = 'host') {
    if (!['desktop','mobile'].includes(viewport)) throw new Error('Invalid viewport');
    state = freeze({ ...state, viewport });
    applyThemeViewport();
    emit('studio:viewport', { viewport, source });
    return viewport;
  }

  function togglePanel(which, collapsed, source = 'host') {
    if (!['left','right'].includes(which)) throw new Error('Invalid panel');
    const key = which === 'left' ? 'leftCollapsed' : 'rightCollapsed';
    const value = typeof collapsed === 'boolean' ? collapsed : !state[key];
    state = freeze({ ...state, [key]: value, panel: which });
    const el = document.getElementById(which === 'left' ? 'slot-left' : 'slot-right');
    if (el) el.classList.toggle('collapsed', value);
    emit('studio:panel', { panel: which, collapsed: value, source });
    return value;
  }

  function getState() { return state; }

  function destroy() {
    // remove listeners
    listeners.clear();
    // unmount slots
    Array.from(slots.keys()).forEach(unmount);
  }

  function ready() {
    if (!readyFired) {
      readyFired = true;
      applyThemeViewport();
      const s = getState();
      const payload = { state: s };
      emit('studio:ready', payload);
      readyResolve(s);
    }
    return readyPromise;
  }

  // Expose global
  const api = {
    ready,
    destroy,
    on,
    getSlot,
    mount,
    unmount,
    getState,
    setTheme,
    setViewport,
    togglePanel
  };

  // Attach to window.Studio (UMD iife global-name will also set this)
  if (typeof window !== 'undefined') {
    window.Studio = api;
  }
})();
</file>

<file path="packages/studio-shell/src/index.ts">
import React from 'react';

// Minimal StudioRoot component
const StudioRoot: React.FC<{ children?: React.ReactNode }> = ({ children }) => {
  return React.createElement('div', { id: 'studio-root', className: 'studio-shell' }, children);
};

// Minimal event bus stub (no-ops for V0)
export const studioBus = {
  emit: (_evt?: unknown) => {},
  on: (_listener?: unknown) => () => {}
};

// API stubs for V0
export function setTheme(_theme: 'light' | 'dark') {}
export function setViewport(_vp: 'desktop' | 'mobile') {}

// Exports
export const StudioShell = StudioRoot;
export default StudioRoot;
</file>

<file path="packages/studio-shell/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Studio Shell Demo</title>
    <link rel="stylesheet" href="dist/tokens.css" />
    <link rel="stylesheet" href="dist/studio.css" />
    <style>
      html, body { height: 100%; margin: 0; }
    </style>
  </head>
  <body>
    <div class="studio-grid">
      <div class="studio-topbar">
        <strong>Studio</strong>
        <div class="studio-controls">
          <div class="segmented" id="themeCtl">
            <button data-theme="light" aria-pressed="true">Light</button>
            <button data-theme="dark">Dark</button>
          </div>
          <div class="segmented" id="viewportCtl">
            <button data-viewport="desktop" aria-pressed="true">Desktop</button>
            <button data-viewport="mobile">Mobile</button>
          </div>
        </div>
      </div>
      <div id="slot-templateRow" class="studio-template-row"></div>
      <div id="slot-left" class="panel panel-left">
        <div style="padding:12px">Left panel<br/>Lorem ipsum dolor sit amet.</div>
        <button id="toggleLeft" style="margin:12px">Toggle Left</button>
      </div>
      <div id="slot-center" class="panel panel-center">
        <div id="centerCanvas" class="studio-theme-light studio-viewport-desktop">
          <div style="padding:24px">
            <h2>Center Canvas</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.</p>
          </div>
        </div>
      </div>
      <div id="slot-right" class="panel panel-right">
        <div style="padding:12px">Right panel<br/>Duis aute irure dolor in reprehenderit.</div>
        <button id="toggleRight" style="margin:12px">Toggle Right</button>
      </div>
    </div>

    <script src="dist/studio.js"></script>
    <script>
      Studio.ready().then(() => {
        // Controls
        const themeCtl = document.getElementById('themeCtl');
        const viewportCtl = document.getElementById('viewportCtl');
        themeCtl.addEventListener('click', (e) => {
          const btn = e.target.closest('button'); if (!btn) return;
          themeCtl.querySelectorAll('button').forEach(b => b.setAttribute('aria-pressed','false'));
          btn.setAttribute('aria-pressed','true');
          Studio.setTheme(btn.dataset.theme, 'user');
        });
        viewportCtl.addEventListener('click', (e) => {
          const btn = e.target.closest('button'); if (!btn) return;
          viewportCtl.querySelectorAll('button').forEach(b => b.setAttribute('aria-pressed','false'));
          btn.setAttribute('aria-pressed','true');
          Studio.setViewport(btn.dataset.viewport, 'user');
        });
        document.getElementById('toggleLeft').onclick = () => Studio.togglePanel('left', undefined, 'user');
        document.getElementById('toggleRight').onclick = () => Studio.togglePanel('right', undefined, 'user');

        // Demo: mount template row content then unmount to show auto-hide
        const tmp = document.createElement('div');
        tmp.textContent = 'Template Row Content';
        Studio.mount('slot-templateRow', tmp);
        setTimeout(() => Studio.unmount('slot-templateRow'), 1500);
      });

      Studio.on('studio:theme', (p) => console.log('theme', p));
      Studio.on('studio:viewport', (p) => console.log('viewport', p));
      Studio.on('studio:panel', (p) => console.log('panel', p));
      Studio.on('studio:ready', (p) => console.log('ready', p));
    </script>
  </body>
  </html>
</file>

<file path="packages/studio-shell/tsconfig.json">
{
  "compilerOptions": {
    "target": "es2019",
    "module": "commonjs",
    "moduleResolution": "node",
    "jsx": "react-jsx",
    "declaration": true,
    "outDir": "dist",
    "rootDir": "src",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "strict": false
  },
  "include": ["src"]
}
</file>

<file path="scripts/build-dieter.js">
#!/usr/bin/env node
/*
 Build @ck/dieter artifacts to dieter/dist using a deterministic, cross-platform flow:
 - Normalize SVGs to fill="currentColor" (scripts/process-svgs.js)
 - Verify SVGs (scripts/verify-svgs.js)
 - Copy tokens/tokens.css -> dist/tokens.css
 - Copy icons/icons.json -> dist/icons/icons.json
 - Copy icons/svg/* -> dist/icons/svg/*
*/

const fs = require('node:fs');
const path = require('node:path');
const { spawnSync } = require('node:child_process');

function copyRecursiveSync(source, destination) {
  const stat = fs.statSync(source);
  if (stat.isDirectory()) {
    if (!fs.existsSync(destination)) fs.mkdirSync(destination, { recursive: true });
    for (const entry of fs.readdirSync(source)) {
      const src = path.join(source, entry);
      const dst = path.join(destination, entry);
      copyRecursiveSync(src, dst);
    }
  } else {
    const dir = path.dirname(destination);
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
    fs.copyFileSync(source, destination);
  }
}

function runNodeScript(scriptRelPath) {
  const p = path.resolve(__dirname, scriptRelPath);
  const res = spawnSync(process.execPath, [p], { stdio: 'inherit' });
  if (res.status !== 0) {
    console.error(`[build-dieter] Subprocess failed: ${scriptRelPath} (exit ${res.status})`);
    process.exit(res.status || 1);
  }
}

function main() {
  const repoRoot = path.resolve(__dirname, '..');
  const dieterRoot = path.resolve(repoRoot, 'dieter');
  const dist = path.join(dieterRoot, 'dist');

  // 1) Normalize and verify SVGs in-place under dieter/icons/svg
  runNodeScript('process-svgs.js');
  runNodeScript('verify-svgs.js');

  // 2) Recreate dist
  fs.rmSync(dist, { recursive: true, force: true });
  fs.mkdirSync(dist, { recursive: true });

  // 3) Copy tokens
  const tokensSrc = path.join(dieterRoot, 'tokens', 'tokens.css');
  const tokensDst = path.join(dist, 'tokens.css');
  if (!fs.existsSync(tokensSrc)) {
    console.error('[build-dieter] Missing tokens source:', tokensSrc);
    process.exit(1);
  }
  copyRecursiveSync(tokensSrc, tokensDst);

  // 4) Copy icons manifest and svgs
  const iconsJsonSrc = path.join(dieterRoot, 'icons', 'icons.json');
  const iconsJsonDst = path.join(dist, 'icons', 'icons.json');
  const svgsSrc = path.join(dieterRoot, 'icons', 'svg');
  const svgsDst = path.join(dist, 'icons', 'svg');
  if (!fs.existsSync(svgsSrc)) {
    console.error('[build-dieter] Missing icons svg directory:', svgsSrc);
    process.exit(1);
  }
  if (fs.existsSync(iconsJsonSrc)) copyRecursiveSync(iconsJsonSrc, iconsJsonDst);
  copyRecursiveSync(svgsSrc, svgsDst);

  console.log(`[build-dieter] Built Dieter assets into ${dist}`);
}

main();
</file>

<file path="scripts/gen-icon-types.mjs">
import fs from 'node:fs';

const symbolSetPath = '/Users/piero_macpro/tools/sf-symbols/src/symbolSet.json';
const outDir = '/Users/piero_macpro/code/CKeen/apps/app/dieter/tokens';
const outPath = `${outDir}/icon.types.ts`;

const raw = fs.readFileSync(symbolSetPath, 'utf8');
const data = JSON.parse(raw);

const iconNames = [];
for (const [symbolName, styles] of Object.entries(data.symbols)) {
  for (const styleName of Object.keys(styles)) {
    iconNames.push(`${symbolName}--${styleName}`);
  }
}

iconNames.sort((a, b) => (a < b ? -1 : a > b ? 1 : 0));

const tsContent = 'export type IconName =\n' + iconNames.map(name => `  | "${name}"`).join('\n') + '\n';

fs.mkdirSync(outDir, { recursive: true });
fs.writeFileSync(outPath, tsContent);
console.log(`Generated IconName type with ${iconNames.length} icons -> ${outPath}`);
</file>

<file path="scripts/link-dieter.js">
const fs = require('fs');
const path = require('path');
const cp = require('child_process');

function findRoot(startDir = __dirname) {
  let dir = startDir;
  while (!fs.existsSync(path.join(dir, 'pnpm-workspace.yaml'))) {
    const parent = path.dirname(dir);
    if (parent === dir) throw new Error('Not inside monorepo root (pnpm-workspace.yaml not found)');
    dir = parent;
  }
  return dir;
}

function removeTarget(target) {
  if (!fs.existsSync(target)) return;
  try { fs.unlinkSync(target); } catch {
    try { fs.rmSync(target, { recursive: true, force: true }); }
    catch (e) { console.error('Failed to remove existing link/folder:', target, e.message); process.exit(1); }
  }
}

(function main() {
  try {
    const root = findRoot();
    const source = path.join(root, 'dieter', 'dist');
    const target = path.join(root, 'apps', 'app', 'public', 'dieter');

    if (!fs.existsSync(source)) {
      console.warn('[link-dieter] dist folder not found, attempting to create placeholder...');
      try { fs.mkdirSync(source, { recursive: true }); } catch {}
      try { fs.writeFileSync(path.join(source, 'tokens.css'), '/* placeholder */'); } catch {}
    }

    removeTarget(target);

    try {
      fs.symlinkSync(source, target, 'dir');
      console.log('[link-dieter] Created symlink:', target, '→', source);
      process.exit(0);
    } catch (e) {
      console.warn('[link-dieter] Symlink failed, attempting Windows junction fallback...', e.message);
      try {
        cp.execSync(`mklink /J "${target}" "${source}"`, { stdio: 'inherit', shell: 'cmd.exe' });
        console.log('[link-dieter] Created junction (Windows fallback):', target, '→', source);
        process.exit(0);
      } catch (err) {
        console.error('[link-dieter] Failed to create junction:', err.message);
        process.exit(1);
      }
    }
  } catch (fatal) {
    console.error('[link-dieter] Fatal error:', fatal.message);
    process.exit(1);
  }
})();
</file>

<file path="scripts/scope-tokens.js">
#!/usr/bin/env node
/*
 Read a tokens.css file and rewrite :root selectors to be scoped under #centerCanvas
 to avoid global cascade bleed in Studio chrome.

 Usage: node scripts/scope-tokens.js <sourceTokensCss> <scopedOutputCss>
*/
const fs = require('node:fs');
const path = require('node:path');

function main() {
  const [src, dst] = process.argv.slice(2);
  if (!src || !dst) {
    console.error('Usage: node scripts/scope-tokens.js <sourceTokensCss> <scopedOutputCss>');
    process.exit(1);
  }
  const absSrc = path.resolve(process.cwd(), src);
  const absDst = path.resolve(process.cwd(), dst);
  if (!fs.existsSync(absSrc)) {
    console.error('[scope-tokens] Source not found:', absSrc);
    process.exit(1);
  }
  let css = fs.readFileSync(absSrc, 'utf8');
  // Replace standalone :root selectors with #centerCanvas
  css = css.replace(/(^|\s):root(\s*\{)/g, '$1#centerCanvas$2');
  // Handle :root[...] blocks as well
  css = css.replace(/:root(\s*\[[^\]]+\])/g, '#centerCanvas$1');
  fs.mkdirSync(path.dirname(absDst), { recursive: true });
  fs.writeFileSync(absDst, css);
  console.log(`[scope-tokens] Wrote scoped tokens to ${absDst}`);
}

main();
</file>

<file path="scripts/stability-integrity-scan.zsh">
#!/usr/bin/env zsh
set -u
echo "== INTEGRITY SCAN =="
# List code files that contain literal '...' (possible truncations)
grep -RIn --include='*.{ts,tsx,js,mjs,cjs}' --exclude-dir='node_modules' --exclude-dir='.next' --exclude-dir='.turbo' --exclude-dir='.vercel' '^\s*\.\.\.$|\.\.\.[^a-zA-Z]' apps services packages dieter 2>/dev/null | sed 's/^/SUSPECT: /' || true
echo "== END SCAN =="
</file>

<file path="services/api/next.config.mjs">
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true
};
export default nextConfig;
</file>

<file path="services/api/package.json">
{
  "name": "@ck/services-api",
  "private": true,
  "version": "0.1.0",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start"
  },
  "dependencies": {
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "@vercel/edge-config": "^1.1.0"
  },
  "devDependencies": {
    "typescript": "^5.5.4",
    "@types/node": "^20.14.12"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="tools/ci/check-lockfile.cjs">
/* tools/ci/check-lockfile.cjs */
// Node cjs script to enforce lockfile presence/readability in CI/headless contexts.
// Exits non-zero if pnpm-lock.yaml is missing or unreadable.
const fs = require('fs');
const path = require('path');

const lockPath = path.resolve(process.cwd(), 'pnpm-lock.yaml');
try {
  const stat = fs.statSync(lockPath);
  if (!stat.isFile()) {
    console.error('[lockfile-check] pnpm-lock.yaml exists but is not a regular file:', lockPath);
    process.exit(2);
  }
  const fd = fs.openSync(lockPath, 'r');
  const buf = Buffer.alloc(64);
  fs.readSync(fd, buf, 0, 64, 0);
  fs.closeSync(fd);
  console.log('[lockfile-check] pnpm-lock.yaml present and readable:', lockPath);
} catch (e) {
  console.error('[lockfile-check] pnpm-lock.yaml missing or not readable at repo root:', lockPath);
  console.error(String(e && e.message ? e.message : e));
  process.exit(1);
}
</file>

<file path="tools/ci/verify-public-dieter-clean.cjs">
#!/usr/bin/env node
/* Fail CI if any files under apps/app/public/dieter (except README.md) are tracked by git */
const { spawnSync } = require('node:child_process');

// List tracked files under the directory (not the directory itself)
const res = spawnSync('git', ['ls-files', '--', 'apps/app/public/dieter/**'], { encoding: 'utf8' });
if (res.status !== 0) {
  console.error('[verify-public-dieter-clean] git ls-files failed');
  process.exit(res.status || 1);
}
const tracked = res.stdout
  .split('\n')
  .map(s => s.trim())
  .filter(Boolean)
  .filter(p => p !== 'apps/app/public/dieter/README.md');
if (tracked.length) {
  console.error('[verify-public-dieter-clean] The following files are tracked but must not be committed:');
  console.error(tracked.join('\n'));
  process.exit(1);
}
console.log('[verify-public-dieter-clean] OK: no tracked files under apps/app/public/dieter');
</file>

<file path="tools/ci/verify-vercel-config.cjs">
/* tools/ci/verify-vercel-config.cjs */
const fs = require('fs');
const path = require('path');
const p = path.join(process.cwd(), 'vercel.json');
if (!fs.existsSync(p)) {
  console.error('[verify-vercel-config] vercel.json missing at repo root');
  process.exit(1);
}
let cfg;
try {
  cfg = JSON.parse(fs.readFileSync(p, 'utf8'));
} catch (e) {
  console.error('[verify-vercel-config] vercel.json is not valid JSON');
  process.exit(1);
}
if ('buildCommand' in cfg && String(cfg.buildCommand || '').trim() !== '') {
  console.error('[verify-vercel-config] REMOVE repo-level "buildCommand" from vercel.json — it overrides per-project builds on Vercel.');
  process.exit(1);
}
const ic = String(cfg.installCommand || '');
if (!ic.includes('--frozen-lockfile')) {
  console.error('[verify-vercel-config] installCommand must enforce "--frozen-lockfile".');
  process.exit(1);
}
console.log('[verify-vercel-config] OK');
</file>

<file path="tools/studioV0_stability.sh">
#!/usr/bin/env bash
set -euo pipefail

# Resolve repo root regardless of where the script is launched from
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"
cd "$ROOT"

echo "== 0) Repo root: $ROOT =="
echo "== 1) Ensure feature branch =="
git switch feat/studio-v0-shell >/dev/null 2>&1 || {
  echo "[FAIL] missing branch feat/studio-v0-shell"; exit 1; }

echo "== 2) Preconditions =="
test -f pnpm-workspace.yaml || { echo "[FAIL] pnpm-workspace.yaml missing"; exit 1; }
test -f tools/verify-studio-shell.cjs || { echo "[FAIL] tools/verify-studio-shell.cjs missing"; exit 1; }
test -f packages/studio-shell/tsconfig.json || { echo "[FAIL] packages/studio-shell/tsconfig.json missing"; exit 1; }

echo "== 3) Hard clean caches (deterministic) =="
rm -rf apps/app/.next .turbo node_modules/.cache \
       packages/studio-shell/dist \
       packages/*/node_modules || true

echo "== 4) Frozen install =="
pnpm install --frozen-lockfile

echo "== 5) Build Dieter (icons/assets) =="
pnpm --filter @ck/dieter build

echo "== 5.1) Verify Dieter assets copied to app public =="
if [[ ! -d "apps/app/public/dieter" ]]; then
  echo "[FAIL] Dieter assets not found in apps/app/public/dieter"; exit 2;
fi

echo "== 6) Build StudioShell (CJS) =="
pnpm --filter @ck/studio-shell build

echo "== 7) Consumer-context smoke (apps/app) =="
node tools/verify-studio-shell.cjs

echo "== 8) Build App (Next) =="
pnpm --filter @ck/app run build

echo "== OK == Stability gates passed (Dieter assets, StudioShell CJS build, smoke verify, App build)"
</file>

<file path="tools/verify-studio-shell.cjs">
const path = require("path");
const { createRequire } = require("module");

const rootDir = path.resolve(__dirname, "..");
const appPkg = path.join(rootDir, "apps", "app", "package.json");
const requireApp = createRequire(appPkg);

try {
  console.log("[verify] Resolving @ck/studio-shell from apps/app…");
  const resolved = requireApp.resolve("@ck/studio-shell");
  console.log("[verify] RESOLVED:", resolved);

  const m = requireApp("@ck/studio-shell");
  const keys = Object.keys(m);
  console.log("[verify] keys:", keys);
  console.log("[verify] default type:", typeof m.default);
  console.log("[verify] StudioShell type:", typeof m.StudioShell);

  if (typeof m.default !== "function" || typeof m.StudioShell !== "function") {
    throw new Error("Expected function exports: default and StudioShell");
  }
  console.log("[verify] OK");
} catch (err) {
  console.error("[verify] FAIL:", err && err.message ? err.message : err);
  process.exit(1);
}
</file>

<file path=".stylelintignore">
node_modules
dist
build
</file>

<file path="cleanup-verify-4-5-6.txt">
=== CLICKEEN | Verify 4/5/6 (no deletes) ===
Generated: Tue Sep 16 10:50:42 PDT 2025

[VERIFY] infra/: PRESENT & NOT EMPTY -> KEEP (or migrate contents)
[VERIFY] studio-shell/node_modules: PRESENT (tracked=0)
         -> SAFE TO DELETE LOCALLY (cache), NOT IN GIT
[VERIFY] root next.config.ts present; workspace configs -> apps:2 services:2
         -> Likely REDUNDANT if each Next.js project has its own config; recommend delete in next cleanup batch
</file>

<file path="pnpm-workspace.yaml">
packages:
  - apps/*
  - services/*
  - packages/*
  - infra/*
  - dieter

onlyBuiltDependencies:
  - esbuild
</file>

<file path="turbo.json">
{
  "$schema": "https://turbo.build/schema.json",
  "tasks": {
    "build": {
      "dependsOn": ["^build"],
      "outputs": [".next/**", "dist/**", "public/dieter/**"]
    },
    "dev": { "cache": false, "persistent": true },
    "lint": { "outputs": [] },
    "test": { "outputs": [] },
    "typecheck": { "outputs": [] },
    "size-check": { "outputs": [] },
    "e2e": { "cache": false }
  }
}
</file>

<file path=".github/workflows/docs-check.yml">
name: docs-check

on:
  pull_request:
    paths:
      - "documentation/**"
      - "tools/docs/**"
      - ".github/workflows/docs-check.yml"
  push:
    branches: ["**"]
    paths:
      - "documentation/**"
      - "tools/docs/**"
      - ".github/workflows/docs-check.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Use the repo-declared packageManager version (pnpm) via Corepack
      - name: Enable Corepack
        run: corepack enable
      - name: Use packageManager version
        run: corepack install

      # Probe for documentation tree — skip the job if it’s not there
      - name: Probe docs tree
        id: probe
        shell: bash
        run: |
          if [ -d documentation ] && [ -d documentation/systems/core ]; then
            echo "skip=false" >> "$GITHUB_OUTPUT"
          else
            echo "No documentation/systems/core present — skipping docs validation."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate services index
        if: steps.probe.outputs.skip != 'true'
        run: pnpm -s node tools/docs/generate-services.mjs

      - name: Ensure SERVICES_INDEX.md is up to date
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          if ! git diff --quiet -- documentation/SERVICES_INDEX.md; then
            echo "Generator output is stale. Run: pnpm -s node tools/docs/generate-services.mjs and commit."
            exit 1
          fi

      - name: Validate CONTEXT references (skip staged)
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          missing=0
          for f in documentation/systems/core/*.md documentation/systems/supporting/*.md; do
            [ -e "$f" ] || continue
            name=$(basename "$f" .md)
            # skip if frontmatter contains staged: true (case-insensitive)
            if awk 'NR==1 && $0 ~ /^---/ {front=1; next} front && $0 ~ /^---/ {exit} front && tolower($0) ~ /staged:[[:space:]]*true/ {print "staged"; exit 0}' "$f" | grep -q staged; then
              echo "INFO: $name is staged; skipping"
              continue
            fi
            if ! grep -qi "$name" documentation/CONTEXT.md; then
              echo "Missing in CONTEXT.md: $name"; missing=1
            fi
          done
          exit $missing

      - name: Ensure deployments == 3
        if: steps.probe.outputs.skip != 'true'
        shell: bash
        run: |
          n=$(ls documentation/deployments/*.md 2>/dev/null | wc -l | tr -d ' ')
          test "$n" -eq 3 || (echo "Expected 3 deployments, got $n" && exit 1)
</file>

<file path="apps/site/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="dieter/components/index.ts">
// Dieter Component Contracts v0
// Tokens-only design system. Props are minimal, accessible, theme-safe.

export type Size = 'sm' | 'md' | 'lg';
export type State = 'default' | 'error' | 'success' | 'warning';
export type Theme = 'light' | 'dark' | 'hc';

// Button
export interface DieterButtonProps {
  size?: Size;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
}

// Input
export interface DieterInputProps {
  size?: Size;
  disabled?: boolean;
  readOnly?: boolean;
  required?: boolean;
  state?: State;
  type?: 'text' | 'email' | 'password';
}

// Textarea
export interface DieterTextareaProps {
  size?: Size;
  disabled?: boolean;
  readOnly?: boolean;
  required?: boolean;
  state?: State;
  rows?: number;
}

// Select
export interface DieterSelectProps {
  size?: Size;
  disabled?: boolean;
  required?: boolean;
  state?: State;
}

// Choice (Checkbox/Radio)
export interface DieterChoiceProps {
  size?: Size;
  disabled?: boolean;
  required?: boolean;
  state?: State;
  type: 'checkbox' | 'radio';
  name: string;
  value: string;
  checked?: boolean;
}

// Form Group
export interface DieterFormGroupProps {
  required?: boolean;
  orientation?: 'row' | 'column';
  helpText?: string;
  errorText?: string;
}

// Validation Summary
export interface DieterValidationSummaryProps {
  state: 'error' | 'success' | 'warning';
  message: string;
  role?: 'alert' | 'status';
}
</file>

<file path="documentation/systems/Dieter.md">
# Dieter PRD (v1, Frozen)

**Last updated:** 2025-09-09  
**Owner:** Oslo/Dieter (Design System)  
**Status:** ✅ Frozen for v1 (implementation green-light)

---

## 1) Purpose

**Dieter** is Clickeen’s **design system** (tokens, icons, components, primitives, docs) and the **components manager** UX used internally to browse/inspect components. Dieter is delivered as a **workspace package** (`@ck/dieter`) and static assets served at `/dieter/*`. It is the single source of visual truth for **Studio**, **Bob**, **MiniBob**, and internal tools.

---

## 2) In/Out of Scope

**In scope (v1)**
- **Tokens:** color, typography, spacing, radii, shadow, motion, z-index, durations, easing, breakpoints.
- **Foundations:** reset/normalization, base typography scale, focus ring, state styles, density.
- **Components (foundational):** Button, Input, Select, Textarea, Checkbox, Radio, Switch, SegmentedControl, Tooltip, Tag/Badge, Card, Tabs, Table (essentials only), Icon primitives.
- **Icons:** curated set, consistent optical size, strokes, and naming.
- **CSS/JS exports:** CSS tokens and component styles; minimal JS helpers/types.
- **Docs:** usage guidelines, props, a11y notes, do/don’t, code samples.
- **Components Manager UI (internal):** list + variants browser (via Studio).

**Out of scope (v1)**
- App-specific components (billing forms, template-specific widgets).
- Runtime theme switching across host roots (Studio handles center-only toggles).
- i18n copy libraries.
- Shadow DOM encapsulation.

---

## 3) Consumers & Responsibilities

- **Studio Shell** (`@ck/studio-shell`): imports Dieter **tokens** and selected primitives for chrome; no tight coupling.  
- **Bob / MiniBob**: use Dieter components/tokens; templates render inside Studio’s center panel.  
- **Internal Dieter Manager**: embedded in Studio to browse components/variants and expose specs.

**Dieter owns:** tokens, icons, foundational components, styles, docs.  
**Hosts own:** business logic, persistence, preview engines, data fetching.

---

## 4) Distribution & Runtime

**Single source:** `dieter/` (repo root) → workspace package **`@ck/dieter`**  
**Build outputs:** `dieter/dist/**`  
**Static serving (CDN):** `/dieter/*` via **copy-on-build** per ADR-005:  
- `pnpm --filter @ck/dieter build` writes to `dieter/dist/**`  
- `scripts/copy-dieter-assets.js` copies to `apps/app/public/dieter/**` (never committed)

**Build order:** `apps/app` depends on `@ck/dieter` (`workspace:*`), and `dieter/package.json` has `prepare: pnpm run build` so fresh clones produce `dist/`.

**No routes, no symlinks:** We do **not** proxy through Next routes and we do not use symlinks. Static serving from copied assets only.

---

## 5) Package Layout (authoritative)
dieter/
package.json
src/
tokens/
index.ts             # token definitions (TS)
css/                 # source templates for CSS tokens
icons/
sources/*.svg        # raw normalized SVG sources
index.ts             # icon registry (optional JS export)
components/
button/
Button.tsx
button.css.ts      # CSS-in-JS or CSS module
docs.md
tests.spec.tsx
input/
…
foundations/
reset.css
focus.css
typography.css
docs/
overview.md
accessibility.md
dist/
tokens.css             # compiled CSS tokens (public)
foundations.css        # reset, focus, base styles
components.css         # aggregated component CSS
icons/
.svg                # optimized public icons
docs/
.html|.md|.json   # generated docs (optional, for serving)
---

## 6) Component Manager (Dieter UI in Studio)

- **Right panel:** lists all Dieter components.  
- **Center panel:** shows all variants of the selected component, rendered live.  
- **Right panel detail:** shows CSS variables, props, and implementation specs for that component.  
- **Toggles:** desktop vs. mobile viewport, light vs. dark theme (scoped to Studio center canvas).  

---

## 7) API / Exports

- **Tokens:**  
  - JS/TS: `import { colors, spacing } from '@ck/dieter/tokens'`  
  - CSS: `@import '@ck/dieter/dist/tokens.css';`  

- **Components:**  
  - `import { Button, Input } from '@ck/dieter/components'`  

- **Icons:**  
  - `import { IconPlus } from '@ck/dieter/icons'`  
  - Runtime path: `/dieter/icons/plus.svg`  

- **Foundations:**  
  - `@import '@ck/dieter/dist/foundations.css';`  

- **Docs:**  
  - Served at `/dieter/docs/*` (static HTML/MD/JSON from dist/docs).

---

## 8) Governance & Guardrails

- **Single source of truth:** `dieter/` at repo root.  
- **No symlinks:** copy-on-build only (ADR-005).  
- **CI checks:** block imports from `apps/app/dieter/`; assert `apps/app/public/dieter` has no tracked files and `dieter/dist/tokens.css` exists.  
- **Manual cleanup:** unused legacy folders will be deleted once symlink + builds are validated.  
- **Versioning:** Dieter package versions must follow SemVer; breaking changes require major bump and ADR update.  
- **Documentation generation:** optional; if generated, docs are served statically from `/dieter/docs/*`.  

## Distribution & Build Requirements (Frozen)
- **Copy-on-Build Only (ADR-005):** Publish artifacts (tokens.css, icons SVG, icons.json) to `dieter/dist/`; copy to `apps/app/public/dieter/`. No symlinks.  
- **SVG Normalization:** `scripts/process-svgs.js` enforces `fill="currentColor"`; `scripts/verify-svgs.js` asserts compliance; counts compared to `icons.json`.  
- **Tooling Consistency (ADR-004):** Canonical pnpm in root `package.json` (`pnpm@10.15.1`); CI uses `--frozen-lockfile`.  
- **Verification:** CI checks (a) no committed files under `apps/app/public/dieter/`, (b) presence of `dieter/dist`, (c) Dieter built before Studio/App.
</file>

<file path="documentation/systems/Studio.md">
# Studio PRD (v1, Frozen)

**Last updated:** 2025-09-09  
**Owner:** Platform / CTO  
**Status:** ✅ Frozen for v1 (implementation green-light)

---

## Summary
Studio is a standalone shell reused by multiple products (Bob, MiniBob, Dieter). It provides chrome (topbar, template row), a 3-panel layout (left | center | right), theme + viewport toggles (affect center only), panel collapse, and a typed event bus. Studio does not own business logic, templates, preview rendering, persistence, or network calls. These are the responsibility of the host.

---

## Goals
- Provide a single reusable shell for all builders and internal tools  
- Guarantee consistent UX and behavior (theme/viewport toggles, panel chrome)  
- Define a tiny, stable API for hosts to inject content and react to shell events  
- Enforce correctness via explicit error throwing, typed events, and predictable lifecycle  

---

## Non-Goals
- Template system  
- Preview runtime (e.g. Venice integration)  
- Persistence or network calls  
- Resizing or panel width control in v1  
- Shadow DOM encapsulation  

---

## Primary Consumers

### Bob / MiniBob (Widget Builder & Editor)
- Display a template selector row directly under the topbar  
- Left panel: controls for features/edits derived from the selected template  
- Center panel: live preview of the template with edits (critical feature)  
- Right panel: editable fields/specs (flexible use)  
- Host owns: template data, preview engine (e.g., Venice), persistence, and network calls  

### Dieter (Components Manager)
- Right panel: list of components; clicking one updates the center panel  
- Center panel: preview of all variants of the selected component  
- Right panel: CSS and specs for the component  
- Host owns: component catalog, rendering logic, persistence  

**Common behavior across all hosts**: theme toggle (light/dark) and viewport toggle (desktop/mobile) that apply only to the center panel.

---

## Scope & Constraints
- Scope: layout shell, chrome, theme + viewport toggles, panel collapse, typed events, slot mounting API  
- Out of scope: resizing, shadow DOM, persistence, preview runtimes, templates  
- Monorepo & Deploy: must follow CTO Execution Checklist (pnpm workspaces, Node 20.x, integrations in `/apps/app` for Bob, `/site` for MiniBob, `/dieter` for Dieter; no new Vercel projects)  
- Design System: Studio shell uses Oslo/Dieter tokens and components where appropriate; no Shadow DOM  

---

## UI Structure (DOM & Accessibility)

**Required slots (element IDs):**
- `#slot-templateRow`: empty container under topbar (auto-hides when empty)  
- `#slot-left`: left panel  
- `#slot-center`: center panel body containing `#centerCanvas`  
  - Studio applies classes here: `.studio-theme-light` / `.studio-theme-dark`, `.studio-viewport-desktop` / `.studio-viewport-mobile`  
- `#slot-right`: right panel  

**Accessibility roles:**
- Topbar: `<header role="banner">`  
- Template row: `role="region" aria-label="Template selector"`  
- Panels: `role="region" aria-label="Left|Center|Right panel"`  
- Toggles: `role="tablist"` with `role="tab"` and `aria-selected`  

**Panel chrome:**
- Header (icon, title, actions), body (host content)  
- Collapse buttons for left/right panels  

---

## Behavior (v1)
- **Theme toggle**: updates classes on `#centerCanvas` only, never `<html>`  
- **Viewport toggle**: updates classes on `#centerCanvas` only  
- **Panel collapse**: visually hides/shows panel; mounted content remains  
- **Template row**: auto-hides when empty (CSS `display:none`), auto-shows on mount  
- **Lifecycle**:  
  - `studio:ready` event fires exactly once when DOM is ready  
  - `ready()` can be called multiple times and resolves with current state  

---

## Public API (Frozen)

### Types
type SlotType = 'left' | 'center' | 'right' | 'templateRow';

type StudioState = {
  theme: 'light' | 'dark';
  viewport: 'desktop' | 'mobile';
  panels: {
    left:  { collapsed: boolean };
    right: { collapsed: boolean };
  };
};

type StudioEventMap = {
  'studio:ready': StudioState;
  'studio:theme': { theme: 'light' | 'dark' };
  'studio:viewport': { viewport: 'desktop' | 'mobile' };
  'studio:panel': { side: 'left' | 'right'; collapsed: boolean; source: 'user' | 'host' };
};

### API
interface StudioAPI {
  // Lifecycle
  ready(): Promise<StudioState>; // resolves with current state, safe to call multiple times
  destroy(): void;

  // Slot management (throws on conflict)
  mount(slot: SlotType, element: HTMLElement): void;
  unmount(slot: SlotType): void;
  getSlot(slot: SlotType): HTMLElement | null;

  // State
  getState(): StudioState;
  setTheme(theme: 'light' | 'dark'): void;          // affects center canvas only
  setViewport(viewport: 'desktop' | 'mobile'): void; // affects center canvas only
  togglePanel(side: 'left' | 'right', source?: 'host'): void;

  // Events
  on<T extends keyof StudioEventMap>(
    event: T,
    handler: (detail: StudioEventMap[T]) => void
  ): () => void;
}

---

## Event Contracts
- `studio:ready`: fires once; payload = current state  
- `studio:theme`: payload = `{ theme }`  
- `studio:viewport`: payload = `{ viewport }`  
- `studio:panel`: payload = `{ side, collapsed, source }`  

---

## Implementation Checklist
1. Studio applies `.studio-theme-{light|dark}` to `#centerCanvas` only  
2. Studio applies `.studio-viewport-{desktop|mobile}` to `#centerCanvas` only  
3. Template row auto-hides when empty  
4. All mount/unmount conflicts throw errors  
5. `studio:ready` fires exactly once  
6. Panel events include `source` field  

---

## Deferred (Future Versions)
- Resize events (v1.1 when real stories exist)  
- Shadow DOM (never; use CSS containment instead)  
- Panel width control (not needed in v1)  

---

## Risks & Mitigations
- **Host misuse**: hosts might ignore thrown errors. Mitigation: document strict usage in API guide.  
- **Panel toggle feedback loops**: mitigated with `source` field on `studio:panel`.  
- **Style conflicts**: mitigated via CSS containment rules, not Shadow DOM.  
- **Performance**: hosts must mount once and update content, not repeatedly remount.  

---

## Engineering Constraints (Frozen)
- **Deterministic Build (ADR-004):** Studio consumes Dieter tokens/icons; builds require canonical pnpm & Node 20. CI uses `--frozen-lockfile`.  
- **Icons Rendering:** Inline SVG fetched from `/dieter/icons/svg/<kebab>.svg`, normalized to `fill="currentColor"`, hydration-safe, cached in memory with bounded LRU+TTL.  
- **Token Scoping:** Dieter `tokens.css` is transformed at build via `scripts/scope-tokens.js` to scope `:root` → `#centerCanvas` (no global bleed).  
- **Asset Flow (ADR-005):** Dieter builds to `dieter/dist/`; copy to `apps/app/public/dieter/`.  
- **Order:** `@ck/dieter` → copy assets → `@ck/studio-shell` → `@ck/app`.  
- **Accessibility:** Decorative icons are `aria-hidden`; action icons include `aria-label`.
</file>

<file path="documentation/FailuresRCAs-IMPORTANT.md">
# Failures & RCAs — Important

## RCA — pnpm Version Conflict in CI (ERR_PNPM_BAD_PM_VERSION)
**Date:** September 11, 2025  
**Summary:** CI failed due to pnpm version specified both in workflow and `package.json`, causing version drift and blocking installs.  
**Impact:** Multiple failed runs, delayed merges, repeated retries.  
**Root Cause:** Duplicate tool version declarations.  
**Resolution:** Single source of truth is `package.json` `packageManager`. Workflows must not pin pnpm. Enforce `--frozen-lockfile`.  
**Prevention:** ADR-004, ADR-005; Playbooks; CI guards to detect drift; copy-on-build for Dieter assets. Mitigations implemented: root `packageManager=pnpm@10.15.1`, `--frozen-lockfile` enforced, no nested lockfiles, Dieter assets copied (no symlinks), SVG normalization + verification, public assets untracked enforcement.

## RCA: P0 — Principal Engineer Scope Drift

**Date:** 2025-09-12  
**Severity:** P0  

### Symptoms
- CI failures and hangs from heredoc prompts (`command not found: #`, endless waiting).
- Rework from updating `SERVICES_INDEX.md` despite it being temporary.
- Repo churn with extra scripts and ops files not part of scope.
- Confusion about roles (GPT vs Cursor).

### Root Cause
- Principal engineer introduced scope drift beyond documentation/.
- Temporary artifacts treated as tracked deliverables.
- Prompts written with heredocs and zsh-incompatible syntax.
- Roles blurred, leading to mixed instructions.

### Corrective Actions
1. ADR 12: enforce scope discipline and role separation.  
2. Generator explicitly marked: outputs are temporary, not tracked.  
3. Prompts standardized to plain bash, no heredocs.  
4. Roles clarified: GPT = principal, Cursor = executor.  

### Preventive Measures
- All future changes must be reflected in ADRs or RCAs.  
- Principal must confirm alignment with documentation before introducing new elements.  
- CI workflows limited to documentation/ scope only.
</file>

<file path="documentation/Techphases.md">
TXT
# TechPhases.md

**Purpose**  
Authoritative, first-level technical specification for Clickeen across 3 phases. Defines services required per phase, why they exist, what they include at that phase, and the concrete stack choices we’ve already aligned on. This doc is the starting point for roadmapping and scoping.

**Guiding principles**
- **Product-led, self-serve.** No sales-led dependencies in the stack or flows.
- **Modular from day one.** Start unified (modular monolith), split into services only when scale demands it.
- **Size + speed as features.** Embed script budget is hard (see budgets).
- **Security by default.** Postgres RLS, least privilege, token scope + rotation.
- **DX matters.** pnpm workspaces, strict linting, type-safe APIs, one-task-at-a-time execution.
- **No guessing.** If a dependency or design isn’t confirmed here, mark **TBD** and raise before implementation.

---

## Phase 1 — Widgets (Trojan Horse)

**Goal:** Ship first widgets + infra. Prove distribution, self-serve onboarding, and usage capture with a <28KB embed.

### Services in Phase 1 (what & why)

1) **Embed Service**
- **Why:** Core delivery of widgets to any website; single snippet integrates, auto-updates.
- **Scope (P1):**
  - Public **embed loader** (vanilla TS) served via CDN; budget **≤28KB gz** total (loader + minimal runtime).
  - Widget bootstrapper, DOM mounting, attribute/config parsing, feature flags.
  - Versioning (`/embed/v{semver}/loader.js`) and default alias (`/embed/latest/loader.js`).
  - Lightweight, **queue-safe event bus** for widget events (no external deps).
  - Minimal client metrics (load start/end, errors) with **fire-and-forget pixel** endpoint.
- **Tech:** TypeScript, small bundler (**esbuild** or **rollup**, pick smallest bundle), CDN (**Vercel Edge** or **Cloudflare** TBD), Sentry (errors).

2) **Auth & Workspace Service**
- **Why:** Needed to claim widgets, manage ownership, and secure admin UIs.
- **Scope (P1):**
  - Email/password + magic link via **Supabase Auth** (JWT).
  - **Workspaces** (orgs) with ownership; single role (Owner) initially.
  - Basic account settings; RLS enforced on all tenant data.
- **Tech:** Supabase (Postgres + Auth + RLS), Next.js (dashboard).

3) **Usage & Token Service** (**“Oslo” tokens**)
- **Why:** Enforce limits; instrument adoption funnel; secure embed calls.
- **Scope (P1):**
  - Token issuance (workspace-scoped, widget-scoped), rotation, revocation.
  - Rate-limit counters (simple per-token window).
  - Usage counters (views, loads, interactions) aggregated daily.
- **Tech:** Supabase (tables, SQL functions), Edge function(s) for write endpoints.

4) **Billing Service (stub)**
- **Why:** Turn on monetization path without full UI.
- **Scope (P1):**
  - **Stripe** products/prices created; webhook receiver that records customer + subscription rows.
  - No full paywall yet; gated flags available to enable per-workspace.
- **Tech:** Stripe + minimal serverless endpoint, Supabase tables to mirror subscription state.

5) **System UI / Design Tokens (“Dieter”)**
- **Why:** Shared design foundation across dashboard + widgets.
- **Scope (P1):**
  - **System UI font stack** (no Ubuntu/Roboto), light/dark tokens, spacing/typography scales.
  - **SF Symbols** integration (all 6,950 SVGs) under `/tools/sf-symbols/svgs/`.
  - Icon component + zero-maintenance pipeline (indexing by name, tree-shakeable).
- **Tech:** TS/React UI package, CSS vars tokens, PostCSS; icon build script.

6) **Widget(s)**
- **Why:** Real value + distribution.
- **Scope (P1):**
  - First widget(s): **Form widget** (per previous roadmap), plus minimal variants if time.
  - Client-only render with optional SSR stub, themeable via CSS vars from Dieter.
  - No heavy deps; size folded into overall loader budget if embedded, or code-split on demand.
- **Tech:** React (minimal), TS; **no** third-party UI libs.

7) **Drafts + Claim Flow (“Bob”)**
- **Why:** Convert public installs into accounts.
- **Scope (P1):**
  - Anonymous widget draft token created on first load; **claim** flow ties it to a workspace after signup.
  - Rate-limited claim attempts; audit trail (triggers already discussed).
- **Tech:** Supabase tables + triggers (claim audit), simple claim UI in dashboard.

8) **Observability & Health (seed)**
- **Why:** Find issues fast, keep uptime.
- **Scope (P1):**
  - Sentry client/server integration (embed + dashboard).
  - `/healthz` endpoints, uptime pings.
  - Product analytics baseline via **PostHog** in dashboard (not embed).
- **Tech:** Sentry SDKs, PostHog web snippet (dashboard only).

---

### Phase 1 Stack (confirmed + used)

- **Language:** TypeScript everywhere.
- **Frontend/Dashboard:** React + **Next.js** (already present), minimal server actions or API routes.
- **Embed Loader/Runtime:** Vanilla TS + minimal React (only where needed), esbuild/rollup bundling.
- **Package/Workspace:** **pnpm** workspaces (6 projects noted). Lockfile committed.
- **Database:** **Supabase Postgres** (+ Auth, Realtime optional later).
- **Auth:** Supabase Auth (JWT) with RLS for multi-tenant isolation.
- **Billing:** Stripe (webhook → Supabase).
- **Analytics:** PostHog (dashboard), tiny pixel endpoint for embed.
- **Error Monitoring:** Sentry (embed + dashboard).
- **Design System:** Dieter tokens + SF Symbols SVG set, system UI font stack.
- **Hosting/CDN:** **TBD** between Vercel and Cloudflare (cost tables evaluated). Current dev likely Vercel.
- **CI/CD:** Git provider **+ GitHub Actions** (TBD exact jobs); Supabase CLI for migrations.
- **Lint/Format/Test:** ESLint (strict), Prettier, **Vitest** (unit), **Playwright** (smoke) — adopt incrementally.

---

### Phase 1 Data Model (first cut)

Core tables (Supabase/Postgres):
- `users` (auth-linked profile)
- `workspaces` (tenant)
- `workspace_members` (P1 may be implicit Owner only)
- `widgets` (definition metadata)
- `widget_instances` (deployed unit; anonymous until claim)
- `widget_claim_audit` (attempts + triggers; **rate-limit trigger present**)
- `embed_tokens` (workspace/widget scoped; status, scopes, last_rotated_at)
- `usage_counters_daily` (per token/widget/day: views, loads, interactions)
- `stripe_customers`, `stripe_subscriptions` (mirror Stripe state; stub in P1)

**RLS:**  
- All tenant data is **workspace-scoped** with `workspace_id` FK.  
- Policies: `auth.uid()` must map to a member of the workspace (Owner role P1).

---

### Phase 1 Security Baseline

- **RLS enabled by default** on all tenant tables; deny-all + explicit allow policies.
- **Embed tokens**: random, 128-bit (min), scoped to widget/workspace; rotate via dashboard.
- **Rate limiting**: per token for write endpoints; exponential backoff after failures.
- **CSP**: strict in dashboard (`script-src 'self'` + Sentry/PostHog domains). Embed publishes a safe list in docs.
- **PII**: avoid storing in embed events; only aggregate counters.
- **Secrets**: .env via Vercel/Cloudflare secrets; never in repo.

---

### Phase 1 Performance/Size Budgets

- **Embed loader total** (loader + minimal runtime): **≤28KB gz** (Venice target).
- **Per-widget incremental** (lazy chunk): **≤10KB gz** initial render.
- **Load time**: first byte ≤100ms at edge; TTI < 1s on 4G for simple widget.
- **Third-party deps**: zero unless absolutely necessary; no UI frameworks.

**CI enforcement:**  
- `size-limit`/bundlesize checks on embed output.  
- Lint rule preventing accidental imports (e.g., lodash full).  
- PR fails if budgets exceeded.

---

## Phase 2 — Low-Cost SaaS for SMBs

**Goal:** Layer broader SaaS capabilities on top of widget footprint. Multi-user, integrations, real billing. Keep self-serve simplicity.

### Services in Phase 2 (evolutions/new)

1) **Embed Service (evolve)**
- Advanced analytics (CTR, conversion events), A/B hooks, perf tuning per widget.
- Cached config manifests at edge; per-workspace feature flags.

2) **Auth & Workspace (evolve)**
- Roles & permissions (Owner, Admin, Member).
- Multiple workspaces per user; invitations; basic audit log.

3) **Usage & Token (evolve)**
- Event-level logs (append-only table) with rollups to daily aggregates.
- Tiered quotas; soft-then-hard limit behavior; usage UI.

4) **Billing (full)**
- Self-serve subscriptions in-app, upgrade/downgrade, proration, dunning.
- Per-workspace plan entitlements → feature gating via server flags.
- Invoices + receipts via Stripe Customer Portal.

5) **Integration Service (new)**
- First-party connectors: Google (OAuth), Slack (webhooks), Stripe (billing already), email (TBD: Resend/Sendgrid).
- Webhooks for outbound events (workspace-scoped signing secret).

6) **Workflow/Orchestration (new)**
- Lightweight automations: triggers (usage thresholds, form submission), actions (email, Slack, webhook).
- Rate-limited, retried delivery; dead-letter logging.

7) **Observability & Health (expand) – “Berlin”**
- SLOs + error budgets; alerting (PagerDuty **TBD**).
- Centralized logs (supabase logs + dashboard viewer); Sentry release health.

8) **Docs/Dev Portal (new)**
- Public docs for embed, tokens, webhooks, API keys; examples.

---

### Phase 2 Stack Additions

- **OAuth** (Google) via NextAuth **TBD** or Supabase OAuth providers.
- **Email** provider **TBD** (Resend/SendGrid) with domain auth.
- **Job/Queue**: lightweight queue **TBD** (Cloudflare Queues or simple cron + table outbox).
- **API Keys** for server-to-server integrations (separate from embed tokens).
- **Docs site**: Docusaurus or Next.js app route; lives in `apps/docs`.

---

### Phase 2 Data Model (additions)

- `roles` / `workspace_members` (role column)
- `events_raw` (append-only usage stream), `usage_rollups_daily`
- `api_keys` (hashed), `webhook_endpoints`, `webhook_deliveries`
- `integrations` (per provider), `oauth_connections`
- `workflows`, `workflow_triggers`, `workflow_runs`
- `audit_logs`

**RLS:**  
- Extended to role checks. Webhook deliveries exposed via signed URL, not public.

---

### Phase 2 Security

- **API keys** hashed + prefix displayed once; rotate/revoke.
- **Webhook signatures** (HMAC-SHA256 with per-endpoint secret).
- **Audit log** of security events (role changes, token rotations).
- **Secrets**: per-env isolation; least-privileged service keys.

---

### Phase 2 Performance

- Keep embed budgets; offload heavy analytics to event stream/rollups.
- Edge config manifests served from KV/edge cache (**TBD**: Vercel Edge Config or Cloudflare KV).

---

## Phase 3 — Enterprise Platform

**Goal:** Enterprise-grade features at a fraction of legacy cost while preserving product-led simplicity.

### Services in Phase 3 (evolutions/new)

1) **Embed Service (enterprise)**
- Per-tenant isolation toggles; SLA monitoring dashboards; signed config manifests.
- Region routing / data residency **TBD** (if required).

2) **Auth & Workspace (enterprise)**
- **SSO/SAML**, **SCIM** provisioning, granular permissions, full audit trails.
- Suspensions, legal holds, export tooling.

3) **Usage & Token (enterprise)**
- Cross-service metering + consolidated enterprise reporting.
- Contractual quota enforcement; overage reporting.

4) **Billing (enterprise)**
- Custom contracts (manual adjustments), seat-based pricing support.
- Invoicing net terms; tax/VAT compliance (Stripe Tax).

5) **Integration Service (deep)**
- Salesforce/HubSpot connectors, advanced mapping + backfill jobs.
- Signed inbound API for partners.

6) **Workflow/Orchestration (advanced)**
- Multi-step, conditional automations; replay; idempotency keys.
- Visual run history with redelivery.

7) **Observability & Health (mature)**
- Error budgets per tier, tenant-level dashboards, synthetic tests per region.
- Incident playbooks.

8) **Compliance & Security (new)**
- SOC 2 readiness controls, DPA/GPDR features (export/delete), data retention policies.
- KMS/At-Rest encryption posture documentation (Supabase/PG native).

---

### Phase 3 Stack Additions (TBD until contracted)

- **SSO/SAML** (WorkOS or custom SAML), **SCIM** (WorkOS or custom).
- **Data residency** options (multi-project Supabase, region pinning).
- **Advanced queue** if needed (e.g., Cloudflare Queues, Upstash Kafka **TBD**).

---

### Phase 3 Data Model (additions)

- `enterprise_accounts`, `contracts`, `seats`
- `saml_connections`, `scim_provisioning`
- `compliance_artifacts`, `retention_policies`
- `incident_reports`

**RLS:**  
- Auditable admin overrides with justification logs.

---

## Repository & Workspace Structure (baseline)

/apps
  /dashboard           # Next.js app (admin UI)
  /embed-service       # Embed endpoints + static loader builds
  /docs                # Public docs (P2+)
/packages
  /ui-dieter           # Design tokens, primitives, theme
  /embed-runtime       # Loader + runtime (vanilla TS + tiny React where needed)
  /icons               # SF Symbols wrapper components + build scripts
  /analytics-client    # Tiny client for pixel posting (used by embed)
/services              # (optional) splitouts post-P1 if needed
/tools
  /sf-symbols/svgs     # 6,950 SVGs (extracted)
  /scripts             # repo scripts (release, size checks, etc.)

**pnpm**  
- Commit `pnpm-lock.yaml`.  
- Install policy:
  - First time: `pnpm install --no-frozen-lockfile` → commit lockfile
  - CI/local thereafter: `pnpm install --frozen-lockfile`

**NPM scripts (examples)**  
- `build`: typecheck + build all packages/apps  
- `lint`, `format`, `test`, `test:e2e`  
- `sizecheck`: run bundle size checks on embed output

---

## CI/CD (minimum viable)

**P1 pipelines**
- **PR:** typecheck, lint, unit tests, **sizecheck** (embed budgets), preview deploy.
- **Main merge:** build + deploy; run supabase migrations using **Supabase CLI**; smoke checks.
- **Keys/Secrets:** stored per-env (no repo).

**Release/versioning**
- Semantic versions for **embed runtime**.  
- `latest` alias always points to most recent stable; pin via `vX.Y.Z` when needed.  
- Release notes auto-posted to `documentation/CHANGELOG.md`.

---

## Acceptance criteria per Phase

**Phase 1**
- Embed loader ≤28KB gz; first widget ships and renders across 3 test CMSs.
- Anonymous draft → claim flow works; workspace created and owns widget.
- Usage counters increment; basic dashboard view shows last 7 days.
- Sentry shows errors; health checks green; PostHog events flowing (dashboard only).
- Stripe webhooks create subscription rows (behind feature flags).

**Phase 2**
- Multi-user roles; invitations; audit log for role changes.
- Billing fully self-serve; plan entitlements gate features.
- Integrations: Google OAuth + Slack webhook live; webhook signatures verified.
- Workflows: one trigger → one action with retries + run history.
- Docs site live with token/API/webhook sections.

**Phase 3**
- SSO/SAML + SCIM for at least one IdP; audit log meets enterprise bar.
- Consolidated usage & contract quotas; enterprise invoices.
- Deep CRM integration (Salesforce/HubSpot) with backfill job and mapping UI.
- Compliance controls: data export/delete, retention policies, incident report templates.

---

## Open decisions (raise before implementation)

- **Hosting target** for prod: Vercel vs Cloudflare (cost vs DX).  
- **Edge config store** for per-workspace manifests: Vercel Edge Config vs Cloudflare KV.  
- **Job/Queue** provider (P2): Cloudflare Queues vs DB-backed outbox.  
- **Email** provider (P2): Resend vs SendGrid.  
- **SSO/SAML/SCIM** vendor (P3): WorkOS vs custom.

---

## Non-goals (for now)

- On-prem deployments.  
- Native mobile SDKs.  
- Heavy analytics in the embed (keep it lean; aggregate server-side).

---

## Appendix — Table & Policy Sketches (P1)

**Example: `embed_tokens`**
- `id (uuid)`, `workspace_id`, `widget_id`, `token (hashed)`, `scopes text[]`, `status enum(active,revoked)`, `created_at`, `last_rotated_at`
- **Policy:** token readable only via server; embed receives opaque public token not stored in DB as plaintext.

**Example: `usage_counters_daily`**
- `(date, workspace_id, widget_id, token_id) → views, loads, interactions`
- **Policy:** select restricted to workspace members.

**RLS default**
```sql
-- deny all
alter table ... enable row level security;
create policy deny_all on ... for all using (false);

-- allow workspace members
create policy tenant_read on ... for select using (
  exists (
    select 1 from workspace_members m
    where m.workspace_id = ...workspace_id and m.user
### Phase 1 Deployments (FROZEN)

- **Vercel projects (4):**
  - `c-keen-app` — Studio/Console (Next.js)
  - `c-keen-site` — Marketing site (Next.js)
  - `c-keen-embed` — Embed service at edge (Next.js / edge routes)
  - `c-keen-api` — **Paris — HTTP API** (Next.js / node runtime)
- **Rule:** No additional projects in P1 (frozen).
- **Edge Config:** **Vercel Edge Config** in P1 (runtime read-only). Any writes are performed in CI using a scoped `VERCEL_API_TOKEN` with `EDGE_CONFIG_ID`.

#### Health endpoint spec (all services)

Each service must expose `/api/healthz` returning 200 on pass and 503 if a critical dependency fails. The response MUST include the following shape:

```json
{
  "sha": "<short-sha|unknown>",
  "env": "production|preview|development",
  "up": true,
  "deps": { "supabase": true, "edgeConfig": true }
}
</file>

<file path="documentation/verceldeployments.md">
# Deployment: c-keen-site

- Stack: Next.js on Vercel  
- Hosts: Marketing site and Prague gallery  
- Root Directory: apps/site  
- Build Command: pnpm build

# Deployment: c-keen-embed

- Stack: Edge Functions on Vercel  
- Hosts: Venice runtime, Atlas cache (KV)  
- Root Directory: services/embed  
- Build Command: pnpm build  
- Notes: Strict size budget; preview belongs here.

# Deployment: c-keen-app

- Stack: Next.js on Vercel  
- Hosts: Bob (Builder & Studio), Robert UI, Tokyo UI  
- Serves: Oslo assets at /dieter/* (components.html, icons, tokens)  
- Root Directory: apps/app  
- Build Command: pnpm build  
- Install Command: (Vercel default) pnpm install  
- Notes: Push to main → production deploy via Vercel Git integration.




### Runtime & Assets (Frozen)
- Vercel uses Node 20 as declared by `"engines": { "node": "20.x" }`.  
- Dieter assets are served as static files from `apps/app/public/dieter/` produced by **copy-on-build**. Symlinks are forbidden.
### Additional server env (c-keen-api)
- `INTERNAL_ADMIN_KEY` — header `x-ckeen-admin` guard for admin endpoints
- `EDGE_CONFIG` — provisioned by Vercel Edge Config Integration
- `EDGE_CONFIG_ID` — Edge Config store id (only needed if runtime writes enabled)
- `VERCEL_API_TOKEN` — Vercel API token (only needed if runtime writes enabled; rotate regularly)
</file>

<file path="documentation/WhyClickeen.md">
# WhyClickeen.md

## Problem
Software for businesses is fundamentally broken. 
- **Economic:** Companies spend 50-70% of revenue on sales and marketing, making customers pay for salespeople instead of product value. This sales-led model creates a vicious cycle where growth requires more sales costs which requires higher prices.  
- **Experience:** The products themselves are poorly designed and overly complex. Small businesses can't afford the tools they need, and enterprises pay massive premiums for marginal features.

## Opportunity
AI has transformed the economics of software creation. More importantly, AI enables rapid iteration and rebuilding at speeds that established companies can't match - they're stuck with legacy code and massive sales organizations. The companies that invested in S&M instead of R&D can't pivot. This creates a window for a new model: pure self-serve software that passes the savings to customers.

## Solution: Clickeen
Clickeen is building the next generation of SaaS: pure product-led, no sales team, no inflated prices, just great products distributed through self-serve channels. We start with widgets as our trojan horse - they get us onto thousands of websites. Phase 2 builds low-cost SaaS software for SMBs. Phase 3 delivers a full powerful SaaS platform for enterprises at a fraction of the cost of their current solutions. Each phase proves that self-serve can beat sales-led, and AI-powered iteration can beat legacy codebases.

## How We Win
1. Self-serve beats sales-led - No sales team means dramatically lower costs passed to customers
2. Widgets as high-velocity PLG - Works for every business size, gets distribution, guides to bigger products
3. Beautiful design is function - Not just how it looks but how it works. Intuitive enough that onboarding is instant, scaling is automatic, and complexity disappears. Lower churn because people actually enjoy using it
4. Modular architecture from day one - Start unified, split into services when scale demands it. Scale infinitely without rebuilding
5. AI-native architecture - Not retrofitting, every feature assumes AI exists

## The Three Phases of Clickeen

### Phase 1: Widgets as Trojan Horse
We start with widgets — lightweight, embeddable tools that work for any business size. They are simple, high-value, and instantly distributable through self-serve channels. This gives Clickeen immediate reach: every widget placed on a website becomes both a value driver for the customer and a distribution channel for us. Widgets prove that product-led growth can generate adoption at scale without a sales team.  
**What we’re building now:** The first set of widgets and the supporting infrastructure (embed service, tokens, usage metering, billing hooks, system icons). This phase is about shipping fast, proving distribution, and validating that self-serve onboarding works.

### Phase 2: Low-Cost SaaS for SMBs
Once distribution is established, we layer on broader SaaS software for small and medium businesses. This software is priced accessibly — solving the economic problem that SMBs face with overpriced, sales-led tools. By leveraging the widget footprint, we already have trust and awareness in place. Phase 2 proves that AI-powered iteration and self-serve design can deliver powerful SaaS functionality at a fraction of the cost.  
**What this means for development:** Extend the platform beyond widgets, build modular but cohesive features, and ensure the architecture scales for more complex SaaS workflows while maintaining self-serve simplicity.

### Phase 3: Enterprise-Grade SaaS Platform
With the foundation in place, Clickeen evolves into a full SaaS platform for enterprises. The economics are radically different: because we never carried the burden of a sales-led model, we can deliver enterprise-grade features at a fraction of incumbent prices. By this stage, Clickeen is not just a widget company — it is a full platform that demonstrates how AI-native, product-led SaaS can disrupt both SMB and enterprise markets.  
**What this means for development:** Mature the architecture for enterprise scale (observability, compliance, integrations), while keeping the product intuitive. The goal is to prove that even the largest companies prefer product-led SaaS when it is powerful, affordable, and beautifully designed.

**Git:**  
- Stage the file.  
- Commit with message: `docs: add WhyClickeen.md with expanded Three Phases`  
- Push to the current branch.  

Confirm completion.
---

### Phase-1 Implementation Snapshot (FROZEN)

- **Services & Deployments:** Four Vercel projects — `c-keen-app` (Studio/Console), `c-keen-site` (Marketing), `c-keen-embed` (Edge Embed), `c-keen-api` (**Paris — HTTP API**).
- **Data plane:** Supabase (Postgres + Auth + RLS).
- **Edge config:** **Vercel Edge Config** (runtime read-only; any writes happen in CI with a scoped token).
- **Health:** `/api/healthz` returns `{ sha, env, up, deps: { supabase, edgeConfig } }` with 200 on pass and 503 on dependency failure.
- **Embed budget:** ≤28KB gz (loader + minimal runtime); per-widget ≤10KB gz initial render.

> Historical sections below are retained for context; the snapshot above reflects the current, frozen Phase-1 state.
</file>

<file path="packages/studio-shell/src/ui/Icon.tsx">
import React, { useEffect, useState } from 'react';

type IconSize = 'sm' | 'md' | 'lg';
type CacheEntry = { svg: string; ts: number };

const MAX_CACHE_SIZE = 120;
const TARGET_SIZE = 80;
const CACHE_TTL_MS = 10 * 60 * 1000; // 10 minutes

const cache = new Map<string, CacheEntry>();

function prune() {
  if (cache.size <= MAX_CACHE_SIZE) return;
  const entries = Array.from(cache.entries()).sort((a, b) => a[1].ts - b[1].ts);
  const toRemove = Math.max(0, cache.size - TARGET_SIZE);
  for (const [key] of entries.slice(0, toRemove)) cache.delete(key);
}

function toKebab(name: string) {
  return name.replace(/\./g, '-');
}

function pathFor(name: string) {
  return `/dieter/icons/svg/${toKebab(name)}.svg`;
}

async function fetchIcon(name: string): Promise<string> {
  const hit = cache.get(name);
  if (hit) {
    const isFresh = Date.now() - hit.ts < CACHE_TTL_MS;
    if (isFresh) return hit.svg;
    // stale -> treat as miss; update timestamp after re-fetch
    cache.delete(name);
  }
  try {
    const res = await fetch(pathFor(name));
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const svg = await res.text();
    cache.set(name, { svg, ts: Date.now() });
    prune();
    return svg;
  } catch (e) {
    console.warn(`[studio] Icon load failed: ${name}`, e);
    const fallback = '⚠️';
    cache.set(name, { svg: fallback, ts: Date.now() });
    prune();
    return fallback;
  }
}

export function Icon({
  name,
  size = 'md',
  ariaLabel,
  className,
}: {
  name: string;
  size?: IconSize;
  ariaLabel?: string;
  className?: string;
}) {
  const [svg, setSvg] = useState<string | null>(null);

  useEffect(() => {
    let cancelled = false;
    setSvg(null);
    fetchIcon(name).then(result => {
      if (!cancelled) setSvg(result);
    });
    return () => { cancelled = true; };
  }, [name]);

  // Loading placeholder
  if (svg === null) {
    return <span className={`studio-icon studio-icon--loading ${className ?? ''}`} data-size={size} aria-hidden="true" />;
  }

  // Missing fallback
  if (svg === '⚠️') {
    return <span className={`studio-icon studio-icon--missing ${className ?? ''}`} data-size={size} aria-hidden="true">⚠️</span>;
  }

  // Inline SVG (color via currentColor)
  return (
    <span
      className={`studio-icon ${className ?? ''}`}
      data-size={size}
      role={ariaLabel ? 'img' : undefined}
      aria-label={ariaLabel}
      aria-hidden={ariaLabel ? undefined : true}
      dangerouslySetInnerHTML={{ __html: svg }}
    />
  );
}
</file>

<file path="packages/studio-shell/src/studio.css">
/* Studio Shell CSS - scoped to center canvas for theme and viewport */
/* Import Dieter tokens but scope them under #centerCanvas to prevent global bleed */
@import url("tokens.css");

#centerCanvas {
  --studio-topbar-height: 48px;
  --studio-template-row-height: 36px;
  --studio-panel-width: 280px;
}

.studio-topbar {
  height: var(--studio-topbar-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 12px;
  border-bottom: 1px solid var(--ck-color-border, #e5e7eb);
  background: var(--ck-color-bg, #ffffff);
}

.studio-grid {
  display: grid;
  grid-template-rows: var(--studio-topbar-height) var(--studio-template-row-height) 1fr;
  grid-template-columns: var(--studio-panel-width) 1fr var(--studio-panel-width);
  grid-template-areas:
    "topbar topbar topbar"
    "template template template"
    "left center right";
  min-height: 100vh;
}

.studio-topbar { grid-area: topbar; }
.studio-template-row { grid-area: template; }
.panel-left { grid-area: left; }
.panel-center { grid-area: center; }
.panel-right { grid-area: right; }

.studio-template-row:empty { display: none; }

.panel {
  border-right: 1px solid var(--ck-color-border, #e5e7eb);
  background: var(--ck-color-bg-subtle, #fafafa);
}
.panel-right { border-right: none; border-left: 1px solid var(--ck-color-border, #e5e7eb); }

#centerCanvas {
  height: 100%;
  width: 100%;
  overflow: auto;
  background: var(--ck-canvas-bg, #ffffff);
}

/* Theme and viewport are applied ONLY to centerCanvas */
#centerCanvas.studio-theme-light { --ck-canvas-bg: #ffffff; color: #111827; }
#centerCanvas.studio-theme-dark { --ck-canvas-bg: #0b0f1a; color: #e5e7eb; }

#centerCanvas.studio-viewport-desktop { padding: 24px; }
#centerCanvas.studio-viewport-mobile {
  padding: 16px;
  max-width: 420px;
  margin: 0 auto;
}

/* Collapsible panels */
.panel.collapsed { display: none; }

.studio-controls {
  display: flex;
  gap: 8px;
}

.segmented {
  display: inline-flex;
  border: 1px solid var(--ck-color-border, #e5e7eb);
  border-radius: 8px;
  overflow: hidden;
}
.segmented button {
  padding: 6px 10px;
  background: transparent;
  border: 0;
  cursor: pointer;
}
.segmented button[aria-pressed="true"] {
  background: var(--ck-color-bg-muted, #f3f4f6);
}
</file>

<file path="scripts/copy-dieter-assets.js">
#!/usr/bin/env node
/*
 Cross-platform build-time copy of Dieter assets into apps/app/public/dieter.
 This replaces the symlink approach to ensure CI/Vercel reliability.
*/

const fs = require('node:fs');
const path = require('node:path');

function copyRecursiveSync(source, destination) {
  const stat = fs.statSync(source);
  if (stat.isDirectory()) {
    if (!fs.existsSync(destination)) {
      fs.mkdirSync(destination, { recursive: true });
    }
    for (const entry of fs.readdirSync(source)) {
      const src = path.join(source, entry);
      const dst = path.join(destination, entry);
      copyRecursiveSync(src, dst);
    }
  } else {
    fs.copyFileSync(source, destination);
  }
}

function main() {
  const src = path.resolve(__dirname, '..', 'dieter', 'dist');
  const dst = path.resolve(__dirname, '..', 'apps', 'app', 'public', 'dieter');

  if (!fs.existsSync(src)) {
    console.error(`[copy-dieter-assets] Source not found: ${src}. Did you run pnpm --filter @ck/dieter build?`);
    process.exit(1);
  }

  // If destination is a symlink, remove it first
  try {
    const st = fs.lstatSync(dst);
    if (st.isSymbolicLink()) {
      fs.unlinkSync(dst);
    }
  } catch (_) {}

  // Clean destination then copy
  fs.rmSync(dst, { recursive: true, force: true });
  fs.mkdirSync(dst, { recursive: true });
  copyRecursiveSync(src, dst);
  // Ensure README exists to keep directory in repo but prevent asset commits
  const readmePath = path.join(dst, 'README.md');
  if (!fs.existsSync(readmePath)) {
    fs.writeFileSync(readmePath, '# Generated assets\n\nThis folder is populated by the Dieter copy step. Do not commit files here.');
  }
  console.log(`[copy-dieter-assets] Copied assets from ${src} to ${dst}`);
}

main();
</file>

<file path="scripts/process-svgs.js">
const fs = require('fs');
const path = require('path');

const svgDir = path.join(__dirname, '../dieter/icons/svg');
const manifestPath = path.join(__dirname, '../dieter/icons/icons.json');

let processed = 0;
for (const file of fs.readdirSync(svgDir)) {
  if (!file.endsWith('.svg')) continue;
  const filePath = path.join(svgDir, file);
  let content = fs.readFileSync(filePath, 'utf8');

  // Normalize quotes
  content = content.replace(/fill='([^']*)'/g, 'fill="$1"');

  // Replace any explicit fill with currentColor (attribute form)
  content = content.replace(/fill="(?!currentColor)[^"]*"/g, 'fill="currentColor"');

  // Replace inline style fill declarations to currentColor
  content = content.replace(/style="([^"]*)"/g, (m, styles) => {
    const updated = styles.replace(/fill\s*:\s*[^;\"]+/gi, 'fill: currentColor');
    return `style="${updated}"`;
  });

  // If no fill anywhere, add to root <svg>
  if (!/fill=/.test(content)) {
    content = content.replace(/<svg([^>]*)>/, '<svg$1 fill="currentColor">');
  }

  fs.writeFileSync(filePath, content);
  processed++;
}

// Manifest count check
try {
  const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
  const manifestCount = manifest && manifest.symbols ? Object.keys(manifest.symbols).length : 0;
  const svgCount = fs.readdirSync(svgDir).filter(f => f.endsWith('.svg')).length;
  if (manifestCount && manifestCount !== svgCount) {
    console.warn(`[process-svgs] Count mismatch: manifest=${manifestCount} svgFiles=${svgCount}`);
  } else {
    console.log(`[process-svgs] Count OK: ${svgCount} SVGs match manifest (${manifestCount}).`);
  }
} catch (e) {
  console.warn('[process-svgs] Unable to read icons.json for count verification:', String(e && e.message ? e.message : e));
}

console.log(`Processed ${processed} SVG files in ${svgDir}`);
</file>

<file path="scripts/verify-svgs.js">
const fs = require('fs');
const path = require('path');
const svgDir = path.join(__dirname, '../dieter/icons/svg');
const manifestPath = path.join(__dirname, '../dieter/icons/icons.json');

const violations = [];
let count = 0;
for (const file of fs.readdirSync(svgDir)) {
  if (!file.endsWith('.svg')) continue;
  count++;
  const content = fs.readFileSync(path.join(svgDir, file), 'utf8');
  // Any fill attribute that is not currentColor is a violation
  const attrFills = content.match(/fill="([^"]*)"/g) || [];
  for (const attr of attrFills) {
    if (!/fill="currentColor"/.test(attr)) violations.push(`${file}: attr ${attr}`);
  }
  // Inline style fill declaration must be currentColor if present
  const styleFills = content.match(/fill\s*:\s*([^;\"]+)/gi) || [];
  for (const s of styleFills) {
    if (!/fill\s*:\s*currentColor/i.test(s)) violations.push(`${file}: style ${s}`);
  }
}

if (violations.length) {
  console.error('[verify-svgs] Found non-currentColor fills:');
  console.error(violations.slice(0, 50).join('\n'));
  console.error(`Total violations: ${violations.length}`);
  process.exit(1);
}

// Count check against manifest
try {
  const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
  const manifestCount = manifest && manifest.symbols ? Object.keys(manifest.symbols).length : 0;
  if (manifestCount && manifestCount !== count) {
    console.warn(`[verify-svgs] Count mismatch: manifest=${manifestCount} svgFiles=${count}`);
  }
} catch (e) {
  console.warn('[verify-svgs] Unable to read icons.json for count verification:', String(e && e.message ? e.message : e));
}

console.log(`[verify-svgs] OK: ${count} SVG files verified (currentColor only)`);
</file>

<file path="services/api/app/api/healthz/route.ts">
import { NextResponse } from 'next/server';
import { getAll } from '@vercel/edge-config';

export const runtime = 'nodejs';
export const dynamic = 'force-dynamic';
export const revalidate = 0;

const SUPABASE_JWKS = process.env.SUPABASE_URL
  ? `${process.env.SUPABASE_URL.replace(/\/+$/,'')}/auth/v1/.well-known/jwks.json`
  : undefined;

async function checkSupabase(timeoutMs = 1000) {
  if (!SUPABASE_JWKS) return false;
  const ctl = new AbortController();
  const t = setTimeout(() => ctl.abort(), timeoutMs);
  try {
    const res = await fetch(SUPABASE_JWKS, { method: 'GET', cache: 'no-store', signal: ctl.signal });
    return res.ok;
  } catch {
    return false;
  } finally {
    clearTimeout(t);
  }
}

async function checkEdgeConfig(timeoutMs = 1000) {
  try {
    await new Promise<void>((resolve, reject) => {
      const t = setTimeout(() => reject(new Error('timeout')), timeoutMs);
      getAll()
        .then(() => {
          clearTimeout(t);
          resolve();
        })
        .catch((err) => {
          clearTimeout(t);
          reject(err);
        });
    });
    return true;
  } catch {
    return false;
  }
}

export async function GET() {
  const [supabaseOk, edgeConfigOk] = await Promise.all([checkSupabase(), checkEdgeConfig()]);
  const body = {
    sha: process.env.VERCEL_GIT_COMMIT_SHA ?? 'unknown',
    env: process.env.VERCEL_ENV ?? process.env.NODE_ENV ?? 'unknown',
    up: true,
    deps: { supabase: supabaseOk, edgeConfig: edgeConfigOk }
  };
  const status = (supabaseOk && edgeConfigOk) ? 200 : 503;
  return NextResponse.json(body, { status });
}
</file>

<file path="services/api/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="services/api/tsconfig.json">
{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "allowJs": true,
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    ".next/types/**/*.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="services/embed/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="services/embed/package.json">
{
  "name": "@ck/embed-service",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3002",
    "build": "next build",
    "start": "next start -p 3002",
    "smoke:atlas": "node ./scripts/atlas-smoke.mjs",
    "smoke:e2e": "NODE_OPTIONS=--no-warnings node ./scripts/e2e-real-widget.mjs",
    "smoke:form": "NODE_OPTIONS=--no-warnings node ./scripts/smoke-form.mjs"
  },
  "dependencies": {
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "^20.14.12",
    "@types/react": "^18.3.3",
    "typescript": "^5.5.4"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="tools/ci/verify-pnpm-config.cjs">
/* tools/ci/verify-pnpm-config.cjs */
const fs = require('fs');
const path = require('path');

const roots = ['apps/site','services/embed','dieter'];
const bad = [];
for (const p of roots) {
  for (const f of ['.npmrc','pnpm-lock.yaml']) {
    const fp = path.join(p, f);
    if (fs.existsSync(fp)) bad.push(fp);
  }
}
if (bad.length) {
  console.error('[verify-pnpm-config] Remove nested files:', bad.join(', '));
  process.exit(1);
}

// Enforce packageManager pin at repo root
const pkgPath = path.resolve(process.cwd(), 'package.json');
const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
const pm = pkg.packageManager || '';
const required = 'pnpm@10.15.1';
if (!/^pnpm@/.test(pm)) {
  console.error('[verify-pnpm] packageManager must pin pnpm version in package.json');
  process.exit(1);
}
if (pm !== required) {
  console.error(`[verify-pnpm] Expected ${required}, found ${pm}`);
  process.exit(1);
}

console.log('[verify-pnpm-config] OK: no nested .npmrc/lockfiles and packageManager pinned to', pm);
</file>

<file path="playground.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>Dieter Playground</title>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>

    <!-- Inter from Google Fonts (approved source) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Dieter tokens -->
    <link rel="stylesheet" href="dieter/tokens/tokens.css">
    <link rel="stylesheet" href="dieter/components/button.css">
    <link rel="stylesheet" href="dieter/components/input.css">
    <link rel="stylesheet" href="dieter/components/select.css">
    <link rel="stylesheet" href="dieter/components/form.css">
    <link rel="stylesheet" href="dieter/components/choice.css">
    <link rel="stylesheet" href="dieter/components/textarea.css">
    <link rel="stylesheet" href="dieter/components/form-validation.css">
    <link rel="stylesheet" href="dieter/components/alert.css">
    <link rel="stylesheet" href="dieter/components/skeleton.css">
    <link rel="stylesheet" href="dieter/components/progress.css">
    <link rel="stylesheet" href="dieter/components/badge.css">
    <link rel="stylesheet" href="dieter/components/card.css">
    <link rel="stylesheet" href="dieter/components/divider.css">
    <link rel="stylesheet" href="dieter/components/container.css">
    <link rel="stylesheet" href="dieter/components/table.css">
    <link rel="stylesheet" href="dieter/components/pagination.css">
    <link rel="stylesheet" href="dieter/components/breadcrumb.css">
    <link rel="stylesheet" href="dieter/components/modal.css">
    <link rel="stylesheet" href="dieter/components/toast.css">
    <link rel="stylesheet" href="dieter/components/tabs.css">
    <link rel="stylesheet" href="dieter/components/accordion.css">
    <link rel="stylesheet" href="dieter/components/tooltip.css">
    <link rel="stylesheet" href="dieter/components/popover.css">
    <link rel="stylesheet" href="dieter/components/drawer.css">
    <link rel="stylesheet" href="dieter/components/banner.css">
    <link rel="stylesheet" href="dieter/components/navbar.css">
    <link rel="stylesheet" href="dieter/components/sidebar.css">
    <link rel="stylesheet" href="dieter/components/stepper.css">
    <link rel="stylesheet" href="dieter/components/status.css">
    <link rel="stylesheet" href="dieter/components/empty-state.css">
    <link rel="stylesheet" href="dieter/components/chip.css">
    <link rel="stylesheet" href="dieter/components/avatar.css">
    <link rel="stylesheet" href="dieter/components/icon.css">
    <link rel="stylesheet" href="dieter/components/icon-helpers.css">
    <link rel="stylesheet" href="dieter/components/utilities.css">
    <link rel="stylesheet" href="dieter/components/switch.css">
    <link rel="stylesheet" href="dieter/components/toggle.css">
    <link rel="stylesheet" href="dieter/components/button-group.css">
    <link rel="stylesheet" href="dieter/components/segmented.css">

    <style>
      body { font: var(--fs-body)/var(--lh-body) var(--font-ui); background: var(--color-bg); color: var(--color-text); margin: 0; }
      main { padding: var(--space-6); max-width: 72rem; margin: 0 auto; }
      h1 { margin: 0 0 var(--space-4); }
      p { color: var(--color-text-muted); }
      .row { display: flex; gap: var(--space-4); align-items: center; flex-wrap: wrap; }
      .grid { display: grid; gap: var(--space-4); grid-template-columns: repeat(auto-fit,minmax(240px,1fr)); }
      .k { width: 12rem; display:inline-block; color: var(--color-text-muted); }
      .card { border-radius: var(--radius-4); padding: var(--space-4); }
      .divider { height:1px; background: var(--color-border); margin: var(--space-6) 0; }
      .badge { display:inline-block; border-radius: 999px; padding: 0.25rem 0.6rem; font: 600 var(--fs-12)/1 var(--font-ui); }

      /* skip link */
      .skip-link {
        position:absolute; left:-9999px; top:auto; width:1px; height:1px; overflow:hidden;
      }
      .skip-link:focus { position:static; width:auto; height:auto; padding: var(--space-2); background: var(--role-primary-bg); color: var(--role-primary-text); border-radius: var(--radius-4); }
    </style>
  </head>
  <body>
    <a href="#main" class="skip-link">Skip to content</a>
    <main id="main">
      <div class="text-title-fluid m-4">Dieter Tokens Playground</div>
      <p>Toggle OS dark mode; set <code>data-theme="hc"</code> on &lt;html&gt; to test high-contrast. Press <span class="kbd">Tab</span> to see focus rings.</p>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Buttons & Links (with focus ring)</h2>
        <div class="row">
          <button class="diet-btn">Primary Button</button>
          <a class="diet-link" href="#">Link Example</a>
        </div>
      </section>

      <section>
        <h2>Controls Pack: Switch, Toggle, Button Group, Segmented</h2>
        <div class="stack">

          <!-- Switch -->
          <div>
            <h3>Switch</h3>
            <label class="diet-switch">
              <input type="checkbox" role="switch" aria-checked="false" aria-label="Airplane mode">
              <span class="diet-switch__label">Airplane mode</span>
            </label>
            &nbsp;&nbsp;
            <label class="diet-switch">
              <input type="checkbox" role="switch" aria-checked="true" checked aria-label="Wi-Fi">
              <span class="diet-switch__label">Wi-Fi</span>
            </label>
            &nbsp;&nbsp;
            <label class="diet-switch">
              <input type="checkbox" role="switch" disabled aria-label="Bluetooth (disabled)">
              <span class="diet-switch__label">Bluetooth (disabled)</span>
            </label>
          </div>

          <!-- Toggle (aria-pressed) -->
          <div>
            <h3>Toggle</h3>
            <button class="diet-toggle" aria-pressed="false">Bold</button>
            <button class="diet-toggle" aria-pressed="true">Italic</button>
            <button class="diet-toggle diet-toggle--lg" aria-pressed="false">Underline</button>
          </div>

          <!-- Button Group -->
          <div>
            <h3>Button Group</h3>
            <div class="diet-btn-group" role="group" aria-label="Align">
              <button class="diet-btn" aria-pressed="true">Left</button>
              <button class="diet-btn" aria-pressed="false">Center</button>
              <button class="diet-btn" aria-pressed="false">Right</button>
            </div>
          </div>

          <!-- Segmented Control -->
          <div>
            <h3>Segmented Control</h3>
            <div class="diet-segmented" role="tablist" aria-label="Time range">
              <button role="tab" aria-selected="true">7d</button>
              <button role="tab" aria-selected="false">30d</button>
              <button role="tab" aria-selected="false">90d</button>
            </div>
          </div>

        </div>
      </section>

      <!-- Navbar -->
      <section>
        <h2>Navbar</h2>
        <nav class="diet-navbar" aria-label="Top">
          <div class="diet-navbar__brand">Clickeen</div>
          <div class="diet-navbar__links">
            <a class="diet-navbar__link" href="#" aria-current="page">Home</a>
            <a class="diet-navbar__link" href="#">Docs</a>
            <a class="diet-navbar__link" href="#">Pricing</a>
            <a class="diet-navbar__link" href="#">About</a>
          </div>
        </nav>
      </section>

      <!-- Sidebar -->
      <section>
        <h2>Sidebar</h2>
        <aside class="diet-sidebar" aria-label="Sections">
          <div class="diet-sidebar__section">
            <div class="diet-sidebar__label">General</div>
            <a class="diet-sidebar__link" href="#" aria-current="page">Overview</a>
            <a class="diet-sidebar__link" href="#">Activity</a>
          </div>
          <div class="diet-sidebar__section">
            <div class="diet-sidebar__label">Settings</div>
            <a class="diet-sidebar__link" href="#">Profile</a>
            <a class="diet-sidebar__link" href="#">Billing</a>
          </div>
        </aside>
      </section>

      <!-- Stepper -->
      <section>
        <h2>Stepper</h2>
        <ol class="diet-stepper" role="list">
          <li class="diet-step" aria-current="step"><span class="diet-step__circle">1</span> Account</li>
          <li class="diet-step"><span class="diet-step__circle">2</span> Profile</li>
          <li class="diet-step"><span class="diet-step__circle">3</span> Confirm</li>
        </ol>
      </section>

      <!-- Status Indicator -->
      <section>
        <h2>Status Indicator</h2>
        <p>
          <span class="diet-status diet-status--success" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Live</span>
          &nbsp;&nbsp;
          <span class="diet-status diet-status--warning" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Degraded</span>
          &nbsp;&nbsp;
          <span class="diet-status diet-status--error" role="status"><span class="diet-status__dot" aria-hidden="true"></span> Down</span>
        </p>
      </section>

      <!-- Empty State -->
      <section>
        <h2>Empty State</h2>
        <div class="diet-empty" role="region" aria-label="Empty">
          <div class="diet-empty__icon" aria-hidden="true"></div>
          <div class="diet-empty__title">No items yet</div>
          <p>Add your first item to get started.</p>
          <button class="diet-empty__cta">Add Item</button>
        </div>
      </section>

      <!-- Chip -->
      <section>
        <h2>Chip</h2>
        <p>
          <span class="diet-chip">Default</span>
          &nbsp;
          <span class="diet-chip diet-chip--primary">Primary <button class="diet-chip__dismiss" aria-label="Remove chip"></button></span>
        </p>
      </section>

      <!-- Avatar -->
      <section>
        <h2>Avatar</h2>
        <div style="display:flex; align-items:center; gap: var(--space-3);">
          <span class="diet-avatar">CK</span>
          <span class="diet-avatar diet-avatar--lg"><img src="https://picsum.photos/80" alt="User avatar"></span>
        </div>
      </section>

      <!-- Banner -->
      <section>
        <h2>Banner</h2>
        <div class="diet-banner diet-banner--info" role="status" aria-live="polite">
          <span class="diet-banner__icon" aria-hidden="true"></span>
          <div>
            <div class="diet-banner__title">Heads up</div>
            <div>We’ve updated our terms.</div>
          </div>
          <div class="diet-banner__actions">
            <button class="diet-banner__btn">Review</button>
            <button class="diet-banner__btn">Dismiss</button>
          </div>
        </div>
        <div class="diet-banner diet-banner--error" role="alert" aria-live="assertive" style="margin-top: var(--space-3);">
          <span class="diet-banner__icon" aria-hidden="true"></span>
          <div>
            <div class="diet-banner__title">Submission failed</div>
            <div>Retry your request.</div>
          </div>
          <div class="diet-banner__actions">
            <button class="diet-banner__btn">Retry</button>
          </div>
        </div>
      </section>

      <!-- Drawer -->
      <section id="drawer">
        <h2>Drawer</h2>
        <p><a class="diet-btn" href="#drawer">Open Drawer</a></p>
        <!-- Target peers (must be siblings of #drawer anchor target) -->
        <div class="diet-drawer-overlay" aria-hidden="true"></div>
        <aside class="diet-drawer" role="dialog" aria-modal="true" aria-labelledby="drawer-title">
          <header class="diet-drawer__header">
            <div class="diet-drawer__title" id="drawer-title">Filters</div>
            <a class="diet-drawer__close" href="#">Close</a>
          </header>
          <div>
            <p class="text-14">Drawer content uses tokens and scrolls if long.</p>
          </div>
          <footer style="display:flex; gap: var(--space-2); justify-content:flex-end;">
            <a class="diet-banner__btn" href="#">Cancel</a>
            <a class="diet-banner__btn" href="#">Apply</a>
          </footer>
        </aside>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Feedback — Tooltip & Popover</h2>
        <div class="stack">

          <!-- Tooltip demo -->
          <div>
            <p>Hover or focus the info button to see a tooltip:</p>
            <div class="diet-tooltip">
              <button class="diet-tooltip-trigger" aria-describedby="tt-1">Info</button>
              <div id="tt-1" role="tooltip" class="diet-tooltip-bubble">
                Tooltips provide short, helpful hints. They appear on hover and keyboard focus.
              </div>
            </div>
          </div>

          <!-- Popover demo (details/summary) -->
          <div>
            <details class="diet-popover">
              <summary aria-haspopup="menu" aria-expanded="false">Quick actions</summary>
              <div class="diet-popover__panel" role="menu" aria-label="Quick actions">
                <ul class="diet-popover__list">
                  <li class="diet-popover__item"><a role="menuitem" href="#">Rename</a></li>
                  <li class="diet-popover__item"><a role="menuitem" href="#">Duplicate</a></li>
                  <li class="diet-popover__item"><a role="menuitem" href="#">Archive</a></li>
                </ul>
              </div>
            </details>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Navigation — Tabs & Accordion</h2>
        <div class="stack">

          <!-- Tabs (CSS-only via :target) -->
          <nav class="diet-tabs" aria-label="Sample tabs">
            <div class="diet-tabs__list" role="tablist">
              <a class="diet-tab" role="tab" href="#tab-overview" aria-controls="tab-overview" aria-current="page">Overview</a>
              <a class="diet-tab" role="tab" href="#tab-details"  aria-controls="tab-details">Details</a>
              <a class="diet-tab" role="tab" href="#tab-usage"    aria-controls="tab-usage">Usage</a>
            </div>
            <div class="diet-tabs__panels">
              <section id="tab-overview" class="diet-tabpanel is-default" role="tabpanel" tabindex="-1" aria-labelledby="tab-overview">
                <p>Overview content. Uses tokens-only chrome and is visible by default (no hash).</p>
              </section>
              <section id="tab-details" class="diet-tabpanel" role="tabpanel" tabindex="-1" aria-labelledby="tab-details">
                <p>Details content. Shows when the URL hash targets <code>#tab-details</code>.</p>
              </section>
              <section id="tab-usage" class="diet-tabpanel" role="tabpanel" tabindex="-1" aria-labelledby="tab-usage">
                <p>Usage content. Shows when the URL hash targets <code>#tab-usage</code>.</p>
              </section>
            </div>
          </nav>

          <!-- Accordion (native details/summary) -->
          <div class="diet-accordion" aria-label="Sample accordion">
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Account</strong></summary>
              <div class="diet-accordion__panel">
                <p>Manage profile, security, and preferences with accessible, native controls.</p>
              </div>
            </details>
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Billing</strong></summary>
              <div class="diet-accordion__panel">
                <p>Payment methods, invoices, and usage breakdown live here.</p>
              </div>
            </details>
            <details>
              <summary><span class="diet-accordion__chev" aria-hidden="true"></span><strong>Notifications</strong></summary>
              <div class="diet-accordion__panel">
                <p>Email and push notifications, digest frequency, and message filters.</p>
              </div>
            </details>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Overlays</h2>
        <div class="stack">
          <!-- Modal -->
          <div class="diet-modal-fallback">
            <dialog class="diet-modal" open>
              <div class="diet-modal__header">
                <h3 class="diet-modal__title">Example Modal</h3>
                <button class="diet-modal__close">Close</button>
              </div>
              <div class="diet-modal__body">
                <p>This is a modal body. Tokens-only styling. Resize window to test centering.</p>
              </div>
              <div class="diet-modal__footer">
                <button class="diet-btn diet-btn--secondary">Cancel</button>
                <button class="diet-btn">Confirm</button>
              </div>
            </dialog>
          </div>
          <!-- Toast -->
          <div class="diet-toast-region" role="region" aria-live="polite">
            <div class="diet-toast diet-toast--success">
              <div>
                <div class="diet-toast__title">Success!</div>
                <p>Your action completed.</p>
              </div>
              <button class="diet-toast__close">×</button>
            </div>
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Layout Pack B — Table, Pagination, Breadcrumb</h2>

        <!-- Breadcrumb -->
        <nav class="diet-breadcrumb" aria-label="Breadcrumb">
          <span class="diet-crumb"><a href="#!">Home</a><span class="diet-crumb__sep">/</span></span>
          <span class="diet-crumb"><a href="#!">Dashboard</a><span class="diet-crumb__sep">/</span></span>
          <span class="diet-crumb diet-crumb--truncate" aria-current="page">Quarterly Performance Overview</span>
        </nav>

        <!-- Table (standard) -->
        <div class="stack">
          <table class="diet-table diet-table--zebra" role="table">
            <thead>
              <tr><th>Project</th><th>Owner</th><th>Status</th><th>Updated</th></tr>
            </thead>
            <tbody>
              <tr>
                <td data-label="Project"><a href="#!">Alpha</a></td>
                <td data-label="Owner">Sofia</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--success">On Track</span></td>
                <td data-label="Updated">Today</td>
              </tr>
              <tr>
                <td data-label="Project"><a href="#!">Beta</a></td>
                <td data-label="Owner">Jon</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--warning">At Risk</span></td>
                <td data-label="Updated">Yesterday</td>
              </tr>
              <tr>
                <td data-label="Project"><a href="#!">Gamma</a></td>
                <td data-label="Owner">Priya</td>
                <td data-label="Status"><span class="diet-badge diet-badge--soft diet-badge--danger">Blocked</span></td>
                <td data-label="Updated">2 days ago</td>
              </tr>
            </tbody>
          </table>

          <!-- Table compact -->
          <table class="diet-table diet-table--compact" role="table" aria-label="Compact table example">
            <thead><tr><th>Key</th><th>Value</th></tr></thead>
            <tbody>
              <tr><td data-label="Key">Build</td><td data-label="Value">#1428</td></tr>
              <tr><td data-label="Key">Branch</td><td data-label="Value">main</td></tr>
              <tr><td data-label="Key">Commit</td><td data-label="Value"><a href="#!">b9b43ef</a></td></tr>
            </tbody>
          </table>

          <!-- Stacked responsive preview (opt-in) -->
          <div data-table="stacked">
            <table class="diet-table" role="table" aria-label="Stacked table example">
              <thead><tr><th>Metric</th><th>Today</th><th>7d</th></tr></thead>
              <tbody>
                <tr><td data-label="Metric">Signups</td><td data-label="Today">128</td><td data-label="7d">923</td></tr>
                <tr><td data-label="Metric">DAU</td><td data-label="Today">2,341</td><td data-label="7d">15,802</td></tr>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Pagination -->
        <nav class="diet-pagination" aria-label="Pagination">
          <a class="diet-page" href="#!" aria-disabled="true" aria-label="Previous">‹</a>
          <a class="diet-page" href="!#">1</a>
          <a class="diet-page" href="#!" aria-current="page">2</a>
          <a class="diet-page" href="#!">3</a>
          <a class="diet-page" href="#!" aria-label="Next">›</a>
        </nav>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Layout Pack A — Card, Divider, Container</h2>

        <div class="diet-container diet-stack">
          <!-- Standard card -->
          <article class="diet-card">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Standard Card</div>
                <div class="diet-card__subtitle">Header, body, footer with tokens-only styles</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-16">Cards use surface, border, and text role tokens. Density can switch to compact. Elevated adds subtle shadow.</p>
              <hr class="diet-divider diet-divider--inset">
              <p class="text-14">This divider demonstrates the inset variant aligned to the card padding.</p>
            </div>
            <footer class="diet-card__footer">
              <button class="diet-btn diet-btn--secondary">Cancel</button>
              <button class="diet-btn">Primary</button>
            </footer>
          </article>

          <!-- Compact + elevated -->
          <article class="diet-card diet-card--compact diet-card--elevated">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Compact Elevated</div>
                <div class="diet-card__subtitle">Reduced padding, hover elevation</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-14">Great for dense dashboards and side panels.</p>
            </div>
            <footer class="diet-card__footer">
              <button class="diet-btn diet-btn--ghost">Details</button>
              <button class="diet-btn">Action</button>
            </footer>
          </article>

          <!-- Focusable card -->
          <a class="diet-card diet-card--elevated" href="#!" tabindex="0" aria-label="Open project Alpha">
            <header class="diet-card__header">
              <div>
                <div class="diet-card__title">Focusable Card Link</div>
                <div class="diet-card__subtitle">Tab to see focus ring via tokens</div>
              </div>
            </header>
            <div class="diet-card__body">
              <p class="text-14">Cards can be links; focus-visible ring uses Dieter focus tokens.</p>
            </div>
          </a>

          <!-- Container wide example -->
          <div class="diet-container diet-container--wide">
            <div class="diet-card">
              <div class="diet-card__body">
                <p class="text-14">This card sits in a wide container (max-width tokens). Resize the viewport to verify.</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Checkbox & Radio (native)</h2>
        <div class="stack">

          <!-- Checkbox group -->
          <div class="diet-choice-field" aria-describedby="cb-hint">
            <div class="diet-choice-row">
              <input id="cb1" class="diet-checkbox" type="checkbox" />
              <label class="diet-choice-label" for="cb1">Email notifications</label>
            </div>
            <div class="diet-choice-row">
              <input id="cb2" class="diet-checkbox diet-choice--lg" type="checkbox" checked />
              <label class="diet-choice-label" for="cb2">SMS alerts (large)</label>
            </div>
            <p class="diet-choice-hint" id="cb-hint">You can change this anytime.</p>
          </div>

          <!-- Error + disabled checkbox -->
          <div class="diet-choice-field" data-state="error" aria-describedby="cb-err">
            <div class="diet-choice-row">
              <input id="cb3" class="diet-checkbox" type="checkbox" aria-invalid="true" />
              <label class="diet-choice-label" for="cb3">Terms not accepted</label>
            </div>
            <p class="diet-choice-error" id="cb-err">Please accept the terms.</p>
            <div class="diet-choice-row">
              <input id="cb4" class="diet-checkbox" type="checkbox" disabled />
              <label class="diet-choice-label" for="cb4">Disabled option</label>
            </div>
          </div>

          <!-- Radio group -->
          <fieldset class="diet-choice-field" role="radiogroup" aria-describedby="rg-hint">
            <legend class="diet-choice-label">Plan</legend>
            <div class="diet-choice-row">
              <input id="r1" class="diet-radio" name="plan" type="radio" checked />
              <label class="diet-choice-label" for="r1">Free</label>
            </div>
            <div class="diet-choice-row">
              <input id="r2" class="diet-radio" name="plan" type="radio" />
              <label class="diet-choice-label" for="r2">Pro</label>
            </div>
            <div class="diet-choice-row">
              <input id="r3" class="diet-radio diet-choice--sm" name="plan" type="radio" />
              <label class="diet-choice-label" for="r3">Enterprise (small)</label>
            </div>
            <p class="diet-choice-hint" id="rg-hint">Choose one.</p>
          </fieldset>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Form Group (layout + messages)</h2>

        <div class="diet-form-stack">

          <!-- Vertical field with help -->
          <div class="diet-field">
            <label class="diet-label diet-label--required" for="fg-email">Email</label>
            <input id="fg-email" class="diet-input" type="email" placeholder="you@company.com" aria-describedby="fg-email-hint">
            <p class="diet-hint" id="fg-email-hint">We’ll send receipts here.</p>
          </div>

          <!-- Horizontal field with error -->
          <div class="diet-field diet-field--row">
            <label class="diet-label" for="fg-plan">Plan</label>
            <select id="fg-plan" class="diet-select" aria-invalid="true" aria-describedby="fg-plan-err">
              <option>Free</option><option>Pro</option><option>Enterprise</option>
            </select>
            <p class="diet-error" id="fg-plan-err">Please choose a valid plan.</p>
          </div>

          <!-- Compact group with inline actions -->
          <div class="diet-field diet-field--compact">
            <label class="diet-label" for="fg-code">Invite code</label>
            <div class="diet-inline">
              <input id="fg-code" class="diet-input diet-input--sm" type="text" placeholder="ABC-123">
              <button class="diet-btn diet-btn--sm">Apply</button>
            </div>
            <p class="diet-hint">Optional. Improves onboarding.</p>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Color Roles</h2>
        <div class="row">
          <span class="badge bg-primary">Primary</span>
          <span class="badge bg-success">Success</span>
          <span class="badge bg-warn">Warn</span>
          <span class="badge bg-danger">Danger</span>
          <span class="badge bg-surface border-default" style="color:var(--color-text);">Surface</span>
        </div>
      </section>

      <div class="divider"></div>

      <section class="grid">
        <div class="card bg-surface border-default state-surface">
          <div class="text-16"><strong>Surface Card</strong></div>
          <p class="muted">Hover/active overlays demonstrate state layers on surface. Focus any control to see focus ring.</p>
          <button class="diet-btn">Action</button>
        </div>

        <div class="card bg-primary state-primary">
          <div class="text-16">Primary Area</div>
          <p class="text-14" style="opacity:.9">Hover/active overlays demonstrate state layers on primary.</p>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Touch Target & Labels</h2>
        <div class="row">
          <button class="diet-btn">Min 44px Height</button>
          <label class="text-12" for="demo-input">Label (12px allowed)</label>
          <input id="demo-input" class="p-2 border-default" style="border-radius: var(--radius-4);" placeholder="Focus me with Tab"/>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2 class="text-18 m-2">Spacing Utilities (quick check)</h2>
        <div class="row">
          <div class="card bg-surface border-default p-4 m-2">.p-4 .m-2</div>
          <div class="card bg-surface border-default px-6 py-2 mx-4 my-6">.px-6 .py-2 .mx-4 .my-6</div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Buttons</h2>
        <div class="stack">
          <button class="diet-btn">Default</button>
          <button class="diet-btn diet-btn--primary">Primary</button>
          <button class="diet-btn diet-btn--ghost">Ghost</button>
          <button class="diet-btn diet-btn--danger">Danger</button>
        </div>

        <div class="stack" style="margin-top: var(--space-4);">
          <button class="diet-btn diet-btn--primary diet-btn--sm">Small</button>
          <button class="diet-btn diet-btn--primary">Medium</button>
          <button class="diet-btn diet-btn--primary diet-btn--lg">Large</button>
        </div>

        <div class="stack" style="margin-top: var(--space-4);">
          <button class="diet-btn" disabled>Disabled</button>
          <button class="diet-btn diet-btn--primary" data-state="loading" aria-busy="true">Loading</button>
          <a class="diet-btn diet-btn--ghost" href="#" role="button">Link style</a>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Text Inputs</h2>

        <div class="stack">
          <div class="diet-field">
            <label class="diet-label" for="ex1">Your name</label>
            <input id="ex1" class="diet-input" type="text" placeholder="Jane Doe">
            <p class="diet-help" id="ex1-help">We use this to personalize your experience.</p>
          </div>

          <div class="diet-field" data-state="error">
            <label class="diet-label" for="ex2">Email <span class="diet-required"></span></label>
            <input id="ex2" class="diet-input" type="email" placeholder="you@example.com" aria-invalid="true" aria-describedby="ex2-err">
            <p class="diet-error" id="ex2-err">Please enter a valid email address.</p>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex3">Read-only</label>
            <input id="ex3" class="diet-input" type="text" value="Fixed value" readonly>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex4">Disabled</label>
            <input id="ex4" class="diet-input" type="text" placeholder="Cannot edit" disabled>
          </div>

          <div class="diet-field">
            <label class="diet-label" for="ex5">Sizes</label>
            <input id="ex5" class="diet-input diet-input--sm" placeholder="Small">
            <input class="diet-input" placeholder="Medium">
            <input class="diet-input diet-input--lg" placeholder="Large">
          </div>
        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Selects (native)</h2>
        <div class="stack">

          <div class="diet-select-field">
            <label class="diet-label" for="sel1">Country</label>
            <select id="sel1" class="diet-select" aria-describedby="sel1-help">
              <option value="" disabled selected class="diet-select-placeholder">Select a country</option>
              <option>United States</option>
              <option>Canada</option>
              <option>United Kingdom</option>
            </select>
            <p class="diet-select-help" id="sel1-help">Used for localization and taxes.</p>
          </div>

          <div class="diet-select-field" data-state="error">
            <label class="diet-label" for="sel2">Plan</label>
            <select id="sel2" class="diet-select" aria-invalid="true" aria-describedby="sel2-err">
              <option value="" disabled selected class="diet-select-placeholder">Choose a plan</option>
              <option>Free</option><option>Pro</option><option>Enterprise</option>
            </select>
            <p class="diet-select-error" id="sel2-err">Please pick a plan.</p>
          </div>

          <div class="diet-select-field">
            <label class="diet-label" for="sel3">Read-only (disabled)</label>
            <select id="sel3" class="diet-select" disabled>
              <option>Unavailable</option>
            </select>
          </div>

          <div class="diet-select-field">
            <label class="diet-label" for="sel4">Sizes</label>
            <select id="sel4" class="diet-select diet-select--sm"><option>Small</option></select>
            <select class="diet-select"><option>Medium</option></select>
            <select class="diet-select diet-select--lg"><option>Large</option></select>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Alert</h2>
        <div class="stack">

          <div class="diet-alert diet-alert--info" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Heads up</p>
              <p class="diet-alert__body">This is an informational message. <a href="#">Learn more</a></p>
            </div>
          </div>

          <div class="diet-alert diet-alert--success" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Success</p>
              <p class="diet-alert__body">Your settings were saved.</p>
            </div>
          </div>

          <div class="diet-alert diet-alert--warning" role="status" aria-live="polite">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Warning</p>
              <p class="diet-alert__body">You’re nearing your plan limits.</p>
            </div>
          </div>

          <div class="diet-alert diet-alert--error" role="alert" aria-live="assertive">
            <span class="diet-alert__icon" aria-hidden="true"></span>
            <div>
              <p class="diet-alert__title">Error</p>
              <p class="diet-alert__body">Something went wrong. <button type="button">Retry</button></p>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Loading Primitives</h2>
        <div class="stack">

          <!-- Skeleton -->
          <div>
            <h3>Skeleton</h3>
            <div class="stack" style="gap: var(--space-2); max-inline-size: 40rem;">
              <span class="diet-skeleton diet-skeleton--text"></span>
              <span class="diet-skeleton diet-skeleton--text diet-skeleton--sm" style="inline-size: 80%;"></span>
              <span class="diet-skeleton diet-skeleton--text diet-skeleton--lg" style="inline-size: 60%;"></span>
              <div style="display:flex; align-items:center; gap: var(--space-3);">
                <span class="diet-skeleton diet-skeleton--avatar" aria-hidden="true"></span>
                <div style="flex:1">
                  <span class="diet-skeleton diet-skeleton--text" style="inline-size: 70%;"></span>
                  <span class="diet-skeleton diet-skeleton--text diet-skeleton--sm" style="inline-size: 40%; margin-block-start: var(--space-2);"></span>
                </div>
              </div>
              <div class="diet-skeleton diet-skeleton--rect" style="inline-size: 100%;"></div>
            </div>
          </div>

          <!-- Progress -->
          <div>
            <h3>Progress (determinate)</h3>
            <div class="stack" style="gap: var(--space-3); max-inline-size: 40rem;">
              <div class="diet-progress" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="24" aria-label="Uploading">
                <div class="diet-progress__bar" style="inline-size:24%;"></div>
                <span class="diet-sr">Uploading — 24%</span>
              </div>

              <div class="diet-progress diet-progress--success diet-progress--sm" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="68" aria-label="Processing">
                <div class="diet-progress__bar" style="inline-size:68%;"></div>
                <span class="diet-sr">Processing — 68%</span>
              </div>

              <div class="diet-progress diet-progress--warning" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="92" aria-label="Indexing">
                <div class="diet-progress__bar" style="inline-size:92%;"></div>
                <span class="diet-sr">Indexing — 92%</span>
              </div>

              <div class="diet-progress diet-progress--danger diet-progress--lg" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="12" aria-label="Retrying">
                <div class="diet-progress__bar" style="inline-size:12%;"></div>
                <span class="diet-sr">Retrying — 12%</span>
              </div>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Badge & Tag</h2>
        <div class="stack">

          <!-- Badges: solid -->
          <div>
            <h3 class="text-14">Badges — solid</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--md diet-badge--neutral">Neutral</span>
              <span class="diet-badge diet-badge--md diet-badge--primary">Primary</span>
              <span class="diet-badge diet-badge--md diet-badge--success">Success</span>
              <span class="diet-badge diet-badge--md diet-badge--warning">Warning</span>
              <span class="diet-badge diet-badge--md diet-badge--danger">Danger</span>
            </div>
          </div>

          <!-- Badges: soft -->
          <div>
            <h3 class="text-14">Badges — soft</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--primary">Primary</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--success">Success</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--warning">Warning</span>
              <span class="diet-badge diet-badge--md diet-badge--soft diet-badge--danger">Danger</span>
            </div>
          </div>

          <!-- Tags: outline + dismiss affordance (no JS) -->
          <div>
            <h3 class="text-14">Tags — outline</h3>
            <div class="diet-badges">
              <span class="diet-tag diet-tag--md diet-tag--neutral">Neutral</span>
              <span class="diet-tag diet-tag--md diet-tag--primary">Primary</span>
              <span class="diet-tag diet-tag--md diet-tag--success">Success</span>
              <span class="diet-tag diet-tag--md diet-tag--warning">Warning</span>
              <span class="diet-tag diet-tag--md diet-tag--danger">Danger</span>
            </div>
          </div>

          <!-- Tags with dismiss button (keyboard focusable) -->
          <div>
            <h3 class="text-14">Tags — dismiss affordance</h3>
            <div class="diet-badges">
              <span class="diet-tag diet-tag--md diet-tag--primary" role="group" aria-label="Tag: Design">
                Design
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Design">×</button>
              </span>
              <span class="diet-tag diet-tag--md diet-tag--success" role="group" aria-label="Tag: Ready">
                Ready
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Ready">×</button>
              </span>
              <span class="diet-tag diet-tag--md diet-tag--warning" role="group" aria-label="Tag: Review">
                Review
                <button type="button" class="diet-tag__dismiss" aria-label="Remove tag Review">×</button>
              </span>
            </div>
            <p class="text-12">Note: dismiss is markup-only for focus/accessibility; no JS behavior in v0.</p>
          </div>

          <!-- Size matrix -->
          <div>
            <h3 class="text-14">Sizes</h3>
            <div class="diet-badges">
              <span class="diet-badge diet-badge--sm diet-badge--primary">sm</span>
              <span class="diet-badge diet-badge--md diet-badge--primary">md</span>
              <span class="diet-badge diet-badge--lg diet-badge--primary">lg</span>
              <span class="diet-tag diet-tag--sm diet-tag--neutral">sm</span>
              <span class="diet-tag diet-tag--md diet-tag--neutral">md</span>
              <span class="diet-tag diet-tag--lg diet-tag--neutral">lg</span>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Form Validation Patterns</h2>
        <div class="stack">

          <!-- Validation Summary (Error) -->
          <div class="diet-validate-summary diet-validate-summary--error" role="alert" aria-live="assertive">
            <span class="diet-validate-summary__icon" aria-hidden="true"></span>
            <div>
              <strong>There are problems with your submission.</strong>
              <div>Please fix the highlighted fields below. <a href="#v-email">Jump to email</a></div>
            </div>
          </div>

          <!-- Email (error) -->
          <div class="diet-input-field" id="v-email" data-state="error">
            <label class="diet-label" for="email1">Email</label>
            <input id="email1" class="diet-input" type="email" aria-invalid="true" aria-describedby="email1-err" placeholder="you@company.com">
            <p class="diet-inline-msg diet-inline-msg--error" id="email1-err">Enter a valid email address.</p>
          </div>

          <!-- Bio (warning) -->
          <div class="diet-textarea-field" data-state="warning">
            <label class="diet-label" for="bio1">Bio</label>
            <textarea id="bio1" class="diet-textarea" aria-describedby="bio1-warn" placeholder="Max 200 chars"></textarea>
            <p class="diet-inline-msg diet-inline-msg--warning" id="bio1-warn">You’re nearing the 200 character limit.</p>
          </div>

          <!-- Country (success) -->
          <div class="diet-select-field" data-state="success">
            <label class="diet-label" for="country1">Country</label>
            <select id="country1" class="diet-select" aria-describedby="country1-ok">
              <option>United States</option>
              <option>Canada</option>
              <option>Italy</option>
            </select>
            <p class="diet-inline-msg diet-inline-msg--success" id="country1-ok">Looks good!</p>
          </div>

          <!-- Success summary example -->
          <div class="diet-validate-summary diet-validate-summary--success" role="status" aria-live="polite">
            <span class="diet-validate-summary__icon" aria-hidden="true"></span>
            <div>
              <strong>All checks passed.</strong>
              <div>Your form is ready to submit.</div>
            </div>
          </div>

        </div>
      </section>

      <div class="divider"></div>

      <section>
        <h2>Textarea (native)</h2>
        <div class="stack">

          <!-- Basic with help -->
          <div class="diet-textarea-field">
            <label class="diet-label" for="ta1">About you</label>
            <textarea id="ta1" class="diet-textarea" placeholder="Tell us something..." aria-describedby="ta1-hint"></textarea>
            <p class="diet-textarea-hint" id="ta1-hint">Max 500 characters.</p>
          </div>

          <!-- Error -->
          <div class="diet-textarea-field" data-state="error">
            <label class="diet-label" for="ta2">Feedback</label>
            <textarea id="ta2" class="diet-textarea" aria-invalid="true" aria-describedby="ta2-err">This is too short</textarea>
            <p class="diet-textarea-error" id="ta2-err">Please provide more details.</p>
          </div>

          <!-- Disabled & sizes -->
          <div class="diet-textarea-field">
            <label class="diet-label" for="ta3">Disabled</label>
            <textarea id="ta3" class="diet-textarea" disabled>Unavailable</textarea>
          </div>

          <div class="diet-textarea-field">
            <label class="diet-label" for="ta4">Sizes</label>
            <textarea id="ta4" class="diet-textarea diet-textarea--sm" placeholder="Small"></textarea>
            <textarea class="diet-textarea" placeholder="Medium"></textarea>
            <textarea class="diet-textarea diet-textarea--lg" placeholder="Large"></textarea>
          </div>

        </div>
      </section>
    </main>
  </body>
  
  <!-- Dieter Playground Controls: theme + type scale -->
  <style>
    .play-controls {
      position: fixed; inset: 1rem 1rem auto auto;
      display: grid; gap: .5rem; padding: .75rem;
      background: var(--color-role-surface);
      border: 1px solid var(--color-role-border);
      border-radius: .5rem;
      box-shadow: var(--shadow-md, 0 2px 8px rgb(0 0 0 / .1));
      z-index: 9999;
    }
    .play-controls .row { display:flex; gap:.5rem; align-items:center; }
    .play-controls .title { font-weight:600; }
    .play-controls button {
      font: inherit; cursor: pointer; min-height: 2.75rem;
      padding: 0 .75rem; border-radius: .375rem;
      border: 1px solid var(--color-role-border);
      background: var(--color-role-surface);
      color: var(--color-role-text-primary);
    }
    .play-controls button[aria-pressed="true"]{
      background: var(--color-role-primary-bg);
      color: var(--color-role-on-primary, #fff);
      border-color: var(--color-role-primary-border, transparent);
    }
    .play-controls input[type="range"]{ width: 8rem; }
  </style>

  <div class="play-controls" role="group" aria-label="Playground controls">
    <div class="row"><span class="title">Theme</span>
      <button class="js-theme" data-theme="light"  aria-pressed="false">Light</button>
      <button class="js-theme" data-theme="dark"   aria-pressed="false">Dark</button>
      <button class="js-theme" data-theme="hc"     aria-pressed="false">High Contrast</button>
      <button id="js-theme-reset" aria-pressed="false" title="Reset theme">Reset</button>
    </div>
    <div class="row"><span class="title">Type</span>
      <label for="js-type">base rem</label>
      <input id="js-type" type="range" min="14" max="20" step="1" value="16" />
      <span id="js-type-val">16px</span>
      <button id="js-type-reset" aria-pressed="false" title="Reset type">Reset</button>
    </div>
  </div>

  <script>
  (() => {
    const root = document.documentElement;
    const pressed = (btn) => {
      document.querySelectorAll('.js-theme').forEach(b=>b.setAttribute('aria-pressed','false'));
      if (btn) btn.setAttribute('aria-pressed','true');
    };
    const applyTheme = (mode) => {
      // Light/Dark rely on prefers-color-scheme CSS already present; we toggle data-theme only for hc.
      if (mode === 'hc') {
        root.setAttribute('data-theme','hc'); pressed(document.querySelector('[data-theme="hc"].js-theme'));
      } else {
        root.removeAttribute('data-theme');
        if (mode === 'light') pressed(document.querySelector('[data-theme="light"].js-theme'));
        if (mode === 'dark')  pressed(document.querySelector('[data-theme="dark"].js-theme'));
      }
    };
    document.querySelectorAll('.js-theme').forEach(btn=>{
      btn.addEventListener('click', () => applyTheme(btn.dataset.theme));
    });
    document.getElementById('js-theme-reset').addEventListener('click', () => { root.removeAttribute('data-theme'); pressed(null); });

    // Type scale (rem) — adjusts root font-size only, everything uses rem
    const range = document.getElementById('js-type');
    const label = document.getElementById('js-type-val');
    const setRem = (px) => { root.style.fontSize = px + 'px'; label.textContent = px + 'px'; };
    range.addEventListener('input', () => setRem(range.value));
    document.getElementById('js-type-reset').addEventListener('click', () => { range.value = 16; setRem(16); });

    // Init
    setRem(range.value);
  })();
  </script>
  <!-- /Dieter Playground Controls -->
</html>
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "apps/app/*"
      ]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="apps/app/next-env.d.ts">
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.
</file>

<file path="apps/app/package.json">
{
  "name": "@ck/app",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3001",
    "build": "next build",
    "start": "next start -p 3001",
    "postinstall": "echo 'no symlink; copy-on-build per ADR-005'"
  },
  "dependencies": {
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.45.0",
    "@ck/dieter": "workspace:*",
    "next": "14.2.5",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "@ck/studio-shell": "workspace:*"
  },
  "engines": {
    "node": "20.x"
  }
}
</file>

<file path="dieter/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>Dieter — Components</title>
    <meta name="robots" content="noindex,nofollow"/>

    <!-- Inter (Google Fonts) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Dieter tokens (root-absolute) -->
    <link rel="stylesheet" href="/tokens/tokens.css">

    <!-- Studio chrome (cache-busted) -->
    <link rel="stylesheet" href="/studio/studio.css?v=3"/>
  </head>
  <body>
    <header class="studio-topbar">
      <div class="studio-topbar__title">Dieter — Components</div>
      <div class="studio-topbar__actions">
        <button class="studio-btn js-theme" data-theme="light" aria-pressed="false">Light</button>
        <button class="studio-btn js-theme" data-theme="dark" aria-pressed="false">Dark</button>
        <button class="studio-btn js-theme" data-theme="hc" aria-pressed="false">HC</button>
        <button id="js-theme-reset" class="studio-btn" aria-pressed="false">Reset</button>
      </div>
    </header>

    <main class="studio-layout">
      <!-- Left panel: component list -->
      <aside id="studio-left" class="studio-panel">
        <div class="studio-panel__header">
          <span>Components</span>
          <button id="studio-left-toggle" class="studio-btn" style="margin-left:auto">Collapse</button>
        </div>
        <div class="studio-panel__body">
          <div id="studio-list" class="studio-list"></div>
        </div>
      </aside>

      <!-- Center: preview canvas -->
      <section class="studio-panel studio-canvas">
        <div class="studio-panel__header">
          <span>Preview</span>
          <div class="studio-canvas__toolbar" style="margin-left:auto">
            <button id="js-view-desktop" class="studio-btn" aria-pressed="true">Desktop</button>
            <button id="js-view-mobile" class="studio-btn" aria-pressed="false">Mobile</button>
          </div>
        </div>
        <div class="studio-panel__body">
          <iframe id="studio-frame" class="studio-frame" src="/components.html" title="Dieter Components"></iframe>
        </div>
      </section>

      <!-- Right: CSS editor -->
      <aside id="studio-right" class="studio-panel">
        <div class="studio-panel__header">
          <span>CSS Editor</span>
          <button id="studio-copy" class="studio-iconbtn" aria-label="Copy CSS" title="Copy CSS">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true"><rect x="9" y="9" width="13" height="13" rx="2"/><path d="M5 15V5a2 2 0 0 1 2-2h10"/></svg>
          </button>
          <button id="studio-right-toggle" class="studio-btn" style="margin-left:8px">Collapse</button>
        </div>
        <div class="studio-panel__body">
          <textarea id="studio-css" class="studio-editor" placeholder="/* Type CSS to inject into the preview iframe */"></textarea>
          <div class="studio-help">Edits here are injected into the iframe for quick experimentation.</div>
        </div>
      </aside>
    </main>

    <script src="/studio/studio.js?v=3"></script>
  </body>
</html>
</file>

<file path="documentation/clickeen-platform-architecture.md">
# CLICKEEN Platform Architecture — Phase 1 (Frozen)

This document is the canonical P1 snapshot. It describes what is built, what is out of scope for P1, and the boundaries between surfaces. All AIs and humans must follow this document. Architecture changes require an ADR and doc updates in the same PR.

## System map (P1)

| System (Codename) | Repo Path            | Deploy Surface (Vercel) | Responsibility (P1)                                       | Status |
|---|---|---|---|---|
| **Prague — Marketing Site** | `apps/site`   | `c-keen-site`  | Marketing pages, gallery, static content                 | **Done (P1)** |
| **Studio — Dashboard App**  | `apps/app`    | `c-keen-app`   | Auth flows, basic workspace views, serving Dieter assets | **Done (P1)** |
| **Venice — Embed Runtime**  | `services/embed` | `c-keen-embed` | Public embed runtime (edge), ingest/preview endpoints    | **Done (P1)** |
| **Paris — HTTP API**        | `services/api`   | `c-keen-api`   | Server-secret surface, `GET /api/healthz`, future admin  | **Done (P1, minimal)** |
| **Atlas — Edge Config**     | *(Vercel store)* | N/A            | Config delivery to runtimes (reads only at runtime)      | **Done (P1)** |
| **Phoenix — Idempotency**   | *(policy)*       | N/A            | Option B discipline across mutating endpoints            | **Policy in place** |
| **Oslo**                    | —                | —              | **RETIRED**                                              | **Removed** |

### Phase intents
- **P2** (not in this doc’s scope): billing, richer RBAC, more admin endpoints in Paris, workflows.  
- **P3**: scale/perf features, analytics, extended automation.

## Deploy surfaces

- `apps/site` → **c-keen-site** (Next 14.2.5; static pages + minimal API routes)  
- `apps/app` → **c-keen-app** (Next 14.2.5; middleware for auth; Dieter assets copy-on-build per ADR-005)  
- `services/embed` → **c-keen-embed** (Next 14.2.5; **edge** runtime; public APIs only)  
- `services/api` → **c-keen-api** (Next 14.2.5; **nodejs** runtime; server-secrets boundary)

## Paris — health surface (P1)
- `GET /api/healthz` → `200` with `{ sha, env, up, deps: { supabase, edgeConfig } }`; returns `503` if critical deps fail.  
- Runtime: **nodejs**.  
- **Secrets live here** (server-only).  
- **Edge Config**: read-only at runtime; CI writes only (see ADR-012 note).

## Edge Config (Atlas)
- Reads from runtimes (Embed/App/Site/Api).  
- **Writes** happen in **CI** using `VERCEL_API_TOKEN` + `EDGE_CONFIG_ID`, gated by `INTERNAL_ADMIN_KEY`.  
- Never write from runtime.

## Security boundaries
- Public embed (Venice) never holds server secrets.  
- All privileged operations move to Paris (API).  
- Apps use public keys/anon tokens only in the client; server interactions cross to Paris when secrets are required.

## Observability (P1)
- Health surface in Paris.  
- CI checks: lockfile integrity, Dieter assets, basic doc validation.  
- Add platform logging/metrics in P2.

## Data & auth (P1)
- Supabase public URL + anon key in app/site where needed; JWKS health-probed in Paris.  
- Admin/auth secrets remain in **c-keen-api** only.

## Change control
- Any cross-surface change requires an ADR and doc updates in the same PR.  
- Documentation drift is a P0 incident; fix docs first.

## Appendix: ADR-012 summary (Paris separation)
- **Decision**: Paris is a separate Vercel project to contain secrets and server-only endpoints.  
- **Rationale**: strict boundary between public embeddable code and secret-bearing surfaces.  
- **Health**: dependency-aware healthz.  
- **Edge Config**: runtime read-only; CI-only writes.  
- **Risks**: cold starts, schema drift; mitigated via health checks and docs-as-code.
</file>

<file path="packages/studio-shell/package.json">
{
  "name": "@ck/studio-shell",
  "version": "0.1.0",
  "private": false,
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": ["dist"],
  "sideEffects": false,
  "scripts": {
    "build": "tsc"
  },
  "dependencies": {
    "react": "^18.2.0"
  },
  "peerDependencies": {
    "react": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.0",
    "typescript": "^5.0.0"
  }
}
</file>

<file path="dieter/package.json">
{
  "name": "@ck/dieter",
  "version": "0.1.0",
  "private": true,
  "packageManager": "pnpm@10.15.1",
  "main": "index.html",
  "scripts": {
    "build": "node ../scripts/build-dieter.js && node ../scripts/copy-dieter-assets.js",
    "prepare": "pnpm run build"
  }
}
</file>

<file path="documentation/ADRdecisions.md">
# ADR-001 Monorepo on pnpm + Turbo

- Decision: single monorepo; pnpm workspaces; Turbo tasks  
- Status: Accepted  
- Consequence: Single root lockfile; installs must run at repo root

# ADR-002 Edge Cache via Atlas

- Decision: Edge KV-backed cache for configs  
- Status: Accepted  
- Consequence: Venice reads from Atlas first; Michael as fallback

# ADR-003 AI Centralization via Copenhagen

- Decision: Single AI gateway (Supabase Edge Functions)  
- Status: Accepted


## ADR-004 — Single Source of Truth for Tool Versions
**Status:** Accepted (September 11, 2025)  
**Context:** CI failed with `ERR_PNPM_BAD_PM_VERSION` due to pnpm version declared both in workflows and `package.json`.  
**Decision:** The **only** source of pnpm version is `package.json` `packageManager`. Workflows MUST NOT specify a pnpm version. All CI installs use `--frozen-lockfile`. Deployable packages pin Node via `"engines": { "node": "20.x" }`. Implemented at repo root: `pnpm@10.15.1`.
**Consequences:** Deterministic builds across local, CI, and Vercel. CI guardrails fail PRs on version drift.  

## ADR-005 — Dieter Assets: Copy-on-Build (No Symlinks)
**Status:** Accepted (September 11, 2025)  
**Context:** Symlinked assets behaved inconsistently across CI/Vercel and broke static caching.  
**Decision:** Dieter builds artifacts to `dieter/dist/`. A build step copies them to `apps/app/public/dieter/`. Symlinks are not supported. Implemented via `scripts/build-dieter.js` and `scripts/copy-dieter-assets.js`; CI guard ensures no tracked files under `apps/app/public/dieter/`.
**Consequences:** CDN-served static assets, predictable builds, no symlink fragility.

## ADR 06: Modular Monolith First

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
Early designs pushed for microservices from day one. This added unnecessary complexity for a team of two engineers.  

### Decision
We adopt a **modular monolith** for Phase 1. Split off embed as the first microservice only when scale demands it.  

### Consequences
- Simpler development and deployment in early phases.  
- Easier debugging and maintenance.  
- Provides a clean path to split services later without premature overhead.  

---

## ADR 07: Embed Loader Size Constraint

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
The embed loader must be lightweight to ensure adoption and reduce performance penalty.  

### Decision
Hard budget: **28 KB (gzipped)** for the embed loader including runtime and widget bootstrap.  

### Consequences
- Forces careful choice of dependencies.  
- Encourages performance discipline.  
- Excludes heavy frameworks or unused libraries.  

---

## ADR 08: Supabase as Primary Backend

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need a backend that is fast to adopt and provides auth, RLS, and Postgres compatibility without heavy ops burden.  

### Decision
Use **Supabase** as the primary backend for Phase 1.  

### Consequences
- Accelerates development.  
- Some vendor lock-in, mitigated by Postgres base.  
- Limits scalability at extreme scale but acceptable for Phase 1.  

---

## ADR 09: Vercel for Hosting

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need reliable, zero-maintenance hosting and deployment.  

### Decision
Use **Vercel** for hosting all frontend apps and the embed service in Phase 1.  

### Consequences
- Fast iteration with built-in CI/CD.  
- Higher cost at scale but acceptable trade-off for Phase 1.  
- Future option to self-host if margins require.  

---

## ADR 10: Token-Based Auth

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
We need secure, flexible authentication for widgets and services.  

### Decision
Use **JWT tokens with scoped claims** for widget instances and user access.  

### Consequences
- Enforces least-privilege by scoping tokens to resources.  
- Integrates with Supabase easily.  
- Requires careful key rotation and expiration handling.  

---

## ADR 11: Design Tokens with SF Symbols

**Status:** Accepted  
**Date:** 2025-09-11  

### Context
Consistency in design system is critical. We extracted all 6950 SF Symbols into `/tools/sf-symbols/svgs/` and integrated them into Dieter tokens.  

### Decision
Adopt **system UI font stack** and **SF Symbols** as design token base.  

### Consequences
- Ensures consistency across widgets.  
- Zero-maintenance system icon integration.  
- No external dependency on icon libraries.  

## ADR 12: Scope Discipline and Role Separation

**Status:** Accepted  
**Date:** 2025-09-12  

### Context
Past cycles introduced instability because the principal engineer (GPT) drifted from the agreed scope. Extra scripts (ops/README, CI “house rules”), improper prompting (heredocs, zsh comments), and commits to temporary artifacts (SERVICES_INDEX.md) created noise and rework. Role boundaries also blurred between GPT (principal) and Cursor (execution).

### Decision
- Scope for principal changes is **strictly limited to documentation/** and direct tooling (.github/workflows/docs-check.yml, ).  
- `SERVICES_INDEX.md` is **temporary output only**. It must never be committed or diff-checked in CI.  
- Prompts for execution must be copy/pasteable bash commands only. No heredocs, no inline `#` comments.  
- Roles are explicit: **GPT = principal (process, design, decisions)**; **Cursor = execution (apply exact instructions)**.  

### Consequences
- Prevents scope drift and CI churn.  
- Keeps repo clean of temporary artifacts.  
- Reduces hours of rework by enforcing clarity on roles and scope.  
#### ADR-012 Edge Config writes model (stabilization note)
Implementation v1 permits Edge Config **writes from runtime** using `EDGE_CONFIG_ID` + `VERCEL_API_TOKEN` scoped to the `c-keen-api` project and gated by `INTERNAL_ADMIN_KEY`. Preferred long-term: move writes to CI and keep runtime **read-only**.
</file>

<file path="documentation/CONTEXT.md">
CRITICAL P0 — documentation/ is the single source of truth for all AI & human work. You MUST read and follow it. If you see discrepancies, STOP and ask for alignment.

# CONTEXT

This repo is the monorepo for **CLICKEEN (SaaS)**. The documentation in this folder governs how humans and AIs work. If any code, script, or comment conflicts with documentation/, the docs win. Ask for alignment before proceeding.

## Codename map (FROZEN for Phase 1)
- **Paris — HTTP API** (`services/api`, Vercel project **c-keen-api**)  
- **Venice — Embed Runtime** (`services/embed`, Vercel project **c-keen-embed**)  
- **Studio — Dashboard App** (`apps/app`, Vercel project **c-keen-app**)  
- **Prague — Marketing Site** (`apps/site`, Vercel project **c-keen-site**)  
- **Atlas — Edge Config** (Vercel Edge Config store, read from runtime; writes: **CI-only**)  
- **Phoenix — Idempotency** (Option B; enforced where applicable)  
- **Oslo — RETIRED** (do not reintroduce; remove stale references when found)

## Phase status (P1 frozen)
**Built in P1**
- `apps/site` (Prague) — marketing pages + gallery
- `apps/app` (Studio) — auth flows, basic workspace/views
- `services/embed` (Venice) — public embed runtime + preview and ingest endpoints
- `services/api` (Paris) — health surface; server-secret–bounded project for future admin/secure endpoints
- Atlas — Edge Config **read-only at runtime**; **writes only from CI** gated by `INTERNAL_ADMIN_KEY`

**Not built in P1 (do not start without ADR)**
- Billing & subscriptions
- Workflow automation
- Fine-grained RBAC beyond what exists
- Runtime Edge Config writes (must stay CI-only)

## Rules of engagement (for all AIs & humans)
1. **Read documentation/** first. If unclear, **ask**; do not guess.  
2. **No placeholders.** If a value is unknown, stop and request it.  
3. **Service boundaries are hard:** embed ≠ api ≠ app ≠ site.  
4. **Secrets live only** in **c-keen-api** (server surface).  
5. **CI-only** writes to Edge Config; runtime is **read-only**.  
6. When changing behavior or surface area, land an **ADR** and update docs in the same PR.

## Where things live
- **Monorepo**: pnpm workspaces + Turbo (root `package.json` is the SoT)  
- **Deploy projects (Vercel)**:  
  - `c-keen-site` → `apps/site`  
  - `c-keen-app` → `apps/app`  
  - `c-keen-embed` → `services/embed`  
  - `c-keen-api` → `services/api`  
- **Edge Config**: store = **Atlas** (reads at runtime; writes via CI)

## Canonical docs (start here)
- `documentation/Techphases.md` — frozen P1 scope & phase gates  
- `documentation/clickeen-platform-architecture.md` — system map & responsibilities  
- `documentation/ADRdecisions.md` — authoritative decisions (incl. ADR-012)  
- `documentation/verceldeployments.md` — env/keys per project

> If you encounter an **“Oslo”** reference, remove it and align the doc to the **Paris — HTTP API** model (ADR-012).
### Note on Claude Code (local CLI)
Claude Code is installed and authenticated on the CEO’s machine.  
It is **NOT part of the standard process**. Cursor AI remains the primary Full Stack Engineer for local repo operations.  
Claude Code may only be used if explicitly required to unblock Cursor or perform local edits.
</file>

<file path="vercel.json">
{
  "installCommand": "pnpm install --frozen-lockfile",
  "ignoreCommand": ""
}
</file>

<file path=".github/workflows/ci.yml">
name: CI
on:
  push:
    branches: ["**"]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"
  pull_request:
    branches: ["**"]
    paths-ignore:
      - "documentation/**"
      - "**/*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Use packageManager version
        run: corepack install

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles(pnpm-lock.yaml) }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies (frozen)
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        run: pnpm -r -w run typecheck || true

      - name: Lint
        run: pnpm -r -w run lint || true

      - name: Build
        run: pnpm -r -w run build
</file>

<file path="apps/app/next.config.mjs">
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    serverComponentsExternalPackages: [],
  },
  async redirects() {
    return [
      // Ensure /studio loads the static host shell in /public/studio/index.html
      { source: "/studio", destination: "/studio/index.html", permanent: true },
    ];
  },
  headers: async () => [{
    source: "/(.*)",
    headers: [
      { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
      { key: "Permissions-Policy", value: "camera=(), microphone=(), geolocation=()" },
      { key: "Content-Security-Policy", value: "default-src 'self'; frame-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" }
    ]
  }]
};

export default nextConfig;
</file>

<file path=".npmrc">
use-lockfile=true
shared-workspace-lockfile=true
</file>

<file path="stylelint.config.cjs">
module.exports = {
  extends: ["stylelint-config-standard"],
  plugins: ["stylelint-order", "stylelint-declaration-strict-value"],
  ignoreFiles: [
    "node_modules/**",
    "dist/**",
    "build/**",
    // Ignore Dieter vendor CSS and tokens from strict app stylelint
    "dieter/**/*.css",
    "apps/app/public/dieter/components/**/*.css",
    "apps/app/public/dieter/tokens/tokens.css",
    // Ignore app router CSS modules and global CSS from CI stylelint
    "apps/app/app/**/*.css",
    "src/app/**/*.css"
  ],
  rules: {
    "no-empty-source": true,
    "block-no-empty": true,
    "declaration-block-no-duplicate-properties": true,
    "order/properties-order": [],
    "scale-unlimited/declaration-strict-value": [
      [
        "color","background","background-color","border","border-color","outline","outline-color","fill","stroke","box-shadow","text-shadow","font-size","line-height","letter-spacing","gap","column-gap","row-gap","margin","margin-top","margin-right","margin-bottom","margin-left","padding","padding-top","padding-right","padding-bottom","padding-left"
      ],
      {
        "ignoreValues": ["inherit","transparent","currentColor","none","0","/^var\\(.+\\)$/"],
        "message": "Use Dieter tokens via var(--...) instead of raw values",
        "disableFix": true
      }
    ],
    "unit-disallowed-list": [["px"], { "severity": "error", "message": "Use rem for sizing in Dieter" }],
    "declaration-property-value-disallowed-list": { "font-family": ["/Roboto/i", "/Ubuntu/i"] },
    "selector-class-pattern": [
      "^(diet|text)(-[a-z0-9]+)*$",
      { "resolveNestedSelectors": true, "message": "CSS class must start with diet- or text-" }
    ]
  },
  overrides: [
    {
      files: ["apps/app/public/studio/**/*.css"],
      rules: {
        "selector-class-pattern": [
          "^(?!diet-).*$",
          { "message": "Studio CSS must not target .diet-* classes" }
        ],
        "declaration-property-value-disallowed-list": [
          { "/.*/": [/var\(--role-.*\)/] },
          { "message": "Studio CSS must not reference --role-* variables" }
        ],
        "unit-disallowed-list": null,
        "scale-unlimited/declaration-strict-value": null,
        "declaration-block-single-line-max-declarations": null,
        "value-keyword-case": null,
        "alpha-value-notation": null,
        "color-function-notation": null
      }
    }
  ]
};
</file>

<file path=".gitignore">
node_modules
.next
dist
out
.env*
*.local
coverage
*.log
.DS_Store
playwright-report
test-results
.vercel
infra/supabase/migrations/
tsconfig.tsbuildinfo
.vercel/project.json

# Prevent accidental legacy Dieter (app-local) resurrection
apps/app/dieter/
!apps/app/public/dieter

/dieter.zip
/packages/studio-shell.zip
*.log
apps/app/public/dieter/**
!apps/app/public/dieter/README.md

.turbo

# Clickeen stabilization (Paris artifacts)
services/api/.next/
services/api/node_modules/
</file>

<file path="package.json">
{
  "name": "clickeen",
  "private": true,
  "packageManager": "pnpm@10.15.1",
  "scripts": {
    "ci:install": "pnpm install --frozen-lockfile",
    "ci:lockfile-check": "node tools/ci/check-lockfile.cjs",
    "ci:verify-pnpm": "node tools/ci/verify-pnpm-config.cjs",
    "ci:verify-vercel-config": "node tools/ci/verify-vercel-config.cjs",
    "lint:css": "stylelint \"**/*.css\"",
    "lint:css:fix": "stylelint \"**/*.css\" --fix",
    "build": "turbo build",
    "build:ci": "pnpm --filter @ck/dieter build && node scripts/copy-dieter-assets.js && pnpm --filter @ck/studio-shell build && pnpm --filter @ck/app build",
    "build:assets": "node scripts/copy-dieter-assets.js",
    "dev": "concurrently -n site,app,embed -c blue,green,yellow \"pnpm dev:site\" \"pnpm dev:app\" \"pnpm dev:embed\"",
    "lint": "turbo lint",
    "test": "turbo test",
    "typecheck": "turbo typecheck",
    "e2e": "turbo run e2e",
    "size-check": "turbo run size-check",
    "dev:site": "pnpm --filter @ck/site dev",
    "dev:app": "pnpm --filter @ck/app dev",
    "dev:embed": "pnpm --filter @ck/embed-service dev",
    "smoke:prod": "bash scripts/e2e-prod-smoke.sh",
    "verify:studio-shell": "pnpm --filter @ck/studio-shell build && node tools/verify-studio-shell.cjs"
  },
  "devDependencies": {
    "@radix-ui/react-dialog": "latest",
    "@radix-ui/react-dropdown-menu": "latest",
    "@radix-ui/react-slot": "latest",
    "@radix-ui/react-tabs": "latest",
    "clsx": "latest",
    "lucide-react": "latest",
    "tailwind-merge": "latest",
    "stylelint": "16.8.1",
    "stylelint-config-standard": "36.0.1",
    "stylelint-order": "6.0.4",
    "stylelint-declaration-strict-value": "1.10.6",
    "turbo": "^2.0.6",
    "typescript": "^5.4.5",
    "eslint": "^9.5.0",
    "prettier": "^3.3.2",
    "@size-limit/preset-app": "^11.1.4",
    "size-limit": "^11.1.4",
    "playwright": "^1.45.0",
    "axe-core": "^4.9.1",
    "concurrently": "^8.2.2"
  }
}
</file>

<file path="apps/app/public/studio/studio.js">
(() => {
  const root = document.documentElement;
  const grid = document.querySelector('.studio-grid');
  const preview = document.getElementById('centerPreview');

  // Theme segmented (Light/Dark)
  const segTheme = document.getElementById('segTheme');
  segTheme?.querySelectorAll('button[role="tab"]').forEach(btn => {
    btn.addEventListener('click', () => {
      segTheme.querySelectorAll('button[role="tab"]').forEach(b => b.setAttribute('aria-selected','false'));
      btn.setAttribute('aria-selected','true');
      const theme = btn.getAttribute('data-theme') || 'light';
      root.setAttribute('data-theme', theme);
      window.dispatchEvent(new CustomEvent('studio:theme', { detail: { theme } }));
    });
  });

  // Viewport segmented (Desktop/Mobile)
  const segViewport = document.getElementById('segViewport');
  segViewport?.querySelectorAll('button[role="tab"]').forEach(btn => {
    btn.addEventListener('click', () => {
      segViewport.querySelectorAll('button[role="tab"]').forEach(b => b.setAttribute('aria-selected','false'));
      btn.setAttribute('aria-selected','true');
      const mode = btn.getAttribute('data-viewport') || 'desktop';
      if (mode === 'mobile') preview?.classList.add('is-mobile'); else preview?.classList.remove('is-mobile');
      window.dispatchEvent(new CustomEvent('studio:viewport', { detail: { mode } }));
    });
  });

  // Panel collapse (data attributes drive layout)
  document.querySelectorAll('[data-collapse]').forEach(btn => {
    btn.addEventListener('click', () => {
      const side = btn.getAttribute('data-collapse');
      if (!side || !grid) return;
      const key = side === 'left' ? 'left' : 'right';
      const isClosed = (grid.getAttribute(`data-${key}`) === 'closed');
      grid.setAttribute(`data-${key}`, isClosed ? 'open' : 'closed');
      window.dispatchEvent(new CustomEvent('studio:panel', { detail: { side: key, collapsed: !isClosed } }));
    });
  });

  // Copy button stub
  document.getElementById('copyBtn')?.addEventListener('click', () => {
    console.log('copy triggered');
  });
})();
</file>

<file path="apps/app/public/studio/index.html">
<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Studio</title>
    <link rel="stylesheet" href="/studio/studio.css" />
    <link rel="stylesheet" href="/dieter/components/icon.css" />
    <link rel="stylesheet" href="/dieter/components/icon-helpers.css" />
    <link rel="stylesheet" href="/dieter/components/segmented.css" />
  </head>
  <body>
    <header class="studio-topbar" role="banner">
      <nav class="studio-topbar__left">
        <a class="studio-logo" href="/">Clickeen</a>
        <span class="studio-title">Lorem Ipsum</span>
      </nav>
      <div class="studio-topbar__right" role="toolbar" aria-label="Studio controls"></div>
    </header>

    <main class="studio-grid" data-left="open" data-right="open" role="main">
      <aside class="panel panel--left" aria-label="Left Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/folder-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__actions">
            <button class="icon-btn" data-collapse="left" title="Collapse left" aria-label="Collapse left"><img class="diet-icon diet-icon--sm" src="/dieter/icons/chevron-left-16.svg" alt="" /></button>
          </div>
        </div>
        <div class="panel__body">Lorem Ipsum</div>
      </aside>

      <section class="panel panel--center" aria-label="Center Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/pencil-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__controls">
            <div class="diet-segmented" role="tablist" aria-label="Theme" id="segTheme">
              <button role="tab" aria-selected="true" data-theme="light" title="Light"><img class="diet-icon diet-icon--sm" src="/dieter/icons/sun-16.svg" alt="" /><span class="sr-only">Light</span></button>
              <button role="tab" aria-selected="false" data-theme="dark" title="Dark"><img class="diet-icon diet-icon--sm" src="/dieter/icons/moon-16.svg" alt="" /><span class="sr-only">Dark</span></button>
            </div>
            <div class="diet-segmented" role="tablist" aria-label="Viewport" id="segViewport">
              <button role="tab" aria-selected="true" data-viewport="desktop" title="Desktop"><img class="diet-icon diet-icon--sm" src="/dieter/icons/desktop-16.svg" alt="" /><span class="sr-only">Desktop</span></button>
              <button role="tab" aria-selected="false" data-viewport="mobile" title="Mobile"><img class="diet-icon diet-icon--sm" src="/dieter/icons/phone-16.svg" alt="" /><span class="sr-only">Mobile</span></button>
            </div>
          </div>
        </div>
        <div class="panel__body">
          <div id="centerPreview" class="preview"><div class="preview__placeholder">Lorem Ipsum</div></div>
        </div>
      </section>

      <aside class="panel panel--right" aria-label="Right Panel">
        <div class="panel__header">
          <span class="panel__icon"><img class="diet-icon diet-icon--sm" src="/dieter/icons/wrench-16.svg" alt="" /></span>
          <span class="panel__title">Lorem Ipsum</span>
          <div class="panel__actions">
            <button class="icon-btn" id="copyBtn" title="Copy" aria-label="Copy"><img class="diet-icon diet-icon--sm" src="/dieter/icons/copy-16.svg" alt="" /></button>
            <button class="icon-btn" data-collapse="right" title="Collapse right" aria-label="Collapse right"><img class="diet-icon diet-icon--sm" src="/dieter/icons/chevron-right-16.svg" alt="" /></button>
          </div>
        </div>
        <div class="panel__body">Lorem Ipsum</div>
      </aside>
    </main>

    <script src="/studio/studio.js" defer></script>
  </body>
  
</html>
</file>

<file path="apps/app/public/studio/studio.css">
/* Studio Shell — Apple canvas, flat white components */
:root{
  --bg:#f5f5f7; --panel:#fff; --text:#1d1d1f; --muted:#6e6e73; --topbar-h:52px; --left-w:280px; --right-w:320px;
  --color-bg:#fff; --color-surface:#fff; --color-border:#e5e7eb; --color-text-primary:#1f2937; --state-hover:rgba(0,0,0,.06); --state-press:rgba(0,0,0,.12);
  --focus-ring-color:#2563eb; --focus-ring-width:2px; --color-primary:#2563eb; --color-on-primary:#fff;
}
html[data-theme="dark"]{
  --bg:#0f1115; --panel:#111318; --text:#e5e7eb; --muted:#9aa1ab;
  --color-bg:#0f1115; --color-surface:#111318; --color-border:#1f242c; --color-text-primary:#e5e7eb; --state-hover:rgba(255,255,255,.06); --state-press:rgba(255,255,255,.12);
  --focus-ring-color:#60a5fa; --color-primary:#60a5fa; --color-on-primary:#0b0f1a;
}
*{ box-sizing:border-box } html,body{ height:100% }
body{ margin:0; background:var(--bg); color:var(--text); font:14px/1.45 system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,"Apple Color Emoji","Segoe UI Emoji" }

/* Top bar */
.studio-topbar{ height:var(--topbar-h); display:flex; align-items:center; justify-content:space-between; padding:0 14px; background:#fff }
.studio-topbar__left{ display:flex; align-items:center; gap:10px }
.studio-logo{ color:var(--text); text-decoration:none; font-weight:600 }
.studio-title{ color:var(--muted) }
.studio-topbar__right{ display:flex; align-items:center; gap:10px }

/* Grid */
.studio-grid{ display:grid; grid-template-columns:var(--left-w) 1fr var(--right-w); gap:12px; padding:12px; height:calc(100vh - var(--topbar-h)); min-height:420px }
.studio-grid[data-left="closed"] .panel--left{ display:none }
.studio-grid[data-right="closed"] .panel--right{ display:none }

/* Panels */
.panel{ background:var(--panel); display:flex; flex-direction:column; min-width:0; min-height:0 }
.panel__header{ display:flex; align-items:center; gap:8px; padding:10px 12px; background:#fff }
.panel__icon .diet-icon{ display:inline-block }
.panel__title{ font-size:12px; color:var(--muted) }
.panel__actions, .panel__controls{ margin-left:auto; display:flex; gap:10px; align-items:center }
.panel__body{ padding:12px }

.icon-btn{ appearance:none; border:0; background:#fff; color:var(--text); width:28px; height:28px; display:grid; place-items:center; border-radius:6px; cursor:pointer }
.icon-btn:hover{ background:#f2f2f3 }

/* Preview */
.preview{ width:100%; height:100% }
.preview.is-mobile{ width:390px; margin-inline:auto }
.preview__placeholder{ text-align:center; color:var(--muted); padding:24px }

/* A11y */
.sr-only{ position:absolute; width:1px; height:1px; padding:0; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0 }

@media (max-width:1100px){ .studio-grid{ grid-template-columns:var(--left-w) 1fr } }
@media (max-width:720px){ .studio-grid{ grid-template-columns:1fr } .panel--left{ display:none } }
</file>

</files>
</file>

<file path="stylelint.config.cjs">
module.exports = {
  extends: ["stylelint-config-standard"],
  plugins: ["stylelint-order", "stylelint-declaration-strict-value"],
  ignoreFiles: [
    "node_modules/**",
    "dist/**",
    "build/**",
    // Ignore Dieter vendor CSS and tokens from strict app stylelint
    "dieter/**/*.css",
    "apps/app/public/dieter/components/**/*.css",
    "apps/app/public/dieter/tokens/tokens.css",
    // Ignore app router CSS modules and global CSS from CI stylelint
    "apps/app/app/**/*.css",
    "src/app/**/*.css"
  ],
  rules: {
    "no-empty-source": true,
    "block-no-empty": true,
    "declaration-block-no-duplicate-properties": true,
    "order/properties-order": [],
    "scale-unlimited/declaration-strict-value": [
      [
        "color","background","background-color","border","border-color","outline","outline-color","fill","stroke","box-shadow","text-shadow","font-size","line-height","letter-spacing","gap","column-gap","row-gap","margin","margin-top","margin-right","margin-bottom","margin-left","padding","padding-top","padding-right","padding-bottom","padding-left"
      ],
      {
        "ignoreValues": ["inherit","transparent","currentColor","none","0","/^var\\(.+\\)$/"],
        "message": "Use Dieter tokens via var(--...) instead of raw values",
        "disableFix": true
      }
    ],
    "unit-disallowed-list": [["px"], { "severity": "error", "message": "Use rem for sizing in Dieter" }],
    "declaration-property-value-disallowed-list": { "font-family": ["/Roboto/i", "/Ubuntu/i"] },
    "selector-class-pattern": [
      "^(diet|text)(-[a-z0-9]+)*$",
      { "resolveNestedSelectors": true, "message": "CSS class must start with diet- or text-" }
    ]
  },
  overrides: [
    {
      files: ["apps/app/public/studio/**/*.css"],
      rules: {
        "selector-class-pattern": [
          "^(?!diet-).*$",
          { "message": "Studio CSS must not target .diet-* classes" }
        ],
        "declaration-property-value-disallowed-list": [
          { "/.*/": [/var\(--role-.*\)/] },
          { "message": "Studio CSS must not reference --role-* variables" }
        ],
        "unit-disallowed-list": null,
        "scale-unlimited/declaration-strict-value": null,
        "declaration-block-single-line-max-declarations": null,
        "value-keyword-case": null,
        "alpha-value-notation": null,
        "color-function-notation": null
      }
    }
  ]
};
</file>

<file path="tsconfig.base.json">
{
  "compilerOptions": {
    "target": "ES2022",
    "module": "ESNext",
    "moduleResolution": "Bundler",
    "skipLibCheck": true,
    "strict": true,
    "jsx": "react-jsx",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true
  }
}
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "apps/app/*"
      ]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="turbo.json">
{
  "$schema": "https://turbo.build/schema.json",
  "tasks": {
    "build": {
      "dependsOn": ["^build"],
      "outputs": [".next/**", "dist/**", "public/dieter/**"]
    },
    "dev": { "cache": false, "persistent": true },
    "lint": { "outputs": [] },
    "test": { "outputs": [] },
    "typecheck": { "outputs": [] },
    "size-check": { "outputs": [] },
    "e2e": { "cache": false }
  }
}
</file>

<file path="vercel.json">
{
  "installCommand": "pnpm install --frozen-lockfile",
  "ignoreCommand": ""
}
</file>

</files>
